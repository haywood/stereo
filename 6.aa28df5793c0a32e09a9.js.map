{"version":3,"sources":["webpack:///./src/web/controls.scss","webpack:///./src/web/inputs.ts","webpack:///./src/web/controls.ts","webpack:///./src/web/controls.html","webpack:///./src/web/controls.scss?633a"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","temp","persistenceEnabled","URLSearchParams","window","location","search","get","hash","substr","atob","Input","constructor","id","_value","persistent","this","has","parse","updateHash","BehaviorSubject","newValue","str","stringify","value","set","document","btoa","toString","initFromOrWriteToHash","subject","newSubject","asObservable","oldValue","next","event","localStorage","setItem","TextInput","super","text","ToggleInput","on","off","disabled","test","Error","bool","inputs","pipe","theta","h","l","animate","mic","fullscreen","fullscreenEnabled","Controls","createElement","domElement","style","opacity","contains","activeElement","input","Object","values","setupText","setupToggle","stream","subscribe","body","requestFullscreen","fullscreenElement","exitFullscreen","selector","querySelector","el","assert","onchange","size","length","toggle","onclick","display","onkeydown","repeat","target","key","innerHTML","html","setupInputs","setupKeyboardShortcuts","api","content","__esModule","default","options","exported","locals"],"mappings":"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","file":"6.aa28df5793c0a32e09a9.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\"]);\n// Module\nexports.push([module.id, \"#controls{opacity:0}#inputs{align-items:flex-end;box-sizing:border-box;display:flex;flex-flow:column wrap;justify-content:flex-start;padding:16px;position:absolute;right:0;top:0}#inputs span,#inputs i{padding-bottom:8px}#media{bottom:0;box-sizing:border-box;display:flex;flex-flow:row wrap;padding:32px;position:absolute;width:100%}#media i.material-icons{cursor:pointer;display:'none';font-size:36px}.spacer{flex:1}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Subject, BehaviorSubject } from 'rxjs';\n\ntype Change<T> = {\n    newValue: T;\n    oldValue?: T;\n    event?: Event;\n};\n\nconst query = new URLSearchParams(window.location.search);\nconst persistenceEnabled = query.get('p') != '0';\nconst hash = (() => {\n    const temp = window.location.hash.substr(1);\n    return new URLSearchParams(temp ? atob(temp) : '');\n})();\n\ntype TextInputId = 'pipe' | 'theta' | 'h' | 'l';\n\nexport abstract class Input<T> {\n    private readonly subject: Subject<Change<T>>;\n\n    constructor(\n        readonly id: string,\n        private _value: T,\n        private readonly persistent: boolean\n    ) {\n        if (persistenceEnabled) {\n            this.initFromOrWriteToHash();\n        } else {\n            this.persistent = false;\n        }\n        this.subject = this.newSubject();\n    }\n\n    initFromOrWriteToHash = () => {\n        if (this.persistent && hash.has(this.id)) {\n            this._value = this.parse(hash.get(this.id));\n        } else if (this.persistent) {\n            this.updateHash();\n        }\n    };\n\n    newSubject = () => new BehaviorSubject({ newValue: this._value });\n\n    protected abstract parse(str: string): T;\n    protected abstract stringify(value: T): string;\n\n    get stream() {\n        return this.subject.asObservable();\n    }\n\n    get value() {\n        return this._value;\n    }\n\n    set value(newValue: T) {\n        const oldValue = this.value;\n        this._value = newValue;\n        this.subject.next({ newValue, oldValue, event: window.event });\n        if (this.persistent) {\n            const str = this.stringify(newValue);\n            localStorage.setItem(`inputs.${this.id}`, str);\n            this.updateHash();\n        }\n    }\n\n    private updateHash = () => {\n        const str = this.stringify(this.value);\n        hash.set(this.id, str);\n        document.location.hash = btoa(hash.toString());\n\n    };\n}\n\nexport class TextInput extends Input<string> {\n    readonly disabled = false;\n\n    constructor(\n        readonly id: TextInputId,\n        _value: string,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    protected parse(str: string) {\n        return str;\n    }\n\n    protected stringify(text: string) {\n        return text;\n    }\n}\n\ntype ToggleInputId = 'animate' | 'mic' | 'fullscreen';\n\nexport class ToggleInput extends Input<boolean> {\n    constructor(\n        readonly id: ToggleInputId,\n        _value: boolean,\n        readonly on: string,\n        readonly off: string,\n        readonly disabled: boolean = false,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    protected parse(str: string) {\n        if (/1|true/i.test(str)) return true;\n        else if (/0|false/i.test(str)) return false;\n        else throw new Error(`invalid boolean value for input ${this.id}: ${str}`);\n    };\n\n    protected stringify(bool: boolean) {\n        return bool ? '1' : '0';\n    }\n}\n\nexport const inputs = {\n    pipe: new TextInput(\n        'pipe',\n        '10000->sphere(4, 1)->R(theta, 0, 1, cos, tan)->R(theta, 0, 2)->R(theta, 0, 3)->stereo(3)',\n    ),\n    theta: new TextInput('theta', 'pi * (t + power) / 20'),\n    h: new TextInput('h', 'chroma * i / n'),\n    l: new TextInput('l', 'power'),\n    animate: new ToggleInput('animate', true, 'play', 'pause', false, true),\n    mic: new ToggleInput('mic', false, 'mic', 'mic_off', false, false),\n    fullscreen: new ToggleInput(\n        'fullscreen',\n        false,\n        'enter_fullscreen',\n        'exit_fullscreen',\n        !document.fullscreenEnabled,\n        false,\n    ),\n};\nexport type Inputs = typeof inputs;\n\nwindow.inputs = inputs;\n","import { inputs, ToggleInput, TextInput } from './inputs';\nimport html from './controls.html';\nimport './controls.scss';\nimport assert from 'assert';\n\nexport class Controls {\n    readonly domElement = document.createElement('div');\n\n    constructor() {\n        this.domElement.id = 'controls';\n        this.domElement.innerHTML = html;\n\n        this.setupInputs();\n        this.setupKeyboardShortcuts();\n\n        document.onclick = (event) => {\n            if (!this.domElement.contains(event.target as Node)) {\n                inputs.animate.value = !inputs.animate.value;\n            }\n        };\n    }\n\n    show = () => this.domElement.style.opacity = '1';\n\n    hide = () => {\n        if (!this.domElement.contains(document.activeElement)) {\n            this.domElement.style.opacity = '0';\n        }\n    };\n\n    private setupInputs = () => {\n        for (const input of Object.values(inputs)) {\n            if (input.disabled) continue;\n\n            if (input instanceof TextInput) {\n                this.setupText(input);\n            } else if (input instanceof ToggleInput) {\n                this.setupToggle(input);\n            }\n        }\n\n        if (!inputs.fullscreen.disabled) {\n            inputs.fullscreen.stream.subscribe(({ newValue }) => {\n                if (newValue) document.body.requestFullscreen();\n                else if (document.fullscreenElement) document.exitFullscreen();\n            });\n        }\n    };\n\n    private querySelector = <E extends Element = HTMLElement>(selector: string) =>\n        this.domElement.querySelector<E>(selector);\n\n    private setupText = (text: TextInput) => {\n        const el = this.querySelector<HTMLInputElement>(`#${text.id}`);\n        assert(el, `Did not find element for input #${text.id}`);\n\n        el.onchange = () => text.value = el.value;\n\n        text.stream.subscribe(({ newValue }) => {\n            el.value = newValue;\n            el.size = newValue.length;\n        });\n    };\n\n    private setupToggle = (toggle: ToggleInput) => {\n        const on = this.querySelector(`#${toggle.on}`);\n        const off = this.querySelector(`#${toggle.off}`);\n\n        on.onclick = () => toggle.value = true;\n\n        off.onclick = () => toggle.value = false;\n\n        toggle.stream.subscribe(({ newValue }) => {\n            if (newValue) {\n                on.style.display = 'none';\n                off.style.display = 'inline';\n            } else {\n                on.style.display = 'inline';\n                off.style.display = 'none';\n            }\n        });\n    };\n\n    private setupKeyboardShortcuts = () => {\n        document.onkeydown = (event: KeyboardEvent) => {\n            if (event.repeat) return;\n            if (this.domElement.contains(event.target as Node)) return;\n\n            switch (event.key) {\n                case ' ':\n                    inputs.animate.value = !inputs.animate.value;\n                    break;\n                case 'Enter':\n                    inputs.fullscreen.value = !inputs.fullscreen.value;\n                    break;\n            }\n        };\n    };\n}\n","module.exports = \"<div id=\\\"inputs\\\">\\n    <span>\\n        <label for=\\\"pipe\\\">Pipe</label>\\n        <input id=\\\"pipe\\\" />\\n    </span>\\n\\n    <span>\\n        <label for=\\\"theta\\\">Theta</label>\\n        <input id=\\\"theta\\\" />\\n    </span>\\n\\n    <span>\\n        <label for=\\\"h\\\">Hue</label>\\n        <input id=\\\"h\\\" />\\n    </span>\\n\\n    <span>\\n        <label for=\\\"l\\\">Lightness</label>\\n        <input id=\\\"l\\\" />\\n    </span>\\n</div>\\n\\n<div id=\\\"media\\\">\\n    <i id=\\\"play\\\" class=\\\"material-icons\\\">play_arrow</i>\\n    <i id=\\\"pause\\\" class=\\\"material-icons\\\">pause</i>\\n    <i id=\\\"mic\\\" class=\\\"material-icons\\\">mic</i>\\n    <i id=\\\"mic_off\\\" class=\\\"material-icons\\\">mic_off</i>\\n\\n    <div class=\\\"spacer\\\"></div>\\n\\n    <i id=\\\"enter_fullscreen\\\" class=\\\"material-icons\\\">fullscreen</i>\\n    <i id=\\\"exit_fullscreen\\\" class=\\\"material-icons\\\">fullscreen_exit</i>\\n</div>\\n\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./controls.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;"],"sourceRoot":""}