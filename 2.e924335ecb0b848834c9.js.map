{"version":3,"sources":["webpack:///./src/pipe/ast.ts","webpack:///./src/pipe/parser.ts","webpack:///./src/web/inputs/constants.ts","webpack:///./src/web/inputs/input.ts","webpack:///./src/web/inputs/text.ts","webpack:///./src/web/inputs/toggle.ts","webpack:///./src/web/inputs/index.ts","webpack:///./src/pipe/compiler.ts","webpack:///./src/web/inputs/range.ts","webpack:///./src/web/inputs/action.ts","webpack:///./src/pp.ts","webpack:///./src/data.ts","webpack:///./src/pipe/pool.ts","webpack:///./src/constants.ts","webpack:///./src/fn/interval.ts","webpack:///./src/pipe/worker.ts","webpack:///./src/pipe/grammar.pegjs","webpack:///./src/fn/index.ts","webpack:///./src/fn/cube.ts","webpack:///./src/fn/rotator.ts","webpack:///./src/fn/sphere.ts","webpack:///./src/fn/fucked_up_torus.ts","webpack:///./src/fn/identity.ts","webpack:///./src/fn/spiral.ts","webpack:///./src/fn/stereo.ts","webpack:///./src/fn/torus.ts","webpack:///./src/pipe/resolver.ts","webpack:///./src/web/renderer/index.ts"],"names":["print","node","kind","n","d0","steps","map","join","printPipe","type","args","printStep","a","b","operands","op","printArith","value","toString","printNumber","name","printFn","id","index","printAccess","printId","Parser","pipe","parse","expr","startRule","temp","persistenceEnabled","URLSearchParams","window","location","search","get","hash","substr","atob","Input","constructor","defaultText","persistent","disabled","Error","stringify","BehaviorSubject","newValue","this","_value","el","classList","add","_setup","str","set","document","btoa","text","has","subject","newSubject","asObservable","oldValue","next","event","updateHash","TextInput","t","super","onchange","oninput","setSize","stream","subscribe","HTMLInputElement","size","length","lines","split","rows","Math","min","cols","reduce","max","line","ToggleInput","trim","bool","on","querySelector","onclick","off","style","display","test","poolSize","compiler","ast","parsePipe","Interval","nPerLevel","parseScalar","compile","compilePipe","compileScalar","inputs","theta","s","h","v","animate","mic","AudioContext","audioWorklet","fullscreen","fullscreenEnabled","allowedDbs","parseInt","input","multirange","minEl","maxEl","valueLow","valueHigh","innerText","save","action","ev","canvas","renderer","domElement","render","blob","Promise","resolve","toBlob","url","URL","createObjectURL","createElement","download","href","click","revokeObjectURL","debug","pp","p","JSON","Data","d","position","color","buffer","data","Float32Array","nOffset","positionOffset","SharedArrayBuffer","inputOffset","arr","offset","subarray","inputLength","positionLength","colorOffset","i","stride","assert","pool","logger","getLogger","setLevel","navigator","hardwareConcurrency","startPool","info","Pool","spawn","Worker","Map","promises","push","queue","all","initialize","params","timing","forkJoin","chunk","w","iterate","getOrInitialize","key","hv","getKey","resolver","Resolver","scope","staticFn","dynamicFn","bufferFor","round","label","start","Date","now","elapsed","runPipeline","slice","inf","x","y","equal","limit","fn","points","pop","successors","domain","pow","module","exports","peg$SyntaxError","message","expected","found","captureStackTrace","child","parent","ctor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","escapedParts","parts","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toUpperCase","replace","j","descriptions","sort","describeExpected","describeFound","SyntaxError","options","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsepipe","scalar","peg$parsescalar","peg$startRuleFunction","peg$c0","peg$c1","peg$otherExpectation","peg$c2","peg$computeLocation","peg$savedPos","peg$currPos","peg$buildStructuredError","substring","peg$c3","head","tail","peg$c4","step","peg$c5","peg$c6","peg$c7","peg$literalExpectation","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","arg","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","toLowerCase","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","f","parseFloat","peg$c43","peg$c44","peg$c45","peg$c46","peg$classExpectation","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$posDetailsCache","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","error","peg$buildSimpleError","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","peg$fail","s0","s2","s4","s6","peg$parse_","peg$parsepint","peg$parseconnector","peg$parsesteps","s1","s3","peg$parsestep","peg$parseuint","peg$parsefn_args","peg$parsecube","peg$parsesphere","peg$parsespiral","peg$parsetorus","peg$parsefucked_up_torus","charAt","peg$parserotate","peg$parsestereo","peg$parseterm","peg$parseoperator","s5","peg$parsemantissa","peg$parseint","peg$parsefloat","peg$parsenumber","peg$parseidentifier","peg$parselbrack","peg$parserbrack","peg$parseid","peg$parselparen","peg$parserparen","peg$parsefn_args_list","peg$parsecomma","peg$parse__","CompositeFn","fns","first","rest","sample","apply","domainMax","dMax","last","isFinite","sign","Cube","l","interval","fill","Rotator","d1","f0","cos","f1","sin","cube","r0","r1","Sphere","r","PI","phi","root","from","keys","FuckedUpTorus","sphere","circle","q","Identity","Spiral","k","exp","Stereo","to","fromTemp","toTemp","up","down","n2","norm2","divisor","result","Torus","cross","rotator","links","link","resolveStep","buildComposites","builder","Builder","isDynamic","shift","init","build","ranges","funs","some","isNodeDynamic","target","idu","fail","ops","hint","resolvePipe","resolveFn","resolveAccess","resolveId","resolveArith","actual","isNaN","spiral","torus","fucked_up_torus","rotate","stereo","width","innerWidth","height","innerHeight","aspect","camera","PerspectiveCamera","z","scene","geometry","setAttribute","BufferAttribute","computeBoundingSphere","boundingSphere","center","radius","requestAnimationFrame","WebGLRenderer","onresize","Points","BufferGeometry","PointsMaterial","vertexColors","VertexColors","Scene"],"mappings":"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","file":"2.e924335ecb0b848834c9.js","sourcesContent":["export type PipeNode = {\n  kind: 'pipe';\n  n: number;\n  d0: number;\n  steps: StepNode[];\n};\n\nexport type StepNode = {\n  kind: 'step';\n  type: string;\n  args: Scalar[];\n};\n\nexport type Scalar = ArithNode | NumberNode | FnNode | AccessNode | IdNode;\n\nexport type ArithNode = {\n  kind: 'arith';\n  op: string;\n  operands: [Scalar, Scalar];\n};\n\nexport type NumberNode = {\n  kind: 'number';\n  value: number;\n};\n\nexport type FnNode = {\n  kind: 'fn';\n  name: string;\n  args: Scalar[];\n};\n\nexport type AccessNode = {\n  kind: 'access';\n  id: string;\n  index: Scalar;\n};\n\nexport type IdNode = {\n  kind: 'id';\n  id: string;\n};\n\nexport type Value = number | Function;\n\nexport function print(node: PipeNode): string;\nexport function print(node: StepNode): string;\nexport function print(node: Scalar): string;\nexport function print(node: any) {\n  switch (node.kind) {\n    case 'pipe':\n      return printPipe(node);\n    case 'step':\n      return printStep(node);\n    case 'arith':\n      return printArith(node);\n    case 'number':\n      return printNumber(node);\n    case 'fn':\n      return printFn(node);\n    case 'access':\n      return printAccess(node);\n    case 'id':\n      return printId(node);\n  }\n}\n\nfunction printPipe(node: PipeNode): string {\n  return [node.n, node.d0, ...node.steps.map(print)].join('\\n  =>');\n}\n\nfunction printStep(node: StepNode): string {\n  return `${node.type}(${node.args.map(print).join(', ')})`;\n}\n\nfunction printArith(node: ArithNode): string {\n  const [a, b] = node.operands;\n  return `${print(a)} ${node.op} ${print(b)}`;\n}\n\nfunction printNumber(node: NumberNode): string {\n  return node.value.toString();\n}\n\nfunction printFn(node: FnNode): string {\n  return `${node.name}(${node.args.map(print).join(', ')})`;\n}\n\nfunction printAccess(node: AccessNode): string {\n  return `${node.id}[${print(node.index)}]`;\n}\n\nfunction printId(node: IdNode): string {\n  return node.id;\n}\n","import { PipeNode, Scalar } from './ast';\nimport { parse } from './grammar.pegjs';\n\nexport class Parser {\n  static parsePipe = (pipe: string): PipeNode => parse(pipe);\n\n  static parseScalar = (expr: string): Scalar =>\n    parse(expr, { startRule: 'scalar' });\n}\n","const query = new URLSearchParams(window.location.search);\n\nexport const persistenceEnabled = query.get('p') != '0';\n\nexport const hash = (() => {\n  const temp = window.location.hash.substr(1);\n  return new URLSearchParams(temp ? atob(temp) : '');\n})();\n","import { BehaviorSubject, Subject } from 'rxjs';\n\nimport { Change } from './change';\nimport { hash, persistenceEnabled } from './constants';\nimport { Options } from './options';\n\nexport abstract class Input<T, E extends HTMLElement = HTMLElement> {\n  readonly disabled: boolean;\n\n  protected readonly parse: (s: string) => T;\n  protected readonly stringify: (t: T) => string;\n  protected el?: E;\n\n  private readonly subject: Subject<Change<T>>;\n  private readonly persistent: boolean;\n  private _value: T;\n\n  constructor(\n    readonly id: string,\n    defaultText: string,\n    {\n      persistent = false,\n      disabled = false,\n      parse = () => {\n        throw new Error('parse unsupported');\n      },\n      stringify = () => {\n        throw new Error('stringify unsupported');\n      }\n    }: Options<T> = {}\n  ) {\n    this.persistent = persistent;\n    this.disabled = disabled;\n    this.parse = parse;\n    this.stringify = stringify;\n\n    if (!persistenceEnabled) {\n      this.persistent = false;\n    }\n    let text = defaultText;\n    if (this.persistent && hash.has(this.id)) {\n      text = hash.get(this.id);\n    }\n\n    this._value = this.parse(text);\n    this.subject = this.newSubject();\n  }\n\n  newSubject = () => new BehaviorSubject<Change<T>>({ newValue: this._value });\n\n  setup = (el: E) => {\n    this.el = el;\n    if (this.disabled) this.el.classList.add('disabled');\n    this._setup();\n  };\n\n  protected abstract _setup(): void;\n\n  get stream() {\n    return this.subject.asObservable();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(newValue: T) {\n    const oldValue = this.value;\n    this._value = newValue;\n    this.subject.next({ newValue, oldValue, event: window.event });\n    if (this.persistent) this.updateHash();\n  }\n\n  private updateHash = () => {\n    const str = this.stringify(this.value);\n    hash.set(this.id, str);\n    document.location.hash = btoa(hash.toString());\n  };\n}\n","import { Input } from './input';\nimport { Options } from './options';\n\nexport class TextInput<T = string> extends Input<\n  T,\n  HTMLInputElement | HTMLTextAreaElement\n> {\n  constructor(\n    readonly id: string,\n    defaultText: string,\n    {\n      parse,\n      persistent = true,\n      disabled = false,\n      stringify = (t: T) => t.toString()\n    }: Options<T> = {}\n  ) {\n    super(id, defaultText, { persistent, disabled, parse, stringify });\n  }\n\n  protected _setup = () => {\n    this.el.disabled = this.disabled;\n\n    this.el.onchange = () => {\n      const value = this.parse(this.el.value);\n      this.el.value = this.stringify(value);\n      this.value = value;\n    };\n\n    this.el.oninput = () => this.setSize();\n\n    this.stream.subscribe(({ newValue }) => {\n      this.el.value = this.stringify(newValue);\n      this.setSize();\n    });\n  };\n\n  private setSize() {\n    if (this.el instanceof HTMLInputElement)\n      this.el.size = this.el.value.length;\n    else {\n      const lines = this.el.value.split('\\n');\n      this.el.rows = Math.min(10, lines.length);\n      this.el.cols = Math.min(\n        50,\n        lines.reduce((max, line) => Math.max(max, line.length), 0)\n      );\n    }\n  }\n}\n","import { Input } from './input';\n\nexport class ToggleInput extends Input<boolean> {\n  constructor(\n    readonly id: string,\n    defaultText: string,\n    { disabled = false, persistent = false } = {}\n  ) {\n    super(id, defaultText, {\n      persistent,\n      disabled,\n      parse: text => {\n        switch (text.trim()) {\n          default:\n          case '0':\n          case 'false':\n            return false;\n          case '1':\n          case 'true':\n            return true;\n        }\n      },\n      stringify: (bool: boolean) => {\n        return bool ? '1' : '0';\n      }\n    });\n  }\n\n  protected _setup = () => {\n    const on = this.el.querySelector<HTMLInputElement>('.on');\n    if (!this.disabled) on.onclick = () => (this.value = true);\n\n    const off = this.el.querySelector<HTMLInputElement>('.off');\n    if (!this.disabled) off.onclick = () => (this.value = false);\n\n    this.stream.subscribe(({ newValue }) => {\n      if (newValue) {\n        on.style.display = 'none';\n        off.style.display = 'inline';\n      } else {\n        on.style.display = 'inline';\n        off.style.display = 'none';\n      }\n    });\n  };\n\n  protected parse(str: string) {\n    if (/1|true/i.test(str)) return true;\n    else if (/0|false/i.test(str)) return false;\n    else throw new Error(`invalid boolean value for input ${this.id}: ${str}`);\n  }\n}\n","import { PipeNode, print } from '../../pipe/ast';\nimport { Compiler } from '../../pipe/compiler';\nimport { poolSize } from '../../pipe/pool';\nimport debug from '../debug';\nimport { renderer } from '../renderer';\nimport { ActionInput } from './action';\nimport { RangeInput } from './range';\nimport { TextInput } from './text';\nimport { ToggleInput } from './toggle';\n\n// Points generation is done in parallel, so pick n such\n// that each chunk is size 2000\nconst n = 2000 * poolSize;\n\nconst compiler = new Compiler();\nexport const inputs = {\n  pipe: new TextInput<PipeNode>(\n    'pipe',\n    `${n}\n      =>3\n      =>torus(1, 1)\n      =>R(theta, 0, 1, cos, tan)\n      =>R(theta, 0, 2)\n      =>R(theta, 0, 3)\n      =>stereo(3)`,\n    {\n      persistent: true,\n      parse: text => compiler.compile(text),\n      stringify: print\n    }\n  ),\n  theta: new TextInput('theta', 'pi * power + pi * t / 20', {\n    parse: s => compiler.compile(s, 'scalar'),\n    stringify: print\n  }),\n  h: new TextInput('h', 'chroma * abs(p[0])', {\n    parse: s => compiler.compile(s, 'scalar'),\n    stringify: print\n  }),\n  v: new TextInput('v', '(power + onset) / 2', {\n    parse: s => compiler.compile(s, 'scalar'),\n    stringify: print\n  }),\n  animate: new ToggleInput('animate', '1'),\n  mic: new ToggleInput('mic', '0', {\n    disabled: !new AudioContext().audioWorklet\n  }),\n  fullscreen: new ToggleInput('fullscreen', '0', {\n    disabled: !document.fullscreenEnabled\n  }),\n  allowedDbs: new RangeInput('allowed_db_range', '-130, -30', {\n    disabled: !new AudioContext().audioWorklet\n  }),\n  save: new ActionInput('save', async () => {\n    const canvas = renderer.domElement;\n    renderer.render();\n    const blob = await new Promise(resolve => canvas.toBlob(resolve));\n    const url = URL.createObjectURL(blob);\n    try {\n      const a = document.createElement('a');\n      a.download = `stereo${document.location.hash}`;\n      a.href = url;\n      a.click();\n    } finally {\n      URL.revokeObjectURL(url);\n    }\n  })\n};\n\nexport type Inputs = typeof inputs;\n\ndebug('inputs', inputs);\n","import Interval from '../fn/interval';\nimport { PipeNode, Scalar } from './ast';\nimport { Parser } from './parser';\n\nexport class Compiler {\n  constructor() {}\n\n  compile(expr: string): PipeNode;\n  compile(expr: string, startRule: 'scalar'): Scalar;\n  compile(expr: string, startRule?: string): any {\n    switch (startRule) {\n      default:\n        return this.compilePipe(expr);\n      case 'scalar':\n        return this.compileScalar(expr);\n    }\n  }\n\n  private compilePipe = (expr: string): PipeNode => {\n    const ast = Parser.parsePipe(expr);\n    // Due to the way that sampling is implemented, the actual\n    // number of points generated will not be exactly the n specified\n    // by the user, unless n happens to be the dth power of some number.\n    // The below expression computes the exact number of points that will\n    // be generated.\n    ast.n = Interval.nPerLevel(ast.d0, ast.n) ** ast.d0;\n    return ast;\n  };\n\n  private compileScalar = (expr: string): Scalar => {\n    return Parser.parseScalar(expr);\n  };\n}\n","import multirange from 'multirange';\n\nimport { Input } from './input';\n\nexport class RangeInput extends Input<[number, number]> {\n  constructor(\n    readonly id: string,\n    defaultText: string,\n    { disabled = false, persistent = true } = {}\n  ) {\n    super(id, defaultText, {\n      disabled,\n      persistent,\n      parse: str => {\n        const [min, max] = str.split(/\\s*,\\s*/);\n        return [parseInt(min), parseInt(max)];\n      },\n      stringify: ([min, max]) => {\n        return `${min},${max}`;\n      }\n    });\n  }\n\n  protected _setup = () => {\n    const input = this.el.querySelector<MultirangeHTMLInputElement>('input');\n    input.disabled = this.disabled;\n    multirange(input);\n    const minEl = this.el.querySelector<HTMLElement>('.min');\n    const maxEl = this.el.querySelector<HTMLElement>('.max');\n\n    input.onchange = () => {\n      this.value = [+input.valueLow, +input.valueHigh];\n    };\n\n    this.el.querySelector<HTMLInputElement>(\n      'input.ghost'\n    ).oninput = input.oninput = () => {\n      minEl.innerText = input.valueLow.toString();\n      maxEl.innerText = input.valueHigh.toString();\n    };\n\n    this.stream.subscribe(({ newValue }) => {\n      input.value = this.stringify(newValue);\n      minEl.innerText = input.valueLow.toString();\n      maxEl.innerText = input.valueHigh.toString();\n    });\n  };\n}\n","import { Input } from './input';\n\nexport class ActionInput extends Input<void> {\n  constructor(id: string, private readonly action: (ev: MouseEvent) => void) {\n    super(id, '', { parse: () => {} });\n  }\n\n  protected _setup = () => {\n    if (!this.disabled) this.el.onclick = ev => this.action(ev);\n  };\n}\n","export const pp = (a: any, p = 2) => JSON.stringify(a, null, p);\n","import assert from 'assert';\n\nexport type Vector = Float32Array;\n\nexport class Data {\n  constructor(\n    readonly n: number,\n    readonly d: number,\n    readonly position: Float32Array,\n    readonly color: Float32Array\n  ) {}\n\n  static fromBuffer = (buffer: ArrayBuffer) => {\n    const data = new Float32Array(buffer);\n    const n = data[Data.nOffset];\n    const d = data[Data.positionOffset(data)];\n    const position = Data.position(data);\n    const color = Data.color(data);\n    return new Data(n, d, position, color);\n  };\n\n  static bufferFor = (n: number, d0: number, d: number): SharedArrayBuffer => {\n    const bytesPerNum = 4;\n    const count = 3 + n * (d0 + d + 3);\n    const byteLength = bytesPerNum * count;\n    const buffer = new SharedArrayBuffer(byteLength);\n    const data = new Float32Array(buffer);\n    data[Data.nOffset] = n;\n    data[Data.inputOffset] = d0;\n    data[Data.positionOffset(data)] = d;\n    return buffer;\n  };\n\n  static input = (arr: Float32Array) => {\n    const offset = Data.inputOffset + 1;\n    return arr.subarray(offset, offset + Data.inputLength(arr));\n  };\n\n  static position = (arr: Float32Array) => {\n    const offset = Data.positionOffset(arr) + 1;\n    return arr.subarray(offset, offset + Data.positionLength(arr));\n  };\n\n  static color = (arr: Float32Array) => {\n    const offset = Data.colorOffset(arr);\n    return arr.subarray(offset);\n  };\n\n  static nOffset = 0;\n\n  static inputOffset = Data.nOffset + 1;\n  private static inputLength = (arr: Float32Array) => {\n    const n = arr[Data.nOffset];\n    const d0 = arr[Data.inputOffset];\n    return n * d0;\n  };\n\n  static positionOffset = (arr: Float32Array) =>\n    Data.inputOffset + Data.inputLength(arr) + 1;\n  private static positionLength = (arr: Float32Array) => {\n    const n = arr[Data.nOffset];\n    const d = arr[Data.positionOffset(arr)];\n    return n * d;\n  };\n\n  static colorOffset = (arr: Float32Array) =>\n    Data.positionOffset(arr) + Data.positionLength(arr) + 1;\n\n  static get = (arr: Vector, i: number, stride: number) => {\n    const offset = i * stride;\n    return arr.subarray(offset, offset + stride);\n  };\n\n  static set = (\n    arr: Vector,\n    value: ArrayLike<number>,\n    i: number,\n    stride: number\n  ) => {\n    assert(value.length <= stride);\n    const offset = i * stride;\n    return arr.set(value, offset);\n  };\n}\n","import { getLogger } from 'loglevel';\nimport { ModuleThread, Pool, Worker, spawn } from 'threads';\n\nimport { Data } from '../data';\nimport { Resolution, Resolver } from './resolver';\nimport { Chunk, Params, PipelineWorker } from './types';\n\nconst logger = getLogger('PipelinePool');\nlet pool: Pool<ModuleThread<PipelineWorker>>;\nlet data: Map<string, SharedArrayBuffer>;\nlogger.setLevel('info');\n\nexport const poolSize = 2 * navigator.hardwareConcurrency;\n\nexport const startPool = async () => {\n  logger.info('starting worker pool');\n  let i = 0;\n  pool = Pool(\n    () => spawn(new Worker('./worker', { name: `pipe${i++}` })),\n    poolSize\n  );\n  data = new Map();\n  let promises = [];\n  for (let i = 0; i < poolSize; i++) {\n    // pre-load scripts so the first task doesn't take forever\n    promises.push(pool.queue(async () => {}));\n  }\n  await Promise.all(promises);\n};\n\nexport const stopPool = async (): Promise<void> => {\n  logger.info('waiting for pending tasks to complete before terminating pool');\n  try {\n    await pool.terminate(true);\n  } catch (err) {\n    logger.error(err);\n  } finally {\n    pool = null;\n  }\n};\n\nconst initialize = (\n  params: Params,\n  n: number,\n  buffer: SharedArrayBuffer\n): Promise<void> => {\n  return timing('initialization')(async () => {\n    return forkJoin(n, async chunk => {\n      return pool.queue(w => w.initialize(params, chunk, buffer));\n    });\n  });\n};\n\nconst iterate = (params: Params, buffer: SharedArrayBuffer) => {\n  return timing('iteration')(async () => {\n    return forkJoin(params.pipe.n, async chunk => {\n      return pool.queue(w => w.iterate(params, chunk, buffer));\n    });\n  });\n};\n\nconst getKey = (params: Params) =>\n  JSON.stringify({\n    pipe: params.pipe,\n    hv: params.hv\n  });\n\nconst getOrInitialize = async (params: Params): Promise<SharedArrayBuffer> => {\n  const key = getKey(params);\n  if (!data.has(key)) {\n    const resolver = new Resolver(params.scope);\n    const { n, staticFn, dynamicFn } = resolver.resolve(params.pipe);\n    const buffer = Data.bufferFor(n, staticFn.d, dynamicFn.d);\n    await initialize(params, n, buffer);\n    data.set(key, buffer);\n  }\n  return data.get(key);\n};\n\nconst forkJoin = async (n: number, op: (chunk: Chunk) => Promise<void>) => {\n  const size = Math.round(n / poolSize);\n  let promises = [];\n  for (let offset = 0; offset < n; offset += size) {\n    const chunk = { offset, size: Math.min(n - offset, size) };\n    promises.push(op(chunk));\n  }\n  await Promise.all(promises);\n};\n\nconst timing = (label: string) => async <T>(op: () => Promise<T>) => {\n  const start = Date.now();\n  const t = await op();\n  const elapsed = Date.now() - start;\n  logger.debug(`${label} took ${elapsed}ms`);\n  return t;\n};\n\nexport const runPipeline = async (\n  params: Params\n): Promise<SharedArrayBuffer> => {\n  const buffer = await getOrInitialize(params);\n  await iterate(params, buffer);\n\n  return buffer.slice(0);\n};\n","export const inf = 2 ** 32 - 1;\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport { Fn } from '.';\n\nexport default class Interval implements Fn {\n  readonly domain: number;\n\n  constructor(readonly d: number, readonly a: number[], readonly b: number[]) {\n    assert.equal(a.length, d);\n    assert.equal(b.length, d);\n    this.domain = d;\n  }\n\n  static nPerLevel = (d: number, n: number) => {\n    return Math.round(Math.pow(n, 1 / d));\n  };\n\n  /**\n   * @param x A vector of length this.domain contained in the interval [0, 1].\n   * @returns A mapping of the vector into this interval.\n   */\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, b, d } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    for (let i = 0; i < d; i++) {\n      y[i] = a[i] + x[i] * (b[i] - a[i]);\n    }\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { d, fn } = this;\n    n = Interval.nPerLevel(d, n);\n    const points: number[][] = [[]];\n    let i = 0;\n\n    while (points.length && i < limit) {\n      const p = points.pop()!;\n      if (p.length < d) {\n        points.push(...successors(p));\n      } else if (i++ >= offset) {\n        yield fn(p);\n      }\n    }\n\n    function* successors(p: number[]): Generator<number[]> {\n      for (let i = 0; i < n; i++) {\n        yield [...p, i / n];\n      }\n    }\n  };\n}\n","module.exports = __webpack_public_path__ + \"0.45bc6e45f04412d2ee2d.worker.js\"","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { pipe: peg$parsepipe, scalar: peg$parsescalar },\n      peg$startRuleFunction  = peg$parsepipe,\n\n      peg$c0 = function(n, d0, steps) {\n        return {kind: 'pipe', n, d0, steps};\n      },\n      peg$c1 = peg$otherExpectation(\"positive integer\"),\n      peg$c2 = function(x) {\n        x = parseInt(x);\n        if (x <= 0) {\n          expected(`a positive integer`);\n        }\n        return x;\n      },\n      peg$c3 = function(head, tail) { return [head, ...tail]; },\n      peg$c4 = function(step) { return [step]; },\n      peg$c5 = peg$otherExpectation(\"cube\"),\n      peg$c6 = \"cube\",\n      peg$c7 = peg$literalExpectation(\"cube\", true),\n      peg$c8 = function(type, args) {\n        return step(type, args, 1);\n      },\n      peg$c9 = peg$otherExpectation(\"sphere\"),\n      peg$c10 = \"sphere\",\n      peg$c11 = peg$literalExpectation(\"sphere\", true),\n      peg$c12 = peg$otherExpectation(\"spiral\"),\n      peg$c13 = \"spiral\",\n      peg$c14 = peg$literalExpectation(\"spiral\", true),\n      peg$c15 = function(type, args) {\n        return step(type, args, 2);\n      },\n      peg$c16 = peg$otherExpectation(\"torus\"),\n      peg$c17 = \"torus\",\n      peg$c18 = peg$literalExpectation(\"torus\", true),\n      peg$c19 = peg$otherExpectation(\"fucked_up_torus\"),\n      peg$c20 = \"fucked_up_torus\",\n      peg$c21 = peg$literalExpectation(\"fucked_up_torus\", true),\n      peg$c22 = peg$otherExpectation(\"rotate\"),\n      peg$c23 = \"r\",\n      peg$c24 = peg$literalExpectation(\"r\", true),\n      peg$c25 = \"rotate\",\n      peg$c26 = peg$literalExpectation(\"rotate\", true),\n      peg$c27 = function(args) {\n        return step('rotate', args, 3, 5);\n      },\n      peg$c28 = peg$otherExpectation(\"stereo\"),\n      peg$c29 = \"stereo\",\n      peg$c30 = peg$literalExpectation(\"stereo\", true),\n      peg$c31 = function(arg) { return [arg]; },\n      peg$c32 = peg$otherExpectation(\"scalar\"),\n      peg$c33 = function(s, op, a) {\n           return {kind: 'arith', op, operands: [s, a]};\n        },\n      peg$c34 = peg$otherExpectation(\"term\"),\n      peg$c35 = function(value) { return {kind: 'number', value}; },\n      peg$c36 = function(name, args) {\n          return {kind: 'fn', name: name.toLowerCase(), args};\n        },\n      peg$c37 = function(id, index) { return {kind: 'access', id, index}; },\n      peg$c38 = function(a) { return a; },\n      peg$c39 = function(id) { return {kind: 'id', id: id.toLowerCase()}; },\n      peg$c40 = function(args) { return args },\n      peg$c41 = peg$otherExpectation(\"number\"),\n      peg$c42 = function(f) { return parseFloat(f); },\n      peg$c43 = function(i) { return parseInt(i); },\n      peg$c44 = peg$otherExpectation(\"identifier\"),\n      peg$c45 = /^[a-zA-Z]/,\n      peg$c46 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c47 = /^[a-zA-Z0-9]/,\n      peg$c48 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c49 = function(id) { return id; },\n      peg$c50 = peg$otherExpectation(\"float\"),\n      peg$c51 = /^[+\\-]/,\n      peg$c52 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c53 = /^[0-9]/,\n      peg$c54 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c55 = /^[eE]/,\n      peg$c56 = peg$classExpectation([\"e\", \"E\"], false, false),\n      peg$c57 = peg$otherExpectation(\"integer\"),\n      peg$c58 = peg$otherExpectation(\"unsigned integer\"),\n      peg$c59 = \".\",\n      peg$c60 = peg$literalExpectation(\".\", false),\n      peg$c61 = peg$otherExpectation(\"arithmetic operator\"),\n      peg$c62 = \"+\",\n      peg$c63 = peg$literalExpectation(\"+\", false),\n      peg$c64 = \"-\",\n      peg$c65 = peg$literalExpectation(\"-\", false),\n      peg$c66 = \"*\",\n      peg$c67 = peg$literalExpectation(\"*\", false),\n      peg$c68 = \"/\",\n      peg$c69 = peg$literalExpectation(\"/\", false),\n      peg$c70 = \"**\",\n      peg$c71 = peg$literalExpectation(\"**\", false),\n      peg$c72 = \"^\",\n      peg$c73 = peg$literalExpectation(\"^\", false),\n      peg$c74 = function(op) { return op; },\n      peg$c75 = peg$otherExpectation(\"lparen\"),\n      peg$c76 = \"(\",\n      peg$c77 = peg$literalExpectation(\"(\", false),\n      peg$c78 = peg$otherExpectation(\"rparen\"),\n      peg$c79 = \")\",\n      peg$c80 = peg$literalExpectation(\")\", false),\n      peg$c81 = peg$otherExpectation(\"lbrack\"),\n      peg$c82 = \"[\",\n      peg$c83 = peg$literalExpectation(\"[\", false),\n      peg$c84 = peg$otherExpectation(\"rbrack\"),\n      peg$c85 = \"]\",\n      peg$c86 = peg$literalExpectation(\"]\", false),\n      peg$c87 = peg$otherExpectation(\"comma\"),\n      peg$c88 = \",\",\n      peg$c89 = peg$literalExpectation(\",\", false),\n      peg$c90 = peg$otherExpectation(\"connector\"),\n      peg$c91 = \"->\",\n      peg$c92 = peg$literalExpectation(\"->\", false),\n      peg$c93 = \"=>\",\n      peg$c94 = peg$literalExpectation(\"=>\", false),\n      peg$c95 = peg$otherExpectation(\"whitespace\"),\n      peg$c96 = /^[ \\t\\n\\r]/,\n      peg$c97 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsepipe() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepint();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseconnector();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsepint();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseconnector();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesteps();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c0(s2, s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepint() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseuint();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c2(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesteps() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestep();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseconnector();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsesteps();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestep();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep() {\n    var s0;\n\n    s0 = peg$parsecube();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsesphere();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsespiral();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetorus();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsefucked_up_torus();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parserotate();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsestereo();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecube() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 4).toLowerCase() === peg$c6) {\n      s2 = input.substr(peg$currPos, 4);\n      peg$currPos += 4;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesphere() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c10) {\n      s2 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsespiral() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c13) {\n      s2 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c14); }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetorus() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c17) {\n      s2 = input.substr(peg$currPos, 5);\n      peg$currPos += 5;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefucked_up_torus() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 15).toLowerCase() === peg$c20) {\n      s2 = input.substr(peg$currPos, 15);\n      peg$currPos += 15;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserotate() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 1).toLowerCase() === peg$c23) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c25) {\n        s1 = input.substr(peg$currPos, 6);\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c27(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestereo() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c29) {\n      s2 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep_args() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsescalar();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsestep_args();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsescalar();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c31(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescalar() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseterm();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseoperator();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsescalar();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseterm();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseterm() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsenumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c35(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsefn_args();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c36(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseidentifier();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parselbrack();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsescalar();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parserbrack();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c37(s1, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseid();\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parselparen();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsescalar();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parserparen();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c38(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c39(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsefn_args() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parselparen();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefn_args_list();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parserparen();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c40(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefn_args_list() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsescalar();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefn_args_list();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsescalar();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c31(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefloat();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c42(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseint();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c43(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      if (peg$c45.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c46); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        if (peg$c47.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          if (peg$c47.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c49(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c44); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c51.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      if (peg$c53.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c54); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsemantissa();\n        if (s4 !== peg$FAILED) {\n          if (peg$c55.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseint();\n            if (s6 !== peg$FAILED) {\n              s2 = [s2, s3, s4, s5, s6];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseint();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemantissa();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c51.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseuint();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseuint() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c53.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c53.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemantissa() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c59;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseuint();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseoperator() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s3 = peg$c62;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c63); }\n      }\n      if (s3 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s3 = peg$c64;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c66;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c68;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c69); }\n            }\n            if (s3 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c70) {\n                s3 = peg$c70;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c71); }\n              }\n              if (s3 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 94) {\n                  s3 = peg$c72;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c73); }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c74(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n\n    return s0;\n  }\n\n  function peg$parselparen() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c76;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c77); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserparen() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 41) {\n        s2 = peg$c79;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n    }\n\n    return s0;\n  }\n\n  function peg$parselbrack() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c82;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserbrack() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s2 = peg$c85;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c88;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c87); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseconnector() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c91) {\n        s3 = peg$c91;\n        peg$currPos += 2;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c93) {\n            s3 = peg$c93;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c94); }\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c90); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c96.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c97); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c96.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c97); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c95); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c96.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c97); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c96.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c97); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c95); }\n    }\n\n    return s0;\n  }\n\n\n    function step(type, args, min, max = min) {\n      if (args.length < min) {\n        error(`expected ${type} to have at least ${min} argument${min == 1 ? '' : 's'}, but found ${args.length} instead`);\n      } else if (args.length > max) {\n        error(`expected ${type} to have at most ${max} argument${max == 1 ? '' : 's'}, but found ${args.length} instead`);\n      }\n      return {kind: 'step', type, args}\n    }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import assert from 'assert';\n\nimport { inf } from '../constants';\nimport { Vector } from '../data';\n\nexport interface Fn {\n  readonly d: number;\n  readonly domain: number;\n  fn(x: Vector, y?: Vector): Vector;\n  sample(n: number, offset: number, limit: number): Generator<Vector>;\n}\n\nexport class CompositeFn implements Fn {\n  private readonly x: Vector;\n  private readonly y: Vector;\n  constructor(readonly fns: Fn[]) {\n    assert(fns.length, 'fns cannot be empty');\n\n    const length = Math.max(this.domainMax, this.dMax);\n    this.x = new Float32Array(length);\n    this.y = new Float32Array(length);\n  }\n\n  get first() {\n    return this.fns[0];\n  }\n\n  get last() {\n    return this.fns[this.fns.length - 1];\n  }\n\n  get domain() {\n    return this.first.domain;\n  }\n\n  get d() {\n    return this.last.d;\n  }\n\n  get domainMax() {\n    return this.fns.reduce((max, f) => Math.max(f.domain, max), 0);\n  }\n\n  get dMax() {\n    return this.fns.reduce((max, f) => Math.max(f.d, max), 0);\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { fns, d } = this;\n    const [first, ...rest] = fns;\n    if (fns.length == 0) return [];\n\n    for (const x of first.sample(n, offset, limit)) {\n      this.x.set(x);\n      if (rest.length) {\n        CompositeFn.apply(rest, this.x, this.y);\n      } else {\n        this.y.set(x);\n      }\n      yield this.y.subarray(0, d);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { fns, domain, d } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    this.x.set(x);\n    CompositeFn.apply(fns, this.x, this.y);\n    y.set(this.y.subarray(0, d));\n    return y;\n  };\n\n  private static apply = (fns: Fn[], x: Vector, y: Vector) => {\n    assert.equal(x.length, y.length);\n    for (const f of fns) {\n      f.fn(x.subarray(0, f.domain), y.subarray(0, f.d));\n      for (let i = 0; i < y.length; i++) {\n        if (!isFinite(y[i])) y[i] = Math.sign(y[i]) * inf;\n      }\n      x.set(y);\n    }\n  };\n\n  static Builder = class {\n    private readonly fns: Fn[] = [];\n\n    get d() {\n      return this.last.d;\n    }\n\n    get last() {\n      return this.fns[this.fns.length - 1];\n    }\n\n    add = (fn: Fn) => {\n      const { fns, last } = this;\n      if (last && fn.domain !== last.d) {\n        throw new Error(\n          `Cannot add ${fn} to composite, because its domain is not ${last.d}`\n        );\n      }\n      fns.push(fn);\n      return this;\n    };\n\n    build = () => {\n      return new CompositeFn(this.fns);\n    };\n  };\n}\n","import { Vector } from '../data';\nimport Interval from './interval';\nimport { Fn } from '.';\n\nexport default class Cube implements Fn {\n  private readonly interval: Interval;\n\n  constructor(readonly d: number, readonly l: number) {\n    this.interval = new Interval(\n      d,\n      new Array(d).fill(-l / 2),\n      new Array(d).fill(l / 2)\n    );\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y?: Vector) => this.interval.fn(x, y);\n\n  sample = (n: number, offset: number, limit: number) =>\n    this.interval.sample(n, offset, limit);\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport { Fn } from '.';\n\nexport default class Rotator implements Fn {\n  readonly r0: number;\n  readonly r1: number;\n\n  constructor(\n    readonly d: number,\n    readonly theta: number,\n    readonly d0: number,\n    readonly d1: number,\n    readonly f0: (theta: number) => number = Math.cos,\n    readonly f1: (theta: number) => number = Math.sin\n  ) {\n    this.r0 = f0(theta);\n    this.r1 = f1(theta);\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const p of cube.sample(n, offset, limit)) {\n      yield this.fn(p);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, d0, d1, r0, r1 } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    y.set(x);\n\n    const a = x[d0],\n      b = x[d1];\n    y[d0] = a * r0 - b * r1;\n    y[d1] = a * r1 + b * r0;\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Rotator from './rotator';\nimport { CompositeFn, Fn } from '.';\n\nexport default class Sphere implements Fn {\n  private readonly root: Float32Array;\n\n  constructor(readonly d: number, r: number) {\n    this.root = new Float32Array(d);\n    this.root[0] = r;\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, root } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    const r = new CompositeFn(\n      Array.from(new Array(d - 1).keys()).map(\n        i => new Rotator(d, phi[i], 0, i + 1)\n      )\n    );\n    r.fn(root, y);\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\n// This shape does not implement a torus. It used to,\n// but then I changed the way Rotator works, which\n// changed the way that the points of the sphere are\n// distributed, making the translation step behave incorrectly\n// Still makes a cool shape though, so keeping it\nexport default class FuckedUpTorus implements Fn {\n  private readonly sphere: Sphere;\n  private readonly circle: Sphere;\n\n  constructor(readonly d: number, readonly r: number, readonly t: number) {\n    this.sphere = new Sphere(d, t);\n    this.circle = new Sphere(2, r);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, sphere, circle } = this;\n    assert.equal(phi.length, domain);\n    assert.equal(y.length, d);\n    sphere.fn(phi, y);\n    const q = circle.fn(phi.subarray(d - 2));\n    y[0] += q[0];\n    y[d - 1] += q[1];\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport { Fn } from '.';\n\nexport class Identity implements Fn {\n  readonly domain: number;\n\n  constructor(readonly d: number) {\n    this.domain = d;\n  }\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    y.set(x);\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    throw new Error('identity function does not support sampling');\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\nexport default class Spiral implements Fn {\n  private readonly sphere: Sphere;\n\n  constructor(readonly d: number, readonly a: number[], readonly k: number[]) {\n    this.sphere = new Sphere(d, 1);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 4 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, k, domain, d } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    this.sphere.fn(phi, y);\n    let x = 0;\n    for (let i = 0; i < domain; i++) {\n      x += k[i] * phi[i];\n    }\n    const r = Math.exp(x);\n    for (let i = 0; i < d; i++) {\n      y[i] = y[i] * a[i] * r;\n    }\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport { Fn } from '.';\n\nexport default class Stereo implements Fn {\n  private readonly fromTemp: Vector;\n  private readonly toTemp: Vector;\n\n  constructor(private readonly from: number, private readonly to: number) {\n    this.fromTemp = new Float32Array(Math.max(from, to));\n    this.toTemp = new Float32Array(Math.max(from, to));\n  }\n\n  get domain() {\n    return this.from;\n  }\n\n  get d() {\n    return this.to;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.to)) => {\n    let { from, to, fromTemp, toTemp } = this;\n    assert.equal(x.length, from);\n    assert.equal(y.length, to);\n\n    if (from === to) {\n      y.set(x);\n      return y;\n    }\n\n    fromTemp.set(x);\n\n    while (from < to) {\n      Stereo.up(fromTemp.subarray(0, from), toTemp.subarray(0, ++from));\n      fromTemp.set(toTemp);\n    }\n\n    while (from > to) {\n      Stereo.down(fromTemp.subarray(0, from), toTemp.subarray(0, --from));\n      fromTemp.set(toTemp);\n    }\n\n    y.set(toTemp.subarray(0, to));\n    return y;\n  };\n\n  static up = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length + 1);\n    const n2 = norm2(x);\n    const divisor = n2 + 1;\n    temp[0] = (n2 - 1) / divisor;\n    for (let i = 1; i <= x.length; i++) {\n      temp[i] = (2 * x[i - 1]) / divisor;\n    }\n  };\n\n  static down = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length - 1);\n    for (let i = 0; i < temp.length; i++) {\n      temp[i] = x[i + 1] / (1 - x[0]);\n    }\n  };\n}\n\nconst norm2 = (x: Vector) => {\n  let result = 0;\n  for (let i = 0; i < x.length; i++) {\n    result += x[i] * x[i];\n  }\n  return result;\n};\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Rotator from './rotator';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\nexport default class Torus implements Fn {\n  private readonly cross: Sphere;\n\n  constructor(readonly d: number, readonly r: number, readonly t: number) {\n    assert(d > 2, `torus is only defined for d > 2; got ${d}`);\n    this.cross = new Sphere(d - 1, t);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (theta: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { cross, d, r } = this;\n    assert.equal(\n      theta.length,\n      d - 1,\n      `torus expects an input of ${d - 1}; got ${theta.length}`\n    );\n    const rotator = new Rotator(d, theta[d - 2], 0, d - 1);\n\n    cross.fn(theta.subarray(0, d - 2), y.subarray(0, d - 1));\n    y[0] += r;\n    rotator.fn(y, y);\n\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { CompositeFn, Fn } from '../fn';\nimport Cube from '../fn/cube';\nimport FuckedUpTorus from '../fn/fucked_up_torus';\nimport { Identity } from '../fn/identity';\nimport Rotator from '../fn/rotator';\nimport Sphere from '../fn/sphere';\nimport Spiral from '../fn/spiral';\nimport Stereo from '../fn/stereo';\nimport Torus from '../fn/torus';\nimport { pp } from '../pp';\nimport {\n  AccessNode,\n  ArithNode,\n  FnNode,\n  PipeNode,\n  Scalar,\n  StepNode,\n  Value\n} from './ast';\nimport { Link, Scope, UnaryOperator } from './types';\n\nexport type Resolution = {\n  n: number;\n  staticFn: CompositeFn;\n  dynamicFn: CompositeFn;\n};\n\nexport class Resolver {\n  constructor(private readonly scope: Scope) {}\n\n  resolve(node: PipeNode): Resolution;\n  resolve(node: Scalar, hint: 'number'): number;\n  resolve(node: Scalar, hint: 'function'): Function;\n  resolve(node: Scalar): Value;\n  resolve(node: any, hint?: any): any {\n    let value;\n    switch (node.kind) {\n      case 'pipe':\n        value = this.resolvePipe(node);\n        break;\n      case 'number':\n        value = node.value;\n        break;\n      case 'fn':\n        value = this.resolveFn(node);\n        break;\n      case 'access':\n        value = this.resolveAccess(node);\n        break;\n      case 'id':\n        value = this.resolveId(node.id);\n        break;\n      case 'arith':\n        value = this.resolveArith(node);\n        break;\n    }\n\n    if (hint) {\n      const actual = typeof value;\n      assert.equal(\n        actual,\n        hint,\n        `Expected identifier ${node.id} to resolve to a ${hint}, but was ${actual} instead.`\n      );\n\n      if (hint === 'number' && isNaN(value))\n        assert.fail(\n          `Expected node ${pp(\n            node\n          )} to resolve to a valid value, but was NaN instead.`\n        );\n    }\n\n    return value;\n  }\n\n  private resolvePipe = (pipe: PipeNode): Resolution => {\n    const [head, ...tail] = pipe.steps;\n    const links: Link[] = [];\n    const link = this.resolveStep(pipe.d0, head);\n\n    links.push(link);\n\n    for (let i = 0; i < tail.length; i++) {\n      links.push(this.resolveStep(links[i].fn.d, tail[i]));\n    }\n\n    const [staticFn, dynamicFn] = this.buildComposites(links);\n    return { n: pipe.n, staticFn, dynamicFn };\n  };\n\n  private buildComposites = (links: Link[]) => {\n    let builder = new CompositeFn.Builder();\n    while (links.length && !links[0].isDynamic) {\n      builder.add(links.shift().fn);\n    }\n\n    const init = builder.build();\n    builder = new CompositeFn.Builder().add(new Identity(init.d));\n\n    while (links.length) {\n      builder.add(links.shift().fn);\n    }\n\n    const iter = builder.build();\n    return [init, iter];\n  };\n\n  private resolveStep = (d0: number, { type, args }: StepNode): Link => {\n    const d = ranges[type](d0);\n    const fn = funs[type](d, ...args.map(a => this.resolve(a)));\n    const isDynamic = args.some(this.isNodeDynamic);\n\n    return { fn, isDynamic };\n  };\n\n  private resolveFn = ({ name, args }: FnNode): number => {\n    const fn = Math[name];\n    assert(\n      typeof fn === 'function',\n      `Expected ${name} to be a Math function in ${pp({ name, args })}`\n    );\n    return fn(...args.map(a => this.resolve(a)));\n  };\n\n  private resolveAccess = ({ id, index }: AccessNode): number => {\n    const scope = this.scope;\n    const target = scope[id];\n    assert(target, `Unable to resolve ${id} in scope ${pp(scope, 2)}`);\n    return target[this.resolve(index, 'number')];\n  };\n\n  private resolveId = (id: string): Value => {\n    if (id in this.scope) {\n      return this.scope[id];\n    } else if (id in Math) {\n      return Math[id];\n    } else {\n      const idu = id.toUpperCase();\n      if (idu in Math) return Math[idu];\n    }\n\n    assert.fail(`unable to resolve id ${id} in scope ${pp(this.scope, 2)}`);\n  };\n\n  private resolveArith = ({ op, operands }: ArithNode) => {\n    const [a, b] = operands.map(a => this.resolve(a, 'number'));\n    return ops[op](a, b);\n  };\n\n  private isNodeDynamic = (node: Scalar): boolean => {\n    switch (node.kind) {\n      case 'fn':\n        return node.args.some(this.isNodeDynamic);\n      case 'id':\n        return typeof this.resolve(node) === 'number';\n      case 'arith':\n        return node.operands.some(this.isNodeDynamic);\n      default:\n        return false;\n    }\n  };\n}\n\nconst ops: { [op: string]: (a: number, b: number) => number } = {\n  '+': (a, b) => a + b,\n  '-': (a, b) => a - b,\n  '*': (a, b) => a * b,\n  '/': (a, b) => a / b,\n  '**': (a, b) => a ** b,\n  '^': (a, b) => a ** b\n};\n\nconst funs: { [op: string]: (d: number, ...rest) => Fn } = {\n  cube: (d, l) => new Cube(d, l),\n  sphere: (d, r: number) => new Sphere(d, r),\n  spiral: (d, a: number, k: number) =>\n    new Spiral(d, new Array(d).fill(a), new Array(d - 1).fill(k)),\n  torus: (d, r: number, t: number) => new Torus(d, r, t),\n  fucked_up_torus: (d, r: number, t: number) => new FuckedUpTorus(d, r, t),\n  rotate: (\n    d: number,\n    theta: number,\n    d0: number,\n    d1: number,\n    f0: UnaryOperator = Math.cos,\n    f1: UnaryOperator = Math.sin\n  ) => {\n    assert(0 <= d0 && d0 < d, `rotate: Expected 0 <= d0 = ${d0} < d = ${d}`);\n    assert(0 <= d1 && d1 < d, `rotate: Expected 0 <= d1 = ${d1} < d = ${d}`);\n    return new Rotator(d, theta, d0, d1, f0, f1);\n  },\n  stereo: (d, to) => new Stereo(d, to)\n};\n\ntype Funs = typeof funs;\n\ntype Ranges = {\n  [P in keyof Funs]: (domain: number) => number;\n};\n\nconst ranges: Ranges = {\n  cube: domain => domain,\n  sphere: domain => domain + 1,\n  spiral: domain => domain + 1,\n  torus: domain => domain + 1,\n  fucked_up_torus: domain => domain + 1,\n  rotate: domain => domain,\n  r: domain => domain,\n  stereo: domain => domain\n};\n","import assert from 'assert';\n\nimport {\n  BufferAttribute,\n  BufferGeometry,\n  PerspectiveCamera,\n  Points,\n  PointsMaterial,\n  Scene,\n  VertexColors,\n  WebGLRenderer\n} from 'three';\n\nimport { Data } from '../../data';\n\nclass Renderer {\n  private renderer: WebGLRenderer;\n  private scene: Scene;\n  private camera: PerspectiveCamera;\n  private points: Points;\n  private z = 5;\n\n  constructor() {\n    this.renderer = new WebGLRenderer();\n    this.setSize();\n    window.onresize = () => {\n      this.setSize();\n      requestAnimationFrame(this.render);\n    };\n\n    this.points = new Points(\n      new BufferGeometry(),\n      new PointsMaterial({\n        vertexColors: VertexColors,\n        size: 0.001\n      })\n    );\n\n    this.scene = new Scene();\n    this.scene.add(this.points);\n  }\n\n  private setSize = () => {\n    const near = 0.01,\n      far = 1000;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const aspect = width / height;\n    const fov = 100;\n\n    this.renderer.setSize(width, height);\n    this.camera = new PerspectiveCamera(fov, aspect, near, far);\n    this.camera.position.z = this.z;\n  };\n\n  get domElement() {\n    return this.renderer.domElement;\n  }\n\n  render = () => {\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  update = ({ d, position, color }: Data) => {\n    const { points } = this;\n    const geometry = points.geometry as BufferGeometry;\n    assert.equal(position.length % d, 0);\n    assert.equal(color.length % 3, 0);\n\n    geometry.setAttribute('position', new BufferAttribute(position, d));\n    geometry.setAttribute('color', new BufferAttribute(color, 3));\n\n    let z = 5;\n    if (d > 2) {\n      geometry.computeBoundingSphere();\n      const s = geometry.boundingSphere;\n      z = Math.min(5, s.center.z + s.radius + 1);\n    }\n    this.camera.position.z = this.z = z;\n\n    requestAnimationFrame(this.render);\n  };\n}\n\nexport const renderer = new Renderer();\n"],"sourceRoot":""}