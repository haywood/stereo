{"version":3,"sources":["webpack:///./src/web/controls.html","webpack:///./src/web/controls.scss?633a","webpack:///./src/web/controls.scss","webpack:///./node_modules/multirange/multirange.js","webpack:///./src/web/inputs.ts","webpack:///./src/web/controls.ts"],"names":["module","exports","api","content","__esModule","default","i","options","exported","locals","___CSS_LOADER_API_IMPORT___","push","supportsMultiple","self","HTMLInputElement","prototype","descriptor","Object","getOwnPropertyDescriptor","multirange","input","classList","contains","value","getAttribute","values","split","min","max","ghost","cloneNode","add","parentNode","insertBefore","nextSibling","defineProperty","get","this","set","v","defineProperties","valueLow","Math","originalValue","enumerable","valueHigh","update","oninput","bind","addEventListener","style","setProperty","init","slice","call","document","querySelectorAll","forEach","temp","persistenceEnabled","URLSearchParams","window","location","search","hash","substr","atob","Input","constructor","id","_value","persistent","has","parse","updateHash","BehaviorSubject","newValue","str","stringify","btoa","toString","initFromOrWriteToHash","subject","newSubject","asObservable","oldValue","next","event","localStorage","setItem","TextInput","super","text","ToggleInput","on","off","disabled","test","Error","bool","RangeInput","parseInt","inputs","pipe","theta","h","animate","mic","fullscreen","fullscreenEnabled","allowedDbs","Controls","createElement","hasHover","activeElement","domElement","opacity","node","setupText","setupToggle","setupRange","stream","subscribe","body","requestFullscreen","fullscreenElement","exitFullscreen","selector","querySelector","el","assert","onchange","size","length","toggle","onclick","display","range","minEl","maxEl","innerText","onkeydown","repeat","target","key","innerHTML","html","setupInputs","setupKeyboardShortcuts","onmouseover","onmouseout"],"mappings":"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","file":"6.cb69279216bfbe2b1625.js","sourcesContent":["module.exports = \"<div id=\\\"inputs\\\">\\n    <section>\\n        <h2 title=\\\"Settings for point generation.\\\">\\n            Point Generation\\n        </h2>\\n        <span>\\n            <label for=\\\"pipe\\\"\\n                title=\\\"A sequence of operations that determines how the points are initialized and change over time.\\\">\\n                Pipe\\n            </label>\\n            <input id=\\\"pipe\\\" />\\n        </span>\\n\\n        <span>\\n            <label for=\\\"theta\\\"\\n                title=\\\"Intended for use in functions of an angle (e.g. sin, cos, tan, R) to avoid repeating the same expression in multiple places.\\\">\\n                Theta\\n            </label>\\n            <input id=\\\"theta\\\" />\\n        </span>\\n    </section>\\n\\n    <section>\\n        <h2 title=\\\"Settings for point color, represented in HSV.\\\">\\n            Color\\n        </h2>\\n\\n        <span>\\n            <label for=\\\"h\\\" title=\\\"An expression to determine the HSV hue of a point.\\\">\\n                Hue\\n            </label>\\n            <input id=\\\"h\\\" />\\n        </span>\\n\\n        <span>\\n            <label for=\\\"v\\\" title=\\\"An expression to determine the HSV value of a point.\\\">\\n                Value\\n            </label>\\n            <input id=\\\"v\\\" />\\n        </span>\\n    </section>\\n</div>\\n\\n<div id=\\\"media\\\">\\n    <i id=\\\"play\\\" class=\\\"material-icons\\\">play_arrow</i>\\n    <i id=\\\"pause\\\" class=\\\"material-icons\\\">pause</i>\\n    <i id=\\\"mic\\\" class=\\\"material-icons\\\">mic</i>\\n    <i id=\\\"mic_off\\\" class=\\\"material-icons\\\">mic_off</i>\\n\\n    <span id=\\\"allowed_dbs\\\">\\n        <div class=\\\"min\\\"></div>dB\\n        <div id=\\\"allowed_dbs_input\\\">\\n            <input type=\\\"range\\\" multiple min=\\\"-100\\\" max=\\\"0\\\" />\\n        </div>\\n        <div class=\\\"max\\\"></div>dB\\n    </span>\\n\\n    <div class=\\\"spacer\\\"></div>\\n\\n    <i id=\\\"enter_fullscreen\\\" class=\\\"material-icons\\\">fullscreen</i>\\n    <i id=\\\"exit_fullscreen\\\" class=\\\"material-icons\\\">fullscreen_exit</i>\\n</div>\\n\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./controls.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\"]);\n// Module\nexports.push([module.id, \"#controls{opacity:0}#inputs{align-items:flex-end;box-sizing:border-box;display:flex;flex-flow:column wrap;justify-content:flex-start;padding:0px 16px;position:absolute;right:0;top:0}#inputs span,#inputs i{padding-bottom:8px}#inputs h2[title],#inputs label[title]{cursor:help}#inputs section{align-items:flex-end;display:flex;flex-flow:column wrap;justify-content:flex-start}#media{bottom:0;box-sizing:border-box;display:flex;flex-flow:row wrap;padding:32px;position:absolute;width:100%}#media i.material-icons{cursor:pointer;display:'none';font-size:36px}#allowed_dbs{align-items:center;display:flex;flex-flow:row}#allowed_dbs_input{align-items:center;display:flex;flex-flow:row;margin:0 8px}.spacer{flex:1}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","(function() {\n\"use strict\";\n\nvar supportsMultiple = self.HTMLInputElement && \"valueLow\" in HTMLInputElement.prototype;\n\nvar descriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, \"value\");\n\nvar multirange = function(input) {\n\tif (supportsMultiple || input.classList.contains(\"multirange\")) {\n\t\treturn;\n\t}\n\n\tvar value = input.getAttribute(\"value\");\n\tvar values = value === null ? [] : value.split(\",\");\n\tvar min = +(input.min || 0);\n\tvar max = +(input.max || 100);\n\tvar ghost = input.cloneNode();\n\n\tinput.classList.add(\"multirange\", \"original\");\n\tghost.classList.add(\"multirange\", \"ghost\");\n\n\tinput.value = values[0] || min + (max - min) / 2;\n\tghost.value = values[1] || min + (max - min) / 2;\n\n\tinput.parentNode.insertBefore(ghost, input.nextSibling);\n\n\tObject.defineProperty(input, \"originalValue\", descriptor.get ? descriptor : {\n\t\t// Fuck you Safari >:(\n\t\tget: function() { return this.value; },\n\t\tset: function(v) { this.value = v; }\n\t});\n\n\tObject.defineProperties(input, {\n\t\tvalueLow: {\n\t\t\tget: function() { return Math.min(this.originalValue, ghost.value); },\n\t\t\tset: function(v) { this.originalValue = v; },\n\t\t\tenumerable: true\n\t\t},\n\t\tvalueHigh: {\n\t\t\tget: function() { return Math.max(this.originalValue, ghost.value); },\n\t\t\tset: function(v) { ghost.value = v; },\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (descriptor.get) {\n\t\t// Again, fuck you Safari\n\t\tObject.defineProperty(input, \"value\", {\n\t\t\tget: function() { return this.valueLow + \",\" + this.valueHigh; },\n\t\t\tset: function(v) {\n\t\t\t\tvar values = v.split(\",\");\n\t\t\t\tthis.valueLow = values[0];\n\t\t\t\tthis.valueHigh = values[1];\n\t\t\t\tupdate();\n\t\t\t},\n\t\t\tenumerable: true\n\t\t});\n\t}\n\n\tif (typeof input.oninput === \"function\") {\n\t\tghost.oninput = input.oninput.bind(input);\n\t}\n\n\tfunction update() {\n\t\tghost.style.setProperty(\"--low\", 100 * ((input.valueLow - min) / (max - min)) + 1 + \"%\");\n\t\tghost.style.setProperty(\"--high\", 100 * ((input.valueHigh - min) / (max - min)) - 1 + \"%\");\n\t}\n\n\tinput.addEventListener(\"input\", update);\n\tghost.addEventListener(\"input\", update);\n\n\tupdate();\n}\n\nmultirange.init = function() {\n\t[].slice.call(document.querySelectorAll(\"input[type=range][multiple]:not(.multirange)\")).forEach(multirange);\n}\n\nif (typeof module === \"undefined\") {\n\tself.multirange = multirange;\n\tif (document.readyState == \"loading\") {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", multirange.init);\n\t}\n\telse {\n\t\tmultirange.init();\n\t}\n} else {\n\tmodule.exports = multirange;\n}\n\n})();\n","import { Subject, BehaviorSubject } from 'rxjs';\n\ntype Change<T> = {\n    newValue: T;\n    oldValue?: T;\n    event?: Event;\n};\n\nconst query = new URLSearchParams(window.location.search);\nconst persistenceEnabled = query.get('p') != '0';\nconst hash = (() => {\n    const temp = window.location.hash.substr(1);\n    return new URLSearchParams(temp ? atob(temp) : '');\n})();\n\nexport abstract class Input<T> {\n    private readonly subject: Subject<Change<T>>;\n\n    constructor(\n        readonly id: string,\n        private _value: T,\n        private readonly persistent: boolean\n    ) {\n        if (persistenceEnabled) {\n            this.initFromOrWriteToHash();\n        } else {\n            this.persistent = false;\n        }\n        this.subject = this.newSubject();\n    }\n\n    initFromOrWriteToHash = () => {\n        if (this.persistent && hash.has(this.id)) {\n            this._value = this.parse(hash.get(this.id));\n        } else if (this.persistent) {\n            this.updateHash();\n        }\n    };\n\n    newSubject = () => new BehaviorSubject({ newValue: this._value });\n\n    protected abstract parse(str: string): T;\n    protected abstract stringify(value: T): string;\n\n    get stream() {\n        return this.subject.asObservable();\n    }\n\n    get value() {\n        return this._value;\n    }\n\n    set value(newValue: T) {\n        const oldValue = this.value;\n        this._value = newValue;\n        this.subject.next({ newValue, oldValue, event: window.event });\n        if (this.persistent) {\n            const str = this.stringify(newValue);\n            localStorage.setItem(`inputs.${this.id}`, str);\n            this.updateHash();\n        }\n    }\n\n    private updateHash = () => {\n        const str = this.stringify(this.value);\n        hash.set(this.id, str);\n        document.location.hash = btoa(hash.toString());\n\n    };\n}\n\ntype TextInputId = 'pipe' | 'theta' | 'h' | 'v';\n\nexport class TextInput extends Input<string> {\n    readonly disabled = false;\n\n    constructor(\n        readonly id: TextInputId,\n        _value: string,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    protected parse(str: string) {\n        return str;\n    }\n\n    protected stringify(text: string) {\n        return text;\n    }\n}\n\ntype ToggleInputId = 'animate' | 'mic' | 'fullscreen';\n\nexport class ToggleInput extends Input<boolean> {\n    constructor(\n        readonly id: ToggleInputId,\n        _value: boolean,\n        readonly on: string,\n        readonly off: string,\n        readonly disabled: boolean = false,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    protected parse(str: string) {\n        if (/1|true/i.test(str)) return true;\n        else if (/0|false/i.test(str)) return false;\n        else throw new Error(`invalid boolean value for input ${this.id}: ${str}`);\n    };\n\n    protected stringify(bool: boolean) {\n        return bool ? '1' : '0';\n    }\n}\n\n\ntype RangeInputId = 'allowed_dbs';\n\nexport class RangeInput extends Input<[number, number]> {\n    constructor(\n        readonly id: RangeInputId,\n        _value: [number, number],\n        readonly disabled: boolean = false,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    parse(str: string): [number, number] {\n        const [min, max] = str.split(/,/);\n        return [parseInt(min), parseInt(max)];\n    }\n\n    stringify([min, max]) {\n        return `${min},${max}`;\n    }\n}\n\nexport const inputs = {\n    pipe: new TextInput(\n        'pipe',\n        '10000->sphere(4, 1)->R(theta, 0, 1, cos, tan)->R(theta, 0, 2)->R(theta, 0, 3)->stereo(3)',\n    ),\n    theta: new TextInput('theta', 'pi * (t + power) / 20'),\n    h: new TextInput('h', 'chroma * (i + 1) / n'),\n    v: new TextInput('v', 'power'),\n    animate: new ToggleInput('animate', true, 'play', 'pause', false, true),\n    mic: new ToggleInput('mic', false, 'mic', 'mic_off', false, false),\n    fullscreen: new ToggleInput(\n        'fullscreen',\n        false,\n        'enter_fullscreen',\n        'exit_fullscreen',\n        !document.fullscreenEnabled,\n        false,\n    ),\n    allowedDbs: new RangeInput('allowed_dbs', [-70, -30]),\n};\nexport type Inputs = typeof inputs;\n\nwindow.inputs = inputs;\n","import { inputs, ToggleInput, TextInput, RangeInput } from './inputs';\nimport html from './controls.html';\nimport './controls.scss';\nimport assert from 'assert';\nimport multirange from 'multirange';\n\nexport class Controls {\n    readonly domElement = document.createElement('div');\n    private hasHover = false;\n\n    constructor() {\n        this.domElement.id = 'controls';\n        this.domElement.innerHTML = html;\n\n        this.setupInputs();\n        this.setupKeyboardShortcuts();\n\n        this.domElement.onmouseover = () => this.hasHover = true;\n        this.domElement.onmouseout = () => this.hasHover = false;\n    }\n\n    hasAttention = () =>\n        this.hasHover || this.contains(document.activeElement);\n\n    show = () => this.domElement.style.opacity = '1';\n\n    hide = () => this.domElement.style.opacity = '0';\n\n    private contains = (node: Node) => this.domElement.contains(node);\n\n    private setupInputs = () => {\n        for (const input of Object.values(inputs)) {\n            if (input.disabled) continue;\n\n            if (input instanceof TextInput) {\n                this.setupText(input);\n            } else if (input instanceof ToggleInput) {\n                this.setupToggle(input);\n            } else if (input instanceof RangeInput) {\n                this.setupRange(input);\n            }\n        }\n\n        if (!inputs.fullscreen.disabled) {\n            inputs.fullscreen.stream.subscribe(({ newValue }) => {\n                if (newValue) document.body.requestFullscreen();\n                else if (document.fullscreenElement) document.exitFullscreen();\n            });\n        }\n    };\n\n    private querySelector = <E extends Element = HTMLElement>(selector: string) =>\n        this.domElement.querySelector<E>(selector);\n\n    private setupText = (text: TextInput) => {\n        const el = this.querySelector<HTMLInputElement>(`#${text.id}`);\n        assert(el, `Did not find element for input #${text.id}`);\n\n        el.onchange = () => text.value = el.value;\n        el.oninput = () => el.size = el.value.length;\n\n        text.stream.subscribe(({ newValue }) => {\n            el.value = newValue;\n            el.size = newValue.length;\n        });\n    };\n\n    private setupToggle = (toggle: ToggleInput) => {\n        const on = this.querySelector(`#${toggle.on}`);\n        const off = this.querySelector(`#${toggle.off}`);\n\n        on.onclick = () => toggle.value = true;\n\n        off.onclick = () => toggle.value = false;\n\n        toggle.stream.subscribe(({ newValue }) => {\n            if (newValue) {\n                on.style.display = 'none';\n                off.style.display = 'inline';\n            } else {\n                on.style.display = 'inline';\n                off.style.display = 'none';\n            }\n        });\n    };\n\n    private setupRange = (range: RangeInput) => {\n        const el = this.querySelector<HTMLInputElement>(`#${range.id}`);\n        const input = el.querySelector<HTMLInputElement>('input');\n        multirange(input);\n        const minEl = el.querySelector<HTMLElement>('.min');\n        const maxEl = el.querySelector<HTMLElement>('.max');\n\n        input.onchange = () => {\n            range.value = [+input.valueLow, +input.valueHigh];\n        };\n\n        el.querySelector<HTMLInputElement>('input.ghost').oninput = input.oninput = () => {\n            minEl.innerText = input.valueLow;\n            maxEl.innerText = input.valueHigh;\n        };\n\n        range.stream.subscribe(({ newValue }) => {\n            input.value = range.stringify(newValue);\n            minEl.innerText = input.valueLow;\n            maxEl.innerText = input.valueHigh;\n        });\n    };\n\n    private setupKeyboardShortcuts = () => {\n        document.onkeydown = (event: KeyboardEvent) => {\n            if (event.repeat) return;\n            if (this.domElement.contains(event.target as Node)) return;\n\n            switch (event.key) {\n                case ' ':\n                    inputs.animate.value = !inputs.animate.value;\n                    break;\n                case 'm':\n                case 'M':\n                    inputs.mic.value = !inputs.mic.value;\n                    break;\n                case 'Enter':\n                    inputs.fullscreen.value = !inputs.fullscreen.value;\n                    break;\n            }\n        };\n    };\n}\n"],"sourceRoot":""}