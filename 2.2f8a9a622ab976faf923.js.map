{"version":3,"sources":["webpack:///./src/core/pp.ts","webpack:///./src/web/inputs.ts","webpack:///./src/core/data.ts","webpack:///./src/core/pipe/pool.ts","webpack:///./src/core/fn/fn.ts","webpack:///./src/core/fn/interval.ts","webpack:///./src/core/fn/cube.ts","webpack:///./src/core/fn/rotator.ts","webpack:///./src/core/fn/sphere.ts","webpack:///./src/core/fn/spiral.ts","webpack:///./src/core/fn/torus.ts","webpack:///./src/core/fn/fucked_up_torus.ts","webpack:///./src/core/fn/stereo.ts","webpack:///./src/core/fn/identity.ts","webpack:///./src/core/pipe/resolver.ts","webpack:///./src/core/pipe/pipe.worker.ts","webpack:///./src/core/pipe/grammar.pegjs","webpack:///./src/core/pipe/parser.ts","webpack:///./src/core/pipe/compiler.ts","webpack:///./src/core/pipe/evaluator.ts","webpack:///./src/core/pipe/pipe.ts"],"names":["pp","a","p","JSON","stringify","temp","persistenceEnabled","URLSearchParams","window","location","search","get","hash","substr","atob","Input","constructor","id","_value","persistent","this","has","parse","updateHash","BehaviorSubject","newValue","el","_setup","str","value","set","document","btoa","toString","initFromOrWriteToHash","subject","newSubject","asObservable","oldValue","next","event","TextInput","super","onchange","oninput","size","length","stream","subscribe","text","ToggleInput","on","off","disabled","querySelector","onclick","style","display","test","Error","bool","n","poolSize","inputs","pipe","theta","h","v","animate","mic","fullscreen","fullscreenEnabled","allowedDbs","input","multirange","minEl","maxEl","valueLow","valueHigh","innerText","min","max","split","parseInt","debug","Data","d","position","color","buffer","data","Float32Array","nOffset","positionOffset","d0","SharedArrayBuffer","inputOffset","arr","offset","subarray","inputLength","positionLength","colorOffset","i","stride","assert","pool","logger","getLogger","setLevel","navigator","hardwareConcurrency","startPool","info","Pool","spawn","Worker","name","Map","promises","push","queue","Promise","all","initialize","params","timing","forkJoin","chunk","w","iterate","getOrInitialize","key","l","getKey","bufferFor","op","Math","round","label","start","Date","now","t","elapsed","runPipeline","ast","Pipe","compile","resolver","Resolver","scopeFor","staticFn","dynamicFn","resolve","slice","cos","sin","exp","tan","tanh","components","Array","from","keys","CompositeFn","fns","limit","first","rest","x","sample","apply","y","domain","equal","domainMax","dMax","last","reduce","f","fn","isFinite","sign","Interval","b","nPerLevel","points","pop","successors","pow","Cube","interval","fill","Rotator","d1","f0","f1","cube","r0","r1","Sphere","r","PI","phi","root","map","Spiral","k","sphere","Torus","cross","rotator","FuckedUpTorus","circle","q","Stereo","to","fromTemp","toTemp","up","down","n2","norm2","divisor","result","Identity","scope","node","extraScope","kind","resolvePipe","resolveFn","resolveIdToNumber","resolveArith","chain","links","fun","shift","args","link","resolveFirstStep","resolveStep","buildComposites","builder","Builder","isDynamic","add","init","build","type","funs","resolveOperand","some","isNodeDynamic","prev","ranges","arg","resolveId","idu","toUpperCase","fail","operands","ops","includes","rotate","spiral","torus","fucked_up_torus","stereo","module","exports","peg$SyntaxError","message","expected","found","captureStackTrace","child","parent","ctor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","s","replace","j","descriptions","sort","join","describeExpected","describeFound","SyntaxError","options","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsepipe","arith","peg$parsearith","peg$startRuleFunction","peg$c0","peg$c1","head","tail","peg$c2","peg$c3","toLowerCase","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","parseFloat","peg$c11","peg$c12","peg$c13","peg$classExpectation","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$literalExpectation","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$buildStructuredError","s0","s1","s3","peg$parseuint","peg$parsepipe_sep","peg$parsechain","peg$parsestep","peg$parseidentifier","peg$parselparen","peg$parsestep_args","peg$parsecomma","peg$parserparen","s2","peg$parsescalar","peg$parse_","substring","peg$parsearith_op","s4","s5","s6","charAt","peg$parsemantissa","peg$parseint","peg$parsefloat","peg$parsenumber","peg$parsefn_args","peg$parse__","setDefaultLevel","loggingParse","expr","err","error","Parser","Compiler","parsePipe","simplifier","simplify","parseArith","simplifyArithNode","Simplifier","substitutions","simplifyStepNode","simplifyOperand","simplifyFnNode","simplifyIdNode","Evaluator","hv","dynaicFn","iter","computeColors","hsv","hsl","c","Color","g","normalized","compilePipe","evaluatorForNormal","scopeForNormal","compiler","compileHV","power","chroma","compileArith"],"mappings":"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","file":"2.2f8a9a622ab976faf923.js","sourcesContent":["export const pp = (a: any, p = 2) => JSON.stringify(a, null, p);\n","import { Subject, BehaviorSubject } from 'rxjs';\nimport { poolSize } from '../core/pipe/pool';\nimport debug from './debug';\nimport multirange from 'multirange';\n\ntype Change<T> = {\n    newValue: T;\n    oldValue?: T;\n    event?: Event;\n};\n\nconst query = new URLSearchParams(window.location.search);\nconst persistenceEnabled = query.get('p') != '0';\nconst hash = (() => {\n    const temp = window.location.hash.substr(1);\n    return new URLSearchParams(temp ? atob(temp) : '');\n})();\n\nexport abstract class Input<T, E = HTMLElement> {\n    private readonly subject: Subject<Change<T>>;\n    protected el?: E;\n\n    constructor(\n        readonly id: string,\n        private _value: T,\n        private readonly persistent: boolean\n    ) {\n        if (persistenceEnabled) {\n            this.initFromOrWriteToHash();\n        } else {\n            this.persistent = false;\n        }\n        this.subject = this.newSubject();\n    }\n\n    initFromOrWriteToHash = () => {\n        if (this.persistent && hash.has(this.id)) {\n            this._value = this.parse(hash.get(this.id));\n        } else if (this.persistent) {\n            this.updateHash();\n        }\n    };\n\n    newSubject = () => new BehaviorSubject({ newValue: this._value });\n\n    setup = (el: E) => {\n        this.el = el;\n        this._setup();\n    };\n\n    protected abstract _setup(): void;\n\n    protected abstract parse(str: string): T;\n    protected abstract stringify(value: T): string;\n\n    get stream() {\n        return this.subject.asObservable();\n    }\n\n    get value() {\n        return this._value;\n    }\n\n    set value(newValue: T) {\n        const oldValue = this.value;\n        this._value = newValue;\n        this.subject.next({ newValue, oldValue, event: window.event });\n        if (this.persistent) this.updateHash();\n    }\n\n    private updateHash = () => {\n        const str = this.stringify(this.value);\n        hash.set(this.id, str);\n        document.location.hash = btoa(hash.toString());\n\n    };\n}\n\ntype TextInputId = 'pipe' | 'theta' | 'h' | 'v';\n\nexport class TextInput extends Input<string, HTMLInputElement> {\n    readonly disabled = false;\n\n    constructor(\n        readonly id: TextInputId,\n        _value: string,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    protected _setup = () => {\n        this.el.onchange = () => this.value = this.el.value;\n        this.el.oninput = () => this.el.size = this.el.value.length;\n\n        this.stream.subscribe(({ newValue }) => {\n            this.el.value = newValue;\n            this.el.size = newValue.length;\n        });\n    };\n\n    protected parse(str: string) {\n        return str;\n    }\n\n    protected stringify(text: string) {\n        return text;\n    }\n}\n\ntype ToggleInputId = 'animate' | 'mic' | 'fullscreen';\n\nexport class ToggleInput extends Input<boolean> {\n    constructor(\n        readonly id: ToggleInputId,\n        _value: boolean,\n        readonly on: string,\n        readonly off: string,\n        readonly disabled: boolean = false,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    protected _setup = () => {\n        const on = this.el.querySelector<HTMLInputElement>('.on');\n        on.onclick = () => this.value = true;\n\n        const off = this.el.querySelector<HTMLInputElement>('.off');\n        off.onclick = () => this.value = false;\n\n        this.stream.subscribe(({ newValue }) => {\n            if (newValue) {\n                on.style.display = 'none';\n                off.style.display = 'inline';\n            } else {\n                on.style.display = 'inline';\n                off.style.display = 'none';\n            }\n        });\n    };\n\n    protected parse(str: string) {\n        if (/1|true/i.test(str)) return true;\n        else if (/0|false/i.test(str)) return false;\n        else throw new Error(`invalid boolean value for input ${this.id}: ${str}`);\n    };\n\n    protected stringify(bool: boolean) {\n        return bool ? '1' : '0';\n    }\n}\n\n\ntype RangeInputId = 'allowed_db_range';\n\nexport class RangeInput extends Input<[number, number]> {\n    constructor(\n        readonly id: RangeInputId,\n        _value: [number, number],\n        readonly disabled: boolean = false,\n        persistent: boolean = true,\n    ) {\n        super(id, _value, persistent);\n    }\n\n    protected _setup = () => {\n        const input = this.el.querySelector<MultirangeHTMLInputElement>('input');\n        multirange(input);\n        const minEl = this.el.querySelector<HTMLElement>('.min');\n        const maxEl = this.el.querySelector<HTMLElement>('.max');\n\n        input.onchange = () => {\n            this.value = [+input.valueLow, +input.valueHigh];\n        };\n\n        this.el.querySelector<HTMLInputElement>('input.ghost').oninput = input.oninput = () => {\n            minEl.innerText = input.valueLow.toString();\n            maxEl.innerText = input.valueHigh.toString();\n        };\n\n        this.stream.subscribe(({ newValue }) => {\n            input.value = this.stringify(newValue);\n            minEl.innerText = input.valueLow.toString();\n            maxEl.innerText = input.valueHigh.toString();\n        });\n    };\n\n    parse(str: string): [number, number] {\n        const [min, max] = str.split(/,/);\n        return [parseInt(min), parseInt(max)];\n    }\n\n    stringify([min, max]) {\n        return `${min},${max}`;\n    }\n}\n\n// Points generation is done in parallel, so pick n such\n// that each chunk is size 1000\nconst n = 1000 * poolSize;\n\nexport const inputs = {\n    pipe: new TextInput(\n        'pipe',\n        `${n}->sphere(4, 1)->R(theta, 0, 1, cos, tan)->R(theta, 0, 2)->R(theta, 0, 3)->stereo(3)`,\n    ),\n    theta: new TextInput('theta', 'pi * (t + power) / 20'),\n    h: new TextInput('h', 'chroma * i / (n - 1)'),\n    v: new TextInput('v', 'power'),\n    animate: new ToggleInput('animate', true, 'play', 'pause', false, true),\n    mic: new ToggleInput('mic', false, 'mic', 'mic_off', false, false),\n    fullscreen: new ToggleInput(\n        'fullscreen',\n        false,\n        'enter_fullscreen',\n        'exit_fullscreen',\n        !document.fullscreenEnabled,\n        false,\n    ),\n    allowedDbs: new RangeInput('allowed_db_range', [-100, -30]),\n};\nexport type Inputs = typeof inputs;\n\ndebug('inputs', inputs);\n","import assert from 'assert';\n\nexport type Vector = Float32Array;\n\nexport class Data {\n    constructor(\n        readonly n: number,\n        readonly d: number,\n        readonly position: Float32Array,\n        readonly color: Float32Array\n    ) { }\n\n    static fromBuffer = (buffer: ArrayBuffer) => {\n        const data = new Float32Array(buffer);\n        const n = data[Data.nOffset];\n        const d = data[Data.positionOffset(data)];\n        const position = Data.position(data);\n        const color = Data.color(data);\n        return new Data(n, d, position, color);\n    };\n\n    static bufferFor = (n: number, d0: number, d: number): SharedArrayBuffer => {\n        const bytesPerNum = 4;\n        const count = 3 + n * (d0 + d + 3);\n        const byteLength = bytesPerNum * count;\n        const buffer = new SharedArrayBuffer(byteLength);\n        const data = new Float32Array(buffer);\n        data[Data.nOffset] = n;\n        data[Data.inputOffset] = d0;\n        data[Data.positionOffset(data)] = d;\n        return buffer;\n    };\n\n    static input = (arr: Float32Array) => {\n        const offset = Data.inputOffset + 1;\n        return arr.subarray(offset, offset + Data.inputLength(arr));\n    };\n\n    static position = (arr: Float32Array) => {\n        const offset = Data.positionOffset(arr) + 1;\n        return arr.subarray(offset, offset + Data.positionLength(arr));\n    };\n\n    static color = (arr: Float32Array) => {\n        const offset = Data.colorOffset(arr);\n        return arr.subarray(offset);\n    };\n\n    static nOffset = 0;\n\n    static inputOffset = Data.nOffset + 1;\n    private static inputLength = (arr: Float32Array) => {\n        const n = arr[Data.nOffset];\n        const d0 = arr[Data.inputOffset];\n        return n * d0;\n    };\n\n    static positionOffset = (arr: Float32Array) =>\n        Data.inputOffset + Data.inputLength(arr) + 1;\n    private static positionLength = (arr: Float32Array) => {\n        const n = arr[Data.nOffset];\n        const d = arr[Data.positionOffset(arr)];\n        return n * d;\n    };\n\n    static colorOffset = (arr: Float32Array) =>\n        Data.positionOffset(arr) + Data.positionLength(arr) + 1;\n\n    static get = (arr: Vector, i: number, stride: number) => {\n        const offset = i * stride;\n        return arr.subarray(offset, offset + stride);\n    };\n\n    static set = (arr: Vector, value: ArrayLike<number>, i: number, stride: number) => {\n        assert(value.length <= stride);\n        const offset = i * stride;\n        return arr.set(value, offset);\n    };\n}\n","import { spawn, Worker, Pool, ModuleThread } from \"threads\";\nimport { getLogger } from 'loglevel';\nimport { Params, PipelineWorker, Chunk } from './types';\nimport { Pipe } from \"./pipe\";\nimport { Data } from \"../data\";\nimport { Resolver, Resolution } from \"./resolver\";\n\nconst logger = getLogger('PipelinePool');\nlet pool: Pool<ModuleThread<PipelineWorker>>;\nlet data: Map<string, SharedArrayBuffer>;\nlogger.setLevel('info');\n\nexport const poolSize = 2 * navigator.hardwareConcurrency;\n\nexport const startPool = async () => {\n    logger.info('starting worker pool');\n    let i = 0;\n    pool = Pool(() => spawn(new Worker('./pipe.worker', { name: `pipe${i++}` })), poolSize);\n    data = new Map();\n    let promises = [];\n    for (let i = 0; i < poolSize; i++) {\n        // pre-load scripts so the first task doesn't take forever\n        promises.push(pool.queue(async () => { }));\n    }\n    await Promise.all(promises);\n};\n\nexport const stopPool = async (): Promise<void> => {\n    logger.info('waiting for pending tasks to complete before terminating pool');\n    try {\n        await pool.terminate(true);\n    } catch (err) {\n        logger.error(err);\n    } finally {\n        pool = null;\n    }\n};\n\nconst initialize = (params: Params, n: number, buffer: SharedArrayBuffer): Promise<void> => {\n    return timing('initialization')(async () => {\n        return forkJoin(n, async (chunk) => {\n            return pool.queue(w => w.initialize(params, chunk, buffer));\n        });\n    });\n};\n\nconst iterate = (params: Params, n: number, buffer: SharedArrayBuffer) => {\n    return timing('iteration')(async () => {\n        return forkJoin(n, async (chunk) => {\n            return pool.queue(w => w.iterate(params, chunk, buffer));\n        });\n    });\n};\n\nconst getKey = (params: Params) => JSON.stringify({\n    pipe: params.pipe,\n    theta: params.theta,\n    h: params.h,\n    l: params.v,\n});\n\nconst getOrInitialize = async (params: Params, n: number, d0: number, d: number): Promise<SharedArrayBuffer> => {\n    const key = getKey(params);\n    if (!data.has(key)) {\n        const buffer = Data.bufferFor(n, d0, d);\n        await initialize(params, n, buffer);\n        data.set(key, buffer);\n    }\n    return data.get(key);\n};\n\nconst forkJoin = async (n: number, op: (chunk: Chunk) => Promise<void>) => {\n    const size = Math.round(n / poolSize);\n    let promises = [];\n    for (let offset = 0; offset < n; offset += size) {\n        const chunk = { offset, size: Math.min(n - offset, size) };\n        promises.push(op(chunk));\n    }\n    await Promise.all(promises);\n};\n\nconst timing = (label: string) => async<T>(op: () => Promise<T>) => {\n    const start = Date.now();\n    const t = await op();\n    const elapsed = Date.now() - start;\n    logger.debug(`${label} took ${elapsed}ms`);\n    return t;\n};\n\nexport const runPipeline = async (params: Params): Promise<SharedArrayBuffer> => {\n    const ast = Pipe.compile(params);\n    const resolver = new Resolver(Pipe.scopeFor(params, ast.n));\n    const { n, staticFn, dynamicFn } = resolver.resolve(ast) as Resolution;\n    const buffer = await getOrInitialize(params, n, staticFn.d, dynamicFn.d);\n    await iterate(params, n, buffer);\n\n    return buffer.slice(0);\n};\n","import { Vector } from \"../data\";\nimport assert from 'assert';\n\nexport const cos = Math.cos;\nexport const sin = Math.sin;\nexport const tan = Math.tan;\nexport const tanh = Math.tanh;\nexport const exp = Math.exp;\n\nexport const components = (d) => Array.from(new Array(d).keys());\n\nexport interface Fn {\n  readonly d: number;\n  readonly domain: number;\n  fn(x: Vector, y?: Vector): Vector;\n  sample(n: number, offset: number, limit: number): Generator<Vector>;\n}\n\nexport class CompositeFn implements Fn {\n  private readonly x: Vector;\n  private readonly y: Vector;\n  constructor(readonly fns: Fn[]) {\n    assert(fns.length, 'fns cannot be empty');\n\n    const length = Math.max(this.domainMax, this.dMax);\n    this.x = new Float32Array(length);\n    this.y = new Float32Array(length);\n\n  }\n\n  get first() {\n    return this.fns[0];\n  }\n\n  get last() {\n    return this.fns[this.fns.length - 1];\n  }\n\n  get domain() {\n    return this.first.domain;\n  }\n\n  get d() {\n    return this.last.d;\n  }\n\n  get domainMax() {\n    return this.fns.reduce((max, f) => Math.max(f.domain, max), 0);\n  }\n\n  get dMax() {\n    return this.fns.reduce((max, f) => Math.max(f.d, max), 0);\n  }\n\n  sample = function* (n: number, offset: number, limit: number) {\n    const { fns, d } = this;\n    const [first, ...rest] = fns;\n    if (fns.length == 0) return [];\n\n    for (const x of first.sample(n, offset, limit)) {\n      this.x.set(x);\n      if (rest.length) {\n        CompositeFn.apply(rest, this.x, this.y);\n      } else {\n        this.y.set(x);\n      }\n      yield this.y.subarray(0, d);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { fns, domain, d } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    this.x.set(x);\n    CompositeFn.apply(fns, this.x, this.y);\n    y.set(this.y.subarray(0, d));\n    return y;\n  };\n\n  private static apply = (fns: Fn[], x: Vector, y: Vector) => {\n    assert.equal(x.length, y.length);\n    for (const f of fns) {\n      f.fn(x.subarray(0, f.domain), y.subarray(0, f.d));\n      x.set(y);\n    }\n    for (let i = 0; i < y.length; i++) {\n      if (!isFinite(y[i])) y[i] = Math.sign(y[i]) * (2 ** 32 - 1);\n    }\n  };\n\n  static Builder = class {\n    private readonly fns: Fn[] = [];\n\n    get d() {\n      return this.last.d;\n    }\n\n    get last() {\n      return this.fns[this.fns.length - 1];\n    }\n\n    add = (fn: Fn) => {\n      const { fns, last } = this;\n      if (last && fn.domain !== last.d) {\n        throw new Error(\n          `Cannot add ${fn} to composite, because its domain is not ${last.d}`,\n        );\n      }\n      fns.push(fn);\n      return this;\n    };\n\n    build = () => {\n      return new CompositeFn(this.fns);\n    };\n  };\n}\n","import { Fn } from './fn';\nimport assert from 'assert';\nimport { Vector } from '../data';\n\nexport default class Interval implements Fn {\n  readonly domain: number;\n\n  constructor(readonly d: number, readonly a: number[], readonly b: number[]) {\n    assert.equal(a.length, d);\n    assert.equal(b.length, d);\n    this.domain = d;\n  }\n\n  static nPerLevel = (d: number, n: number) => {\n    return Math.round(Math.pow(n, 1 / d));\n  };\n\n  static n = (d: number, n: number) => Interval.nPerLevel(d, n) ** d;\n\n  /**\n   * @param x A vector of length this.domain contained in the interval [0, 1].\n   * @returns A mapping of the vector into this interval.\n   */\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, b, d } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    for (let i = 0; i < d; i++) {\n      y[i] = a[i] + x[i] * (b[i] - a[i]);\n    }\n    return y;\n  };\n\n  sample = function* (n: number, offset: number, limit: number) {\n    const { d, fn } = this;\n    n = Interval.nPerLevel(d, n);\n    const points: number[][] = [[]];\n    let i = 0;\n\n    while (points.length && i < limit) {\n      const p = points.pop()!;\n      if (p.length < d) {\n        points.push(...successors(p));\n      } else if (i++ >= offset) {\n        yield fn(p);\n      }\n    }\n\n    function* successors(p: number[]): Generator<number[]> {\n      for (let i = 0; i < n; i++) {\n        yield [...p, i / n];\n      }\n    }\n  };\n}\n","import Interval from \"./interval\";\nimport { Fn } from \"./fn\";\nimport { Vector } from \"../data\";\n\nexport default class Cube implements Fn {\n  private readonly interval: Interval;\n\n  constructor(readonly d: number, readonly l: number) {\n    this.interval = new Interval(\n      d,\n      new Array(d).fill(-l / 2),\n      new Array(d).fill(l / 2)\n    );\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y?: Vector) => this.interval.fn(x, y);\n\n  sample = (n: number, offset: number, limit: number) =>\n    this.interval.sample(n, offset, limit);\n}\n","import { Fn, cos, sin } from './fn';\nimport Cube from './cube';\nimport { Vector } from '../data';\nimport assert from 'assert';\n\nexport default class Rotator implements Fn {\n  readonly r0: number;\n  readonly r1: number;\n\n  constructor(\n    readonly d: number,\n    readonly theta: number,\n    readonly d0: number,\n    readonly d1: number,\n    readonly f0: (theta: number) => number = cos,\n    readonly f1: (theta: number) => number = sin,\n  ) {\n    this.r0 = f0(theta);\n    this.r1 = f1(theta);\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  sample = function* (n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const p of cube.sample(n, offset, limit)) {\n      yield this.fn(p);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, d0, d1, r0, r1 } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    y.set(x);\n\n    const a = x[d0], b = x[d1];\n    y[d0] = a * r0 - b * r1;\n    y[d1] = a * r1 + b * r0;\n    return y;\n  };\n}\n","import Rotator from './rotator';\nimport Cube from './cube';\nimport { Fn, components, CompositeFn } from './fn';\nimport { TypedArray } from 'three';\nimport { Vector } from '../data';\nimport assert from 'assert';\n\nexport default class Sphere implements Fn {\n  private readonly root: Float32Array;\n\n  constructor(readonly d: number, r: number) {\n    this.root = new Float32Array(d);\n    this.root[0] = r;\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function* (n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, root } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    const r = new CompositeFn(components(d - 1).map((i) => new Rotator(d, phi[i], 0, i + 1)));\n    r.fn(root, y);\n    return y;\n  };\n}\n","import { Fn, exp, components } from './fn';\nimport Cube from './cube';\nimport Sphere from './sphere';\nimport assert from 'assert';\nimport { Vector } from '../data';\n\nexport default class Spiral implements Fn {\n  private readonly sphere: Sphere;\n\n  constructor(readonly d: number, readonly a: number[], readonly k: number[]) {\n    this.sphere = new Sphere(d, 1);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function* (n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 4 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, k, domain, d } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    this.sphere.fn(phi, y);\n    let x = 0;\n    for (let i = 0; i < domain; i++) {\n      x += k[i] * phi[i];\n    };\n    const r = exp(x);\n    for (let i = 0; i < d; i++) {\n      y[i] = y[i] * a[i] * r;\n    }\n    return y;\n  };\n}\n","import Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from './fn';\nimport Rotator from './rotator';\nimport assert from 'assert';\nimport { Vector } from '../data';\n\nexport default class Torus implements Fn {\n  private readonly cross: Sphere;\n\n  constructor(readonly d: number, readonly r: number, readonly t: number) {\n    assert(d > 2, `torus is only defined for d > 2; got ${d}`);\n    this.cross = new Sphere(d - 1, t);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function* (n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (theta: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { cross, d, r } = this;\n    assert.equal(theta.length, d - 1, `torus expects an input of ${d - 1}; got ${theta.length}`);\n    const rotator = new Rotator(d, theta[d - 2], 0, d - 1);\n\n    cross.fn(theta.subarray(0, d - 2), y.subarray(0, d - 1));\n    y[0] += r;\n    rotator.fn(y, y);\n\n    return y;\n  };\n}\n","import Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from './fn';\nimport { Vector } from '../data';\nimport assert from 'assert';\n\n// This shape does not implement a torus. It used to,\n// but then I changed the way Rotator works, which\n// changed the way that the points of the sphere are\n// distributed, making the translation step behave incorrectly\n// Still makes a cool shape though, so keeping it\nexport default class FuckedUpTorus implements Fn {\n    private readonly sphere: Sphere;\n    private readonly circle: Sphere;\n\n    constructor(readonly d: number, readonly r: number, readonly t: number) {\n        this.sphere = new Sphere(d, t);\n        this.circle = new Sphere(2, r);\n    }\n\n    get domain() {\n        return this.d - 1;\n    }\n\n    sample = function* (n: number, offset: number, limit: number) {\n        const cube = new Cube(this.domain, 2 * Math.PI);\n        for (const phi of cube.sample(n, offset, limit)) {\n            yield this.fn(phi);\n        }\n    };\n\n    fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n        const { domain, d, sphere, circle } = this;\n        assert.equal(phi.length, domain);\n        assert.equal(y.length, d);\n        sphere.fn(phi, y);\n        const q = circle.fn(phi.subarray(d - 2));\n        y[0] += q[0];\n        y[d - 1] += q[1];\n        return y;\n    };\n}\n","import { Fn } from './fn';\nimport Cube from './cube';\nimport { Vector } from '../data';\nimport assert from 'assert';\n\nexport default class Stereo implements Fn {\n  private readonly fromTemp: Vector;\n  private readonly toTemp: Vector;\n\n  constructor(private readonly from: number, private readonly to: number) {\n    this.fromTemp = new Float32Array(Math.max(from, to));\n    this.toTemp = new Float32Array(Math.max(from, to));\n  }\n\n  get domain() {\n    return this.from;\n  }\n\n  get d() {\n    return this.to;\n  }\n\n  sample = function* (n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.to)) => {\n    let { from, to, fromTemp, toTemp } = this;\n    assert.equal(x.length, from);\n    assert.equal(y.length, to);\n\n    if (from === to) {\n      y.set(x);\n      return y;\n    }\n\n    fromTemp.set(x);\n\n    while (from < to) {\n      Stereo.up(\n        fromTemp.subarray(0, from),\n        toTemp.subarray(0, ++from)\n      );\n      fromTemp.set(toTemp);\n    }\n\n    while (from > to) {\n      Stereo.down(\n        fromTemp.subarray(0, from),\n        toTemp.subarray(0, --from)\n      );\n      fromTemp.set(toTemp);\n    }\n\n    y.set(toTemp.subarray(0, to));\n    return y;\n  };\n\n  static up = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length + 1);\n    const n2 = norm2(x);\n    const divisor = n2 + 1;\n    temp[0] = (n2 - 1) / divisor;\n    for (let i = 1; i <= x.length; i++) {\n      temp[i] = (2 * x[i - 1]) / divisor;\n    }\n  };\n\n  static down = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length - 1);\n    for (let i = 0; i < temp.length; i++) {\n      temp[i] = x[i + 1] / (1 - x[0]);\n    }\n  };\n}\n\nconst norm2 = (x: Vector) => {\n  let result = 0;\n  for (let i = 0; i < x.length; i++) {\n    result += x[i] * x[i];\n  }\n  return result;\n};\n","import { Fn } from \"./fn\";\nimport Cube from \"./cube\";\nimport { Vector } from \"../data\";\nimport assert from 'assert';\n\nexport class Identity implements Fn {\n    readonly domain: number;\n\n    constructor(readonly d: number) {\n        this.domain = d;\n    }\n\n    fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n        const { d } = this;\n        assert.equal(x.length, d);\n        assert.equal(y.length, d);\n        y.set(x);\n        return y;\n    };\n\n    sample = function* (n: number, offset: number, limit: number) {\n        throw new Error('identity function does not support sampling');\n    };\n}\n","import { Scope, UnaryOperator, Link } from './types';\nimport { Value, PipeNode, StepNode, ArithNode, Operand, NumberNode, IdNode, FnNode } from \"./ast\";\nimport assert from 'assert';\nimport { pp } from '../pp';\nimport { Fn, CompositeFn } from '../fn/fn';\nimport Cube from '../fn/cube';\nimport Spiral from '../fn/spiral';\nimport Torus from '../fn/torus';\nimport FuckedUpTorus from '../fn/fucked_up_torus';\nimport Sphere from '../fn/sphere';\nimport Stereo from '../fn/stereo';\nimport Rotator from '../fn/rotator';\nimport Interval from '../fn/interval';\nimport { Identity } from '../fn/identity';\n\nexport type Resolution = {\n    n: number;\n    staticFn: CompositeFn;\n    dynamicFn: CompositeFn;\n};\n\nexport class Resolver {\n    constructor(private readonly scope: Scope) { }\n\n    resolve = (node: PipeNode | Operand, extraScope: object = {}) => {\n        switch (node.kind) {\n            case 'pipe': return this.resolvePipe(node);\n            case 'number': return node.value;\n            case 'fn': return this.resolveFn(node, extraScope);\n            case 'id': return this.resolveIdToNumber(node.id, extraScope);\n            case 'arith': return this.resolveArith(node, extraScope);\n        }\n    };\n\n    resolvePipe = (pipe: PipeNode): Resolution => {\n        const chain = pipe.chain;\n        const links: Link[] = [];\n        const fun = chain.shift();\n        const d = (fun.args.shift() as NumberNode).value;\n        const link = this.resolveFirstStep(d, fun);\n        const n = Interval.n(link.fn.domain, pipe.n);\n\n        links.push(link);\n\n        for (let i = 0; i < chain.length; i++) {\n            const fun = chain[i];\n            const link = this.resolveStep(links[i].fn, fun);\n            links.push(link);\n        }\n\n        const [staticFn, dynamicFn] = this.buildComposites(links);\n        return { n, staticFn, dynamicFn };\n    };\n\n    private buildComposites = (links: Link[]) => {\n        let builder = new CompositeFn.Builder();\n        while (links.length && !links[0].isDynamic) {\n            builder.add(links.shift().fn);\n        }\n\n        const init = builder.build();\n        builder = new CompositeFn.Builder().add(new Identity(init.d));\n\n        while (links.length) {\n            builder.add(links.shift().fn);\n        }\n\n        const iter = builder.build();\n        return [init, iter];\n    };\n\n    private resolveFirstStep = (d: number, { type, args }: StepNode) => {\n        const fn = funs[type](d, ...args.map(a => this.resolveOperand(a)));\n        const isDynamic = args.some(isNodeDynamic);\n\n        return { fn, isDynamic };\n    };\n\n    private resolveStep = (prev: Fn, { type, args }: StepNode): Link => {\n        const d = ranges[type](prev.d);\n        const fn = funs[type](d, ...args.map(a => this.resolveOperand(a)));\n        const isDynamic = args.some(isNodeDynamic);\n\n        return { fn, isDynamic };\n    };\n\n    private resolveOperand = (arg: Operand, extraScope: object = {}): Value => {\n        switch (arg.kind) {\n            case 'number': return arg.value;\n            case 'fn': return this.resolveFn(arg, extraScope);\n            case 'id': return this.resolveId(arg.id, extraScope);\n            case 'arith': return this.resolveArith(arg, extraScope);\n        }\n    };\n\n    private resolveFn = ({ name, args }: FnNode, extraScope: object): number => {\n        const fn = Math[name];\n        assert(typeof fn === 'function', `Expected ${name} to be a Math function in ${pp({ name, args })}`);\n        return fn(...args.map(a => this.resolveOperand(a, extraScope)));\n    };\n\n    private resolveId = (id: string, extraScope: object): Value => {\n        if (id in Math && typeof Math[id] === 'function') {\n            return Math[id];\n        } else {\n            return this.resolveIdToNumber(id, extraScope);\n        }\n    };\n\n    private resolveIdToNumber = (id: string, extraScope: object): number => {\n        const idu = id.toUpperCase();\n        if (id in extraScope) {\n            return extraScope[id];\n        } else if (id in this.scope) {\n            return this.scope[id];\n        } else if (idu in Math && typeof Math[idu] === 'number') {\n            return Math[idu];\n        } else {\n            assert.fail(`unable to resolve id ${id}`);\n        }\n    };\n\n    private resolveArith = ({ op, operands }: ArithNode, extraScope: object) => {\n        const [a, b] = operands.map(a => this.resolveOperand(a, extraScope));\n        if (typeof a === 'number' && typeof b === 'number') {\n            return ops[op](a, b);\n        }\n        assert.fail(`One or more arithmetic operands evaluate to a non-number in ${pp({ op, operands })}`);\n\n    };\n}\n\nconst isNodeDynamic = (node: Operand): boolean => {\n    switch (node.kind) {\n        case 'fn': return node.args.some(isNodeDynamic);\n        case 'id': return ['t', 'power', 'chroma'].includes(node.id);\n        case 'arith': return node.operands.some(isNodeDynamic);\n        default: return false;\n    }\n};\n\nconst ops: {\n    [op: string]: (a: number, b: number) => number;\n} = {\n    '+': (a, b) => a + b,\n    '-': (a, b) => a - b,\n    '*': (a, b) => a * b,\n    '/': (a, b) => a / b,\n    '**': (a, b) => a ** b,\n    '^': (a, b) => a ** b,\n};\n\nconst rotate = (\n    d: number,\n    theta: number,\n    d0: number,\n    d1: number,\n    f0: UnaryOperator = Math.cos,\n    f1: UnaryOperator = Math.sin,\n) => {\n    return new Rotator(d, theta, d0, d1, f0, f1);\n};\n\nconst funs: {\n    [op: string]: (d: number, ...rest) => Fn;\n} = {\n    cube: (d, l) => new Cube(d, l),\n    sphere: (d, r: number) => new Sphere(d, r),\n    spiral: (d, a: number, k: number) =>\n        new Spiral(d, new Array(d).fill(a), new Array(d - 1).fill(k)),\n    torus: (d, r: number, t: number) => new Torus(d, r, t),\n    fucked_up_torus: (d, r: number, t: number) =>\n        new FuckedUpTorus(d, r, t),\n    rotate,\n    r: rotate,\n    stereo: (d, to) => new Stereo(d, to),\n};\n\ntype Funs = typeof funs;\n\ntype Ranges = {\n    [P in keyof Funs]: (domain: number) => number;\n};\n\nconst ranges: Ranges = {\n    cube: (domain) => domain,\n    sphere: (domain) => domain + 1,\n    spiral: (domain) => domain + 1,\n    torus: (domain) => domain + 1,\n    fucked_up_torus: (domain) => domain + 1,\n    rotate: (domain) => domain,\n    r: (domain) => domain,\n    stereo: (domain) => domain,\n};\n","module.exports = __webpack_public_path__ + \"0.1f2107f74c298d2a33b0.worker.js\"","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { pipe: peg$parsepipe, arith: peg$parsearith },\n      peg$startRuleFunction  = peg$parsepipe,\n\n      peg$c0 = function(n, chain) {\n        return {kind: 'pipe', n: parseInt(n), chain};\n      },\n      peg$c1 = function(head, tail) { return [head, ...tail]; },\n      peg$c2 = function(f) { return [f]; },\n      peg$c3 = function(type, args) {\n          return {kind: 'step', type: type.toLowerCase(), args};\n        },\n      peg$c4 = function(arg) { return [arg]; },\n      peg$c5 = function(s, op, a) {\n           return {kind: 'arith', op, operands: [s, a]};\n        },\n      peg$c6 = function(value) { return {kind: 'number', value}; },\n      peg$c7 = function(name, args) {\n          return {kind: 'fn', name: name.toLowerCase(), args};\n        },\n      peg$c8 = function(id) { return {kind: 'id', id: id.toLowerCase()}; },\n      peg$c9 = function(a) { return a; },\n      peg$c10 = function(f) { return parseFloat(f); },\n      peg$c11 = function(i) { return parseInt(i); },\n      peg$c12 = /^[a-zA-Z]/,\n      peg$c13 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c14 = /^[a-zA-Z0-9]/,\n      peg$c15 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c16 = function(id) { return id; },\n      peg$c17 = /^[+\\-]/,\n      peg$c18 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c19 = /^[0-9]/,\n      peg$c20 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c21 = /^[eE]/,\n      peg$c22 = peg$classExpectation([\"e\", \"E\"], false, false),\n      peg$c23 = \".\",\n      peg$c24 = peg$literalExpectation(\".\", false),\n      peg$c25 = \"+\",\n      peg$c26 = peg$literalExpectation(\"+\", false),\n      peg$c27 = \"-\",\n      peg$c28 = peg$literalExpectation(\"-\", false),\n      peg$c29 = \"*\",\n      peg$c30 = peg$literalExpectation(\"*\", false),\n      peg$c31 = \"/\",\n      peg$c32 = peg$literalExpectation(\"/\", false),\n      peg$c33 = \"**\",\n      peg$c34 = peg$literalExpectation(\"**\", false),\n      peg$c35 = \"^\",\n      peg$c36 = peg$literalExpectation(\"^\", false),\n      peg$c37 = function(op) { return op; },\n      peg$c38 = \"(\",\n      peg$c39 = peg$literalExpectation(\"(\", false),\n      peg$c40 = \")\",\n      peg$c41 = peg$literalExpectation(\")\", false),\n      peg$c42 = \",\",\n      peg$c43 = peg$literalExpectation(\",\", false),\n      peg$c44 = \"->\",\n      peg$c45 = peg$literalExpectation(\"->\", false),\n      peg$c46 = \"=>\",\n      peg$c47 = peg$literalExpectation(\"=>\", false),\n      peg$c48 = /^[ \\t\\n\\r]/,\n      peg$c49 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsepipe() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseuint();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepipe_sep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsechain();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c0(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsechain() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestep();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepipe_sep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsechain();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestep();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parselparen();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsestep_args();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parserparen();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c3(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep_args() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsearith();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsestep_args();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsearith();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsearith() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsescalar();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsearith_op();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsearith();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c5(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsescalar();\n    }\n\n    return s0;\n  }\n\n  function peg$parsescalar() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c6(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parselparen();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefn_args();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parserparen();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c7(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseidentifier();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c8(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parselparen();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsearith();\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parserparen();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c9(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefn_args() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsearith();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefn_args();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsearith();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefloat();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c10(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseint();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c11(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        if (peg$c14.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          if (peg$c14.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c16(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c17.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      if (peg$c19.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsemantissa();\n        if (s4 !== peg$FAILED) {\n          if (peg$c21.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c22); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseint();\n            if (s6 !== peg$FAILED) {\n              s2 = [s2, s3, s4, s5, s6];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseint();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemantissa();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c17.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseuint();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseuint() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c19.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c19.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemantissa() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c23;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseuint();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsearith_op() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s3 = peg$c25;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s3 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c29;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c31;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c32); }\n            }\n            if (s3 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c33) {\n                s3 = peg$c33;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s3 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 94) {\n                  s3 = peg$c35;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c37(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselparen() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c38;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserparen() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 41) {\n        s2 = peg$c40;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c42;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepipe_sep() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c44) {\n        s3 = peg$c44;\n        peg$currPos += 2;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c46) {\n            s3 = peg$c46;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c48.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c48.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c48.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c48.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c49); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import { parse } from './grammar.pegjs';\nimport { PipeNode, ArithNode } from \"./ast\";\nimport { pp } from '../pp';\nimport { getLogger } from 'loglevel';\n\nconst logger = getLogger('Parser');\nlogger.setDefaultLevel('info');\n\ntype Options = {\n    startRule: 'arith';\n};\n\nconst loggingParse: typeof parse = <T>(expr: string, options?: Options): T => {\n    try {\n        const node = parse(expr, options);\n        logger.debug(`parsed ${expr} into node ${pp(node)}`);\n        return node;\n    } catch (err) {\n        logger.error(`error parsing ${expr} at ${pp(err.location)}: ${err.message}`);\n        throw err;\n    }\n};\n\nexport class Parser {\n    static parsePipe = (pipe: string): PipeNode => loggingParse(pipe);\n\n    static parseArith = (expr: string): ArithNode => loggingParse(expr, { startRule: 'arith' });\n}\n","import { NormalizedParams } from './types';\nimport { Parser } from './parser';\nimport { PipeNode, ArithNode, Operand, StepNode, FnNode, IdNode } from './ast';\n\nexport class Compiler {\n    private readonly simplifier: Simplifier;\n\n    constructor(params: NormalizedParams) {\n        this.simplifier = new Simplifier({\n            theta: Parser.parseArith(params.theta),\n        });\n    }\n\n    compilePipe = (expr: string): PipeNode => {\n        const ast = Parser.parsePipe(expr);\n        return this.simplifier.simplify(ast);\n    };\n\n    compileArith = (expr: string): ArithNode => {\n        const ast = Parser.parseArith(expr);\n        return this.simplifier.simplifyArithNode(ast);\n    };\n}\n\ntype Substitutions = {\n    [id: string]: Operand;\n};\n\nexport class Simplifier {\n    constructor(private readonly substitutions: Substitutions) { }\n\n    simplify = (pipe: PipeNode): PipeNode => {\n        const n = pipe.n;\n        const chain = pipe.chain;\n\n        return {\n            kind: pipe.kind,\n            n,\n            chain: chain.map(this.simplifyStepNode),\n        };\n    };\n\n    simplifyArithNode = ({ kind, op, operands }: ArithNode): ArithNode => {\n        const [a, b] = operands.map(this.simplifyOperand);\n        return { kind, op, operands: [a, b] };\n    };\n\n    private simplifyStepNode = ({ kind, type: fn, args }: StepNode): StepNode => {\n        return {\n            kind,\n            type: fn,\n            args: args.map(this.simplifyOperand),\n        };\n    };\n\n    private simplifyOperand = (node: Operand): Operand => {\n        switch (node.kind) {\n            case 'number': return node;\n            case 'fn': return this.simplifyFnNode(node);\n            case 'id': return this.simplifyIdNode(node);\n            case 'arith': return this.simplifyArithNode(node);\n        }\n    };\n\n    private simplifyFnNode = ({ kind, name, args }: FnNode): FnNode => {\n        return {\n            kind,\n            name,\n            args: args.map(this.simplifyOperand),\n        };\n    };\n\n    private simplifyIdNode = (node: IdNode): Operand => {\n        const { id } = node;\n        if (id in this.substitutions) {\n            return this.simplifyOperand(this.substitutions[id]);\n        } else {\n            return node;\n        }\n    };\n}\n","import { CompositeFn } from \"../fn/fn\";\nimport { Scope, HV, Chunk } from \"./types\";\nimport { Data, Vector } from \"../data\";\nimport { pp } from \"../pp\";\nimport { getLogger } from \"loglevel\";\nimport assert from 'assert';\nimport { Color } from \"three\";\nimport { hsv } from 'color-convert';\nimport { Resolver, Resolution } from \"./resolver\";\nimport { PipeNode } from \"./ast\";\n\nconst logger = getLogger('Evaluator');\n\nexport class Evaluator {\n    private readonly n: number;\n    private readonly staticFn: CompositeFn;\n    private readonly dynaicFn: CompositeFn;\n    private readonly offset: number;\n    private readonly limit: number;\n    private readonly resolver: Resolver;\n\n    constructor(\n        private readonly scope: Scope,\n        ast: PipeNode,\n        private readonly hv: HV,\n        chunk: Chunk,\n    ) {\n        const resolver = new Resolver(scope);\n        const { n, staticFn, dynamicFn } = resolver.resolve(ast) as Resolution;\n        const offset = chunk.offset;\n        const size = chunk.size;\n        const limit = offset + size;\n        assert(offset >= 0, `offset must be non-negative; got ${offset}`);\n        assert(limit <= n, `offset + size must be <= n; got ${offset} + ${size} = ${limit} > ${n}`);\n\n        this.n = n;\n        this.staticFn = staticFn;\n        this.dynaicFn = dynamicFn;\n        this.offset = offset;\n        this.limit = limit;\n        this.resolver = resolver;\n    }\n\n\n    private get d() {\n        return this.dynaicFn.d;\n    }\n\n    initialize = (buffer: SharedArrayBuffer): void => {\n        const data = new Float32Array(buffer);\n        const { n, staticFn: init, offset, limit } = this;\n        const input = Data.input(data);\n        let i = offset;\n        for (const y of init.sample(n, offset, limit)) {\n            Data.set(input, y, i++, init.d);\n        }\n    };\n\n    iterate = (buffer: SharedArrayBuffer): void => {\n        const data = new Float32Array(buffer);\n        const { staticFn: init, dynaicFn: iter, scope, n, offset, limit } = this;\n        const input = Data.input(data);\n        const position = Data.position(data);\n        const start = Date.now();\n\n        assert.equal(data[Data.nOffset], n, `n(data) != n(evaluator)`);\n        assert.equal(data[Data.inputOffset], init.d, `d0(data) != d0(evaluator)`);\n        assert.equal(data[Data.positionOffset(data)], iter.d, 'd(data) != d(evaluator)');\n\n        logger.debug(`iterating using ${pp(scope)}, ${pp(iter)}`);\n        for (let i = offset; i < limit; i++) {\n            iter.fn(Data.get(input, i, init.d), Data.get(position, i, iter.d));\n        }\n\n        this.computeColors(data);\n\n        logger.debug(`iteration complete in ${Date.now() - start}ms`);\n    };\n\n    private computeColors = (data: Vector) => {\n        logger.debug(`computing colors`);\n        const { d, scope, hv, offset, limit, resolver } = this;\n        const position = Data.position(data);\n        const color = Data.color(data);\n\n        for (let i = offset; i < limit; i++) {\n            const p = Data.get(position, i, d);\n            const [h, s, l] = hsv.hsl([\n                Math.round(resolver.resolve(hv.h, { p, i }) as number),\n                100,\n                Math.round(resolver.resolve(hv.v, { p, i }) as number),\n            ]);\n            const c = new Color(`hsl(${h}, ${s}%, ${l}%)`);\n\n            Data.set(color, [c.r, c.g, c.b], i, 3);\n        }\n\n    };\n}\n","import { getLogger } from 'loglevel';\nimport { Params, NormalizedParams, HV, Chunk } from './types';\nimport { Compiler } from './compiler';\nimport { Evaluator } from './evaluator';\nimport { PipeNode } from './ast';\n\nconst logger = getLogger('Pipe');\nlogger.setLevel('info');\n\nexport class Pipe {\n    static compile = (params: Params): PipeNode => {\n        return new Compiler(Pipe.normalized(params)).compilePipe(params.pipe);\n    };\n\n    static evaluatorFor = (params: Params, chunk?: Chunk) => {\n        return Pipe.evaluatorForNormal(Pipe.normalized(params), chunk);\n    };\n\n    static scopeFor = (params: Params, n: number) => {\n        return Pipe.scopeForNormal(Pipe.normalized(params), n);\n    };\n\n    private static evaluatorForNormal = (params: NormalizedParams, chunk?: Chunk) => {\n        const compiler = new Compiler(params);\n        const ast = compiler.compilePipe(params.pipe);\n        const hv = Pipe.compileHV(params, compiler);\n        return new Evaluator(Pipe.scopeForNormal(params, ast.n), ast, hv, chunk);\n    };\n\n    private static normalized = (params: Params): NormalizedParams => {\n        return {\n            pipe: params.pipe,\n            theta: params.theta || 't',\n            h: params.h || '1',\n            v: params.v || '0.5',\n            t: params.t || 0,\n            power: params.power || 0,\n            chroma: params.chroma || 0,\n        };\n    };\n\n    private static scopeForNormal = (params: NormalizedParams, n: number) => {\n        const { power, t, chroma } = params;\n        return { t, power, chroma, n };\n    };\n\n    private static compileHV = (params: NormalizedParams, compiler: Compiler): HV => {\n        return {\n            h: compiler.compileArith(`359 * (${params.h})`),\n            v: compiler.compileArith(`100 * (${params.v})`),\n        };\n    };\n}\n"],"sourceRoot":""}