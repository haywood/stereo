{"version":3,"file":"worker-cdde62a1.js","sources":["../src/fn/interval.ts","../node_modules/comlink/dist/esm/comlink.mjs","../src/fn/index.ts","../src/fn/cube.ts","../src/fn/sphere.ts","../src/fn/fucked_up_torus.ts","../src/fn/rotator.ts","../src/fn/spiral.ts","../src/fn/stereo.ts","../src/fn/torus.ts","../src/pp.ts","../src/pipe/resolver.ts","../src/pipe/evaluator.ts","../src/pipe/worker.ts"],"sourcesContent":["import assert from 'assert';\n\nimport { Vector } from '../data';\nimport { Fn } from '.';\n\nexport default class Interval implements Fn {\n  readonly domain: number;\n\n  constructor(readonly d: number, readonly a: number[], readonly b: number[]) {\n    assert.equal(a.length, d);\n    assert.equal(b.length, d);\n    this.domain = d;\n  }\n\n  static nPerLevel = (d: number, n: number) => {\n    return Math.round(Math.pow(n, 1 / d));\n  };\n\n  /**\n   * @param x A vector of length this.domain contained in the interval [0, 1].\n   * @returns A mapping of the vector into this interval.\n   */\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, b, d } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    for (let i = 0; i < d; i++) {\n      y[i] = a[i] + x[i] * (b[i] - a[i]);\n    }\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { d, fn } = this;\n    n = Interval.nPerLevel(d, n);\n    const points: number[][] = [[]];\n    let i = 0;\n\n    while (points.length && i < limit) {\n      const p = points.pop()!;\n      if (p.length < d) {\n        points.push(...successors(p));\n      } else if (i++ >= offset) {\n        yield fn(p);\n      }\n    }\n\n    function* successors(p: number[]): Generator<number[]> {\n      for (let i = 0; i < n; i++) {\n        yield [...p, i / n];\n      }\n    }\n  };\n}\n","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwSet = new WeakSet();\r\nconst transferHandlers = new Map([\r\n    [\r\n        \"proxy\",\r\n        {\r\n            canHandle: obj => obj && obj[proxyMarker],\r\n            serialize(obj) {\r\n                const { port1, port2 } = new MessageChannel();\r\n                expose(obj, port1);\r\n                return [port2, [port2]];\r\n            },\r\n            deserialize: (port) => {\r\n                port.start();\r\n                return wrap(port);\r\n            }\r\n        }\r\n    ],\r\n    [\r\n        \"throw\",\r\n        {\r\n            canHandle: obj => throwSet.has(obj),\r\n            serialize(obj) {\r\n                const isError = obj instanceof Error;\r\n                let serialized = obj;\r\n                if (isError) {\r\n                    serialized = {\r\n                        isError,\r\n                        message: obj.message,\r\n                        stack: obj.stack\r\n                    };\r\n                }\r\n                return [serialized, []];\r\n            },\r\n            deserialize(obj) {\r\n                if (obj.isError) {\r\n                    throw Object.assign(new Error(), obj);\r\n                }\r\n                throw obj;\r\n            }\r\n        }\r\n    ]\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            returnValue = e;\r\n            throwSet.add(e);\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch(e => {\r\n            throwSet.add(e);\r\n            return e;\r\n        })\r\n            .then(returnValue => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map(p => p.toString())\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map(p => p.toString())\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map(p => p.toString()),\r\n                value\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        }\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context)\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue\r\n                },\r\n                transferables\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value\r\n        },\r\n        transferCache.get(value) || []\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise(resolve => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import assert from 'assert';\nimport { inf } from '../constants';\nimport { Vector } from '../data';\n\nexport interface Fn {\n  readonly d: number;\n  readonly domain: number;\n  fn(x: Vector, y?: Vector): Vector;\n  sample(n: number, offset: number, limit: number): Generator<Vector>;\n}\n\nexport class CompositeFn implements Fn {\n  private readonly x: Vector;\n  private readonly y: Vector;\n  constructor(readonly fns: Fn[]) {\n    assert(fns.length, 'fns cannot be empty');\n\n    const length = Math.max(this.domainMax, this.dMax);\n    this.x = new Float32Array(length);\n    this.y = new Float32Array(length);\n  }\n\n  get first() {\n    return this.fns[0];\n  }\n\n  get last() {\n    return this.fns[this.fns.length - 1];\n  }\n\n  get domain() {\n    return this.first.domain;\n  }\n\n  get d() {\n    return this.last.d;\n  }\n\n  get domainMax() {\n    return this.fns.reduce((max, f) => Math.max(f.domain, max), 0);\n  }\n\n  get dMax() {\n    return this.fns.reduce((max, f) => Math.max(f.d, max), 0);\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { fns, d } = this;\n    const [first, ...rest] = fns;\n    if (fns.length == 0) return [];\n\n    for (const x of first.sample(n, offset, limit)) {\n      this.x.set(x);\n      if (rest.length) {\n        CompositeFn.apply(rest, this.x, this.y);\n      } else {\n        this.y.set(x);\n      }\n      yield this.y.subarray(0, d);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { fns, domain, d } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    this.x.set(x);\n    CompositeFn.apply(fns, this.x, this.y);\n    y.set(this.y.subarray(0, d));\n    return y;\n  };\n\n  private static apply = (fns: Fn[], x: Vector, y: Vector) => {\n    assert.equal(x.length, y.length);\n    for (const f of fns) {\n      f.fn(x.subarray(0, f.domain), y.subarray(0, f.d));\n      for (let i = 0; i < y.length; i++) {\n        if (!isFinite(y[i])) y[i] = Math.sign(y[i]) * inf;\n        if (isNaN(y[i])) y[i] = 0;\n      }\n      x.set(y);\n    }\n  };\n\n  static Builder = class {\n    private readonly fns: Fn[] = [];\n\n    get d() {\n      return this.last.d;\n    }\n\n    get last() {\n      return this.fns[this.fns.length - 1];\n    }\n\n    add = (fn: Fn) => {\n      const { fns, last } = this;\n      if (last && fn.domain !== last.d) {\n        throw new Error(\n          `Cannot add ${fn} to composite, because its domain is not ${last.d}`\n        );\n      }\n      fns.push(fn);\n      return this;\n    };\n\n    build = () => {\n      return new CompositeFn(this.fns);\n    };\n  };\n}\n","import { Vector } from '../data';\nimport Interval from './interval';\nimport { Fn } from '.';\n\nexport default class Cube implements Fn {\n  private readonly interval: Interval;\n\n  constructor(readonly d: number, readonly l: number) {\n    this.interval = new Interval(\n      d,\n      new Array(d).fill(-l / 2),\n      new Array(d).fill(l / 2)\n    );\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y?: Vector) => this.interval.fn(x, y);\n\n  sample = (n: number, offset: number, limit: number) =>\n    this.interval.sample(n, offset, limit);\n}\n","import assert from 'assert';\nimport { Fn } from '.';\nimport { Vector } from '../data';\nimport Cube from './cube';\n\nexport default class Sphere implements Fn {\n  private readonly root: Float32Array;\n\n  constructor(readonly d: number, private readonly r: number) {}\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, r } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    y[0] = r;\n    for (let i = 1; i < y.length; i++) {\n      const sin = Math.sin(phi[i - 1]);\n      const cos = Math.cos(phi[i - 1]);\n      y[i] = y[0] * sin;\n      y[0] *= cos;\n    }\n\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\n// This shape does not implement a torus. It used to,\n// but then I changed the way Rotator works, which\n// changed the way that the points of the sphere are\n// distributed, making the translation step behave incorrectly\n// Still makes a cool shape though, so keeping it\nexport default class FuckedUpTorus implements Fn {\n  private readonly sphere: Sphere;\n  private readonly circle: Sphere;\n\n  constructor(readonly d: number, readonly r: number, readonly t: number) {\n    this.sphere = new Sphere(d, t);\n    this.circle = new Sphere(2, r);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, sphere, circle } = this;\n    assert.equal(phi.length, domain);\n    assert.equal(y.length, d);\n    sphere.fn(phi, y);\n    const q = circle.fn(phi.subarray(d - 2));\n    y[0] += q[0];\n    y[d - 1] += q[1];\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport { Fn } from '.';\n\nexport default class Rotator implements Fn {\n  readonly r0: number;\n  readonly r1: number;\n\n  constructor(\n    readonly d: number,\n    readonly theta: number,\n    readonly d0: number,\n    readonly d1: number,\n    readonly f0: (theta: number) => number = Math.cos,\n    readonly f1: (theta: number) => number = Math.sin\n  ) {\n    this.r0 = f0(theta);\n    this.r1 = f1(theta);\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const p of cube.sample(n, offset, limit)) {\n      yield this.fn(p);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, d0, d1, r0, r1 } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    y.set(x);\n\n    const a = x[d0],\n      b = x[d1];\n    y[d0] = a * r0 - b * r1;\n    y[d1] = a * r1 + b * r0;\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\nexport default class Spiral implements Fn {\n  private readonly sphere: Sphere;\n\n  constructor(readonly d: number, readonly a: number[], readonly k: number[]) {\n    this.sphere = new Sphere(d, 1);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 4 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, k, domain, d } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    this.sphere.fn(phi, y);\n    let x = 0;\n    for (let i = 0; i < domain; i++) {\n      x += k[i] * phi[i];\n    }\n    const r = Math.exp(x);\n    for (let i = 0; i < d; i++) {\n      y[i] = y[i] * a[i] * r;\n    }\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport { Fn } from '.';\n\nexport default class Stereo implements Fn {\n  private readonly fromTemp: Vector;\n  private readonly toTemp: Vector;\n\n  constructor(private readonly from: number, private readonly to: number) {\n    this.fromTemp = new Float32Array(Math.max(from, to));\n    this.toTemp = new Float32Array(Math.max(from, to));\n  }\n\n  get domain() {\n    return this.from;\n  }\n\n  get d() {\n    return this.to;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.to)) => {\n    let { from, to, fromTemp, toTemp } = this;\n    assert.equal(x.length, from);\n    assert.equal(y.length, to);\n\n    if (from === to) {\n      y.set(x);\n      return y;\n    }\n\n    fromTemp.set(x);\n\n    while (from < to) {\n      Stereo.up(fromTemp.subarray(0, from), toTemp.subarray(0, ++from));\n      fromTemp.set(toTemp);\n    }\n\n    while (from > to) {\n      Stereo.down(fromTemp.subarray(0, from), toTemp.subarray(0, --from));\n      fromTemp.set(toTemp);\n    }\n\n    y.set(toTemp.subarray(0, to));\n    return y;\n  };\n\n  static up = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length + 1);\n    const n2 = norm2(x);\n    const divisor = n2 + 1;\n    temp[0] = (n2 - 1) / divisor;\n    for (let i = 1; i <= x.length; i++) {\n      temp[i] = (2 * x[i - 1]) / divisor;\n    }\n  };\n\n  static down = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length - 1);\n    for (let i = 0; i < temp.length; i++) {\n      temp[i] = x[i + 1] / (1 - x[0]);\n    }\n  };\n}\n\nconst norm2 = (x: Vector) => {\n  let result = 0;\n  for (let i = 0; i < x.length; i++) {\n    result += x[i] * x[i];\n  }\n  return result;\n};\n","import assert from 'assert';\nimport { Fn } from '.';\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Rotator from './rotator';\nimport Sphere from './sphere';\n\nexport default class Torus implements Fn {\n  constructor(readonly d: number, readonly r: Float32Array) {\n    assert(d > 2, `torus: expected d = ${d} > 2`);\n    assert(\n      r.length == this.domain,\n      `torus: expected r.length = ${r.length} == ${this.domain}`\n    );\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (theta: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, domain, r } = this;\n    const circle = new Sphere(2, r[0]);\n    circle.fn(theta.subarray(0, 1), y.subarray(0, 2));\n    for (let i = 1; i < domain; i++) {\n      y[0] += r[i];\n      const rotator = new Rotator(d, theta[i], i - 1, i + 1);\n      rotator.fn(y, y);\n    }\n    return y;\n  };\n}\n","export const pp = (a: any, p = 2) => JSON.stringify(a, null, p);\n","import { CompositeFn, Fn } from '../fn';\nimport Cube from '../fn/cube';\nimport FuckedUpTorus from '../fn/fucked_up_torus';\nimport Rotator from '../fn/rotator';\nimport Sphere from '../fn/sphere';\nimport Spiral from '../fn/spiral';\nimport Stereo from '../fn/stereo';\nimport Torus from '../fn/torus';\nimport { Scope } from '../params/scope';\nimport { pp } from '../pp';\nimport {\n  AccessNode,\n  ArithNode,\n  FnNode,\n  PipeNode,\n  Scalar,\n  StepNode,\n  Value\n} from './grammar.pegjs';\nimport { UnaryOperator } from './types';\n\ntype Resolution = {\n  n: number;\n  fn: CompositeFn;\n};\n\nfunction assert(cond: boolean, scope: Scope, msg: () => string) {\n  if (!cond) throw { message: msg(), scope };\n}\n\nexport class Resolver {\n  constructor(private readonly scope: Scope) {}\n\n  resolve(node: PipeNode): Resolution;\n  resolve(node: Scalar, hint: 'number'): number;\n  resolve(node: Scalar, hint: 'function'): Function;\n  resolve(node: Scalar): Value;\n  resolve(node: any, hint?: any): any {\n    let value;\n    switch (node.kind) {\n      case 'pipe':\n        value = this.resolvePipe(node);\n        break;\n      case 'arith':\n        value = this.resolveArith(node);\n        break;\n      case 'number':\n        value = node.value;\n        break;\n      case 'fn':\n        value = this.resolveFn(node);\n        break;\n      case 'access':\n        value = this.resolveAccess(node);\n        break;\n      case 'id':\n        value = this.resolveId(node.id);\n        break;\n      case 'paren':\n        value = this.resolve(node.scalar);\n        break;\n    }\n\n    if (hint) {\n      const actual = typeof value;\n      this.expect(actual === hint, node, `be a ${hint}`, `was ${actual}`);\n    }\n\n    if (hint === 'number') {\n      this.expect(!isNaN(value), node, 'be a number', 'was NaN');\n    }\n\n    return value;\n  }\n\n  private resolvePipe = (pipe: PipeNode): Resolution => {\n    const [head, ...tail] = pipe.steps;\n    const fn = new CompositeFn.Builder().add(this.resolveStep(pipe.d0, head));\n\n    for (let i = 0; i < tail.length; i++) {\n      fn.add(this.resolveStep(fn.d, tail[i]));\n    }\n\n    return { n: pipe.n, fn: fn.build() };\n  };\n\n  private resolveStep = (d0: number, { type, args }: StepNode): Fn => {\n    const d = ranges[type](d0);\n    return funs[type](d, ...args.map(a => this.resolve(a)));\n  };\n\n  private resolveFn = ({ name, args }: FnNode): number => {\n    const fn = Math[name];\n    const type = typeof fn;\n    this.expect(\n      type === 'function',\n      name,\n      `resolve to a function`,\n      `was ${type}`\n    );\n    return fn(...args.map(a => this.resolve(a)));\n  };\n\n  private resolveAccess = ({ id, index }: AccessNode): number => {\n    const scope = this.scope;\n    const target = scope[id];\n    this.assert(target, () => `failed to resolve access target ${id}`);\n    if (index.kind === 'id' && index.id in target) {\n      // TODO works in practice, but not sure if corret\n      return target[index.id];\n    } else {\n      return target[this.resolve(index)];\n    }\n  };\n\n  private resolveId = (id: string): Value => {\n    let value;\n    if (id in this.scope) {\n      value = this.scope[id];\n    } else if (id in Math) {\n      value = Math[id];\n    } else {\n      const idu = id.toUpperCase();\n      if (idu in Math) value = Math[idu];\n    }\n\n    this.assert(value, () => `failed to resolve id ${id}`);\n\n    return value;\n  };\n\n  private resolveArith = ({ op, operands }: ArithNode) => {\n    const [a, b] = operands.map(a => this.resolve(a, 'number'));\n    return ops[op](a, b);\n  };\n\n  private isNodeDynamic = (node: Scalar): boolean => {\n    switch (node.kind) {\n      case 'fn':\n        return node.args.some(this.isNodeDynamic);\n      case 'id':\n        return typeof this.resolve(node) === 'number';\n      case 'arith':\n        return node.operands.some(this.isNodeDynamic);\n      default:\n        return false;\n    }\n  };\n\n  private assert(cond: boolean, msg: () => string) {\n    assert(cond, this.scope, msg);\n  }\n\n  private expect(cond: boolean, node: any, expected: string, actual: string) {\n    this.assert(\n      cond,\n      () => `Expected ${pp(node, 0)} to ${expected}, but ${actual}`\n    );\n  }\n}\n\nconst ops: { [op: string]: (a: number, b: number) => number } = {\n  '+': (a, b) => a + b,\n  '-': (a, b) => (b == null ? -a : a - b),\n  '*': (a, b) => a * b,\n  '/': (a, b) => a / b,\n  '**': (a, b) => a ** b,\n  '^': (a, b) => a ** b\n};\n\nconst funs: { [op: string]: (d: number, ...rest: any) => Fn } = {\n  cube: (d, l) => new Cube(d, l),\n  sphere: (d, r: number) => new Sphere(d, r),\n  spiral: (d, a: number, k: number) =>\n    new Spiral(d, new Array(d).fill(a), new Array(d - 1).fill(k)),\n  torus: (d, ...r: number[]) => new Torus(d, new Float32Array(r)),\n  fucked_up_torus: (d, r: number, t: number) => new FuckedUpTorus(d, r, t),\n  rotate: (\n    d: number,\n    theta: number,\n    d0: number,\n    d1: number,\n    f0: UnaryOperator = Math.cos,\n    f1: UnaryOperator = Math.sin\n  ) => {\n    assert(\n      0 <= d0 && d0 < d,\n      null,\n      () => `rotate: Expected 0 <= d0 = ${d0} < d = ${d}`\n    );\n    assert(\n      0 <= d1 && d1 < d,\n      null,\n      () => `rotate: Expected 0 <= d1 = ${d1} < d = ${d}`\n    );\n    return new Rotator(d, theta, d0, d1, f0, f1);\n  },\n  stereo: (d, to) => new Stereo(d, to)\n};\n\ntype Funs = typeof funs;\n\ntype Ranges = {\n  [P in keyof Funs]: (domain: number) => number;\n};\n\nconst ranges: Ranges = {\n  cube: domain => domain,\n  sphere: domain => domain + 1,\n  spiral: domain => domain + 1,\n  torus: domain => domain + 1,\n  fucked_up_torus: domain => domain + 1,\n  rotate: domain => domain,\n  r: domain => domain,\n  stereo: domain => domain\n};\n","import assert from 'assert';\nimport { Vector } from '../data';\nimport { CompositeFn } from '../fn';\nimport { HSV } from '../params';\nimport { Scope } from '../params/scope';\nimport { PipeNode, Scalar } from './grammar.pegjs';\nimport { Resolver } from './resolver';\nimport { Chunk } from './types';\n\nconst { abs, min, sign } = Math;\n\nexport class EvaluationError extends Error {\n  constructor(readonly context: string, readonly cause: Error) {\n    super(cause?.message);\n  }\n\n  get name() {\n    return 'EvaluationError';\n  }\n}\n\nexport class Evaluator {\n  private readonly n: number;\n  private readonly fn: CompositeFn;\n  private readonly offset: number;\n  private readonly size: number;\n  private readonly resolver: Resolver;\n\n  constructor(\n    private readonly scope: Scope,\n    ast: PipeNode,\n    private readonly hsv: HSV,\n    chunk: Chunk\n  ) {\n    this.resolver = new Resolver(scope);\n    const { n, fn } = this.resolvePipe(ast);\n    const offset = chunk.offset;\n    const size = chunk.size;\n    const limit = offset + size;\n    assert(offset >= 0, `offset must be non-negative; got ${offset}`);\n    assert(\n      limit <= n,\n      `offset + size must be <= n; got ${offset} + ${size} = ${limit} > ${n}`\n    );\n\n    this.n = n;\n    this.fn = fn;\n    this.offset = offset;\n    this.size = limit - offset;\n  }\n\n  private get d() {\n    return this.fn.d;\n  }\n\n  private resolvePipe(node: PipeNode) {\n    try {\n      return this.resolver.resolve(node);\n    } catch ({ message, scope }) {\n      throw { context: 'pipe', message, scope };\n    }\n  }\n\n  private resolveNumber(context: string, node: Scalar) {\n    try {\n      return this.resolver.resolve(node, 'number');\n    } catch ({ message, scope }) {\n      throw { context, message, scope };\n    }\n  }\n\n  iterate = () => {\n    const position = this.computePosition();\n    const color = this.computeColor(position);\n\n    return {\n      d: this.d,\n      position,\n      color\n    };\n  };\n\n  private computePosition = () => {\n    const { fn, n, d, offset, size } = this;\n    const position = new Float32Array(d * size);\n\n    let i = 0;\n    for (const y of fn.sample(n, offset, offset + size)) {\n      position.set(y, d * i++);\n    }\n\n    return position;\n  };\n\n  private computeColor = (position: Vector) => {\n    const { d, hsv, size } = this;\n    const color = new Float32Array(3 * size);\n    const { extent } = this.scope;\n\n    for (let i = 0; i < size; i++) {\n      const p = position.subarray(i * d, (i + 1) * d);\n      this.scope.p = p.map((pk, k) => {\n        const m = extent[k];\n        return m ? sign(pk) * min(1, abs(pk) / m) : 0;\n      });\n      this.scope.i = i;\n      const h = 360 * this.resolveNumber('h', hsv.h);\n      const s = this.resolveNumber('s', hsv.s);\n      const v = this.resolveNumber('v', hsv.v);\n      const rgb = hsv2rgb(h, s, v);\n\n      color.set(rgb, i * 3);\n    }\n\n    return color;\n  };\n}\n\nfunction hsv2rgb(h: number, s: number, v: number): [number, number, number] {\n  // source: https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB\n  h = Math.max(0, Math.min(360, h));\n  s = Math.max(0, Math.min(1, s));\n  v = Math.max(0, Math.min(1, v));\n\n  const hprime = h / 60;\n  const c = v * s;\n  const x = c * (1 - abs((hprime % 2) - 1));\n  const m = v - c;\n  let rgb: [number, number, number];\n\n  if (hprime <= 1) {\n    rgb = [c, x, 0];\n  } else if (hprime <= 2) {\n    rgb = [x, c, 0];\n  } else if (hprime <= 3) {\n    rgb = [0, c, x];\n  } else if (hprime <= 4) {\n    rgb = [0, x, c];\n  } else if (hprime <= 5) {\n    rgb = [x, 0, c];\n  } else if (hprime <= 6) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  rgb.forEach((vi, i) => (rgb[i] = vi + m));\n\n  return rgb;\n}\n","import { expose } from 'comlink';\nimport { Params } from '../params';\nimport { Evaluator } from './evaluator';\nimport { Chunk } from './types';\n\nconst worker = {\n  iterate: (params: Params, chunk: Chunk) => {\n    const evaluator = new Evaluator(\n      params.scope,\n      params.pipe,\n      params.hsv,\n      chunk\n    );\n    return evaluator.iterate();\n  }\n};\n\nexport type Worker = typeof worker;\n\nexport const newWorker = () => new Worker('/stereo/pipe/worker.js');\n\nexpose(worker);\n"],"names":["assert"],"mappings":"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"}