{"version":3,"sources":["../../src/comlink.ts","fn/index.ts","fn/interval.ts","fn/lattice.ts","fn/cube.ts","fn/polar.ts","fn/sphere.ts","fn/fucked_up_torus.ts","fn/rotator.ts","fn/spiral.ts","fn/stereo.ts","fn/torus.ts","pp.ts","pipe/resolver.ts","pipe/evaluator.ts","pipe/worker.ts"],"names":[],"mappings":";;AeAA;;AAGA;;AAGA,MAAM,MAAM,GAAG;AXNf,AGAA,ANAA,ACAA,ACCA,AEDA,AGAA,AFAA,AGAA,ACAA,ACAA,AGAA,ADAA,AEOE,AHPK,EGOL,IHPW,EAAE,CGON,EAAE,AHPO,CGON,AHPO,CAAD,EAAS,CAAC,EGOjB,CHPoB,CGOH,AHPV,KGOP,AHP0B,IAAI,CGOG,AHPF,SAAL,CAAe,CAAf,EAAkB,IAAlB,EAAwB,CAAxB,CAA9B;AGQH,UAAM,SAAS,GAAG,IAAI,oBAAJ,CAChB,MAAM,CAAC,KADS,EAEhB,MAAM,CAAC,IAFS,EAGhB,MAAM,CAAC,GAHS,EAIhB,KAJgB,CAAlB;AXLJ,AGAA,ANDA,AOCA,AFAA,AGAA,ACAA,ACAA,AGGA,ADLA,AEaI,WAAO,SAAS,CAAC,OAAV,EAAP;AACD;ARXH,ALCc,ACDA,AEFR,ACEN,AGAA,AEAA,AEFA,AEIe,CAAf,KbDqB,ACDA,AEFR,KAAP,CAAY,CFEJ,CDCA,ACDc,CDCC;AFL7B,AEQE,ACIA,AETA,AUiBF,EbZE,ACIA,OETO,IHKP,ACIA,AETA,CHKqB,ACIA,AERnB,CHIF,ACIA,AETA,EHKyC,ACIA,AEPvC,CHGF,ACIA,EDJ+D,ACIb,AETlD,CHKA,AaYK,CVdH,CHEwE,AGFvE,GAAG,CUcR,GVdY,YAAJ,CAAiB,GAAG,CAAC,MAAJ,GAAa,CAA9B,CAHN,EAGsC;ADA1B,AHMR,ACJiB,ACIA,AEJnB,AGFU,AEAA,ACDd,AGIA,ADNA,MTGqB,AHMR,AONQ,AEAA,AIGf,GZDiB,ACIA,CCNT,AFES,ACIA,CCNE,CMAX,CRES,ACIA,AKNT,AEAa,CREJ,ACIA,AKNK,GPMtB,CAAkB,EIJb,KAAP,CAAa,CAAC,CAAC,MAAf,EAAuB,GAAG,CAAC,MAAJ,GAAa,CAApC;ADDF,AHQA,ACPyC,ACIA,AKFzC,AEAA,AIDM,EVFN,AHQA,AOLA,AEAA,AIDM,GAAF,IZDqC,ACIA,CDJA,ACIA,GCLzC,AHQA,ACPyC,ACIA,AKFzC,AEAA,CNHqB,AHQA,ACPoB,ACIA,AKD9B,AEDkB,CNH7B,AIGA,EJHyC,AHQzC,AOHW,CJLX,AMGA,CTK8B,CGRoB,AMGU,EFA5D,AEAA,EFGW,AEH2D,EFAtE,EAIW,EAJX,EAKW,EAAA,GAAgC,IAAI,CAAC,GALhD,EAMW,EAAA,GAAgC,IAAI,CAAC,GANhD,EAMmD;AJT9B,AGAvB,ANQuB,ACP0C,AGE7D,AGCS,AFJC,AGAA,ACGiB,AIDlB,ADLb,ECKa,ETCT,CAAC,ASDC,CTCA,ACHe,AGAA,CJGhB,CAAD,CDHmB,AHQA,ACP0C,AMGpD,AEDkB,CNHR,AFC0C,AMGpD,CHDF,CJKY,AILnB,ACHU,AGAA,CLAS,AFC0C,AMGpD,AFJc,AGAA,ACGI,CNHR,AFC0C,AMGpD,CPIU,CSLQ,ETKR,ESLQ;ANHY,AGC3C,ALUE,ACQA,AKdW,AFFX,AGFA,ACE4D,AID5C,ERChB,AGFA,AKCgB,OVFyB,ADmBzC,AKdW,AEFiD,CNHnB,CDmBzC,AOhB4D,ENHnB,AEGzC,AGFA,CLDyC,ADmBpC,AKdM,AFFU,AIAuC,CPgBtD,AGhBN,CHgBK,AOhBuD,CFEjD,AFFsC,CHgBhC,AGhBjB,CHgBK,CGhBqD,EEE/C,ELcqB,KAAK,QAAL,CAAc,EAAd,CAAiB,CAAjB,EAAoB,CAApB,CAAhC;AIjBF,ANsCE,AIpCE,AGES,AFHU,AGDnB,AEDU,AGCR,ADJN,ICI2B,EHDN,EGCrB,CbsCE,AIpCO,AGEI,AFHU,CAAA,CEGV,AGLC,CAAY,CNGb,ACDU,CDCT,AGED,AFHU,CLqCrB,COlCW,CHFI,CJoCN,AIpCP,EAAgB,CAAC,GAAG,CAAC,CAAC,GJoCL,CAAV,EAAqB,AIpC5B,EAA8B,CAAC,EAA/B,CJoCO,CIpC4B,CJoCS,KAArC,EAAkD;AGlC3D,AGHF,ANsCI,AEnCA,AEDE,AGEO,AFJsC,AIajD,ACdA,EAAA,OPIA,ADAO,AKCI,AFJsC,AIajD,CJbiD,CFGjD,AICW,CPkCH,AIpCE,CCFuC,AKDjD,CPIK,AICM,AFJsC,AKD5B,CPIf,ACDO,AKWb,ACdA,CPIK,AICM,CLDT,AQJuC,CPIxB,ACDD,AKWP,ACdT,CPIiB,CDAC,AQJsC,EPI3B,ACDT,CAAC,CFCC,ECAW,ACDjB,CAAS,EKWN,CLXS,AKWnB,CLXoB,CAAC,AKWA,GLXG,CAAL,CAAZ,CDCa,ACDzB,AKWK,CNVqC,CMUA,CPV5B,CACd,CADc,CCAiC,CAAtB,ADEzB,AOQK,CNVJ,CMUsD,EPRnD,ECFiD,GDErD,CAAU,CAAV,EAAa,IAAb,CAAkB,CAAC,CAAD,GAAK,CAAvB,CAFc,EAGd,IAAI,KAAJ,CAAU,CAAV,EAAa,IAAb,CAAkB,CAAC,GAAG,CAAtB,CAHc,CAAhB;ACCA,AGHJ,ANqCY,AE7BR,AENE,AGEO,AEST,ACfmB,AGEjB,ADLN,MCKa,EbqCD,CE7BH,AKJI,AGNU,CAAA,CVuCb,AOjCG,CJDH,ACDE,AKWF,CCfa,CHMV,AGNU,CRUnB,AENW,CGEF,ELIK,AENA,CKWD,EIbX,CTEgB,AKWF,CPLG,AENA,GAAL,AKWM,CLXG,GAAG,ASFO,CXQnB,AENa,CFMC,AENA,GAAG,ASF7B,CTEwB,ASFY,CTExB,CFMd,AENE,IKWc,CAAY,KAAK,MAAjB,EAAyB,CAAzB,CAAhB;ANVQ,AGFE,ANoCG,AE5Bd,AENG,AGEO,AFAX,AGJW,AEH8B,AGGzC,ELAW,AKAX,CLJA,GFImB,AFEf,CAAC,CDAK,AHkCK,AIlCT,CAAD,AGEM,AFAX,AKPyC,CNKrC,AMLqC,CHO9B,EHFA,AML8B,AGGzC,CVEQ,ACAI,AGED,AGP8B,AGGpB,CTER,ACEb,CDFY,AGED,CHFA,CCEF,CCJG,CAAoB,AFEd,CSFlB,ETEI,ASF2C,KAA/C,CRImB,CAAV,AQJkD,ERI7B,MAArB,EAAqC,KAArC,EAAkD;AFFzC,AGElB,ANgCQ,AC1BR,AGPI,ACEF,AGJA,ACYA,AGlBJ,ENSE,IFDI,CAAC,CDDa,ACCZ,CDDE,AFQR,AGPK,CJiCgB,AIjCjB,CHOJ,AQGO,CJRC,CCDR,CAAqB,ANgCnB,AC1BG,AGPO,CECZ,ALMM,CAAD,CKNoC,AFDrC,AKUS,CHTb,ALMuB,CAAA,AILR,CCD8C,AGS3D,CHTF,CLMmC,AILjB,CCDoD,CGSlD,ERHmB,AILjB,KIQK,CAAC,MRHO,AQGf,CRHgC,AQGjB,CAAf,EJRF,AIQoB,CJRR,CJK2B,CAAtB,CAA9B,EIL8B,AIQf,EAA0B,CRHiB,GIL7C,CIQE,CJRuB,AIQzC,EAAoD,EJRP,IAAI,CAAC,EAAlC,CAAhB;AFHmB,AGEA,ANiCnB,AC1BA,ACDF,AENG,AGUH,AEAI,ACLJ,MRCI,ECRiB,CGEA,ACUrB,AGLA,CJLqB,ENiCb,AC1BA,ACDR,CINqB,ANiCZ,CMjCY,AGUX,CPJA,AKIV,AGLA,GV4BQ,AOvBC,AGLA,CDKM,CTuBC,CSvBN,CAAQ,CTuBC,ESvBT,CAAN,CTuBI,EOvBW,AGLA,CHKV,AGLA,CV4BkB,COvBG,AGLA,EV4B5B,IOvBO,AGLA,EHKqC,AGLA,KHKrC,AGLA,EHKkD,AGLA;APPnD,AGEiC,ANkCvC,AC3BQ,ACAR,AKIA,AFTA,AISC,ACLD,AGTA,ADLJ,QXeY,CKP+B,CHFd,AGEc,ANkCnC,AarCC,CXUE,AGLF,AQLA,CNcC,AGLA,CJNiC,ANkChC,AarCF,CVCL,AGEuC,ANkC/B,AC3BF,ECAM,AWVN,CXUN,AGLW,EESE,AGLA,CV4BT,AKhCJ,CQLK,CNcW,AGLA,EV4BE,AKhCA,CLgClB,COvBoB,AGLA,CV4BC,AarCV,IRKc,AQLpB,CRKqB,ELgCE,CarCjB,CbqCU,CarCV,CRKO,CAAe,CAAf,EESF,AFToB,AKIpB,AGTL,CNciB,AGLA,IGTjB,CNcsB,AFTf,AKIe,AGT5B,ERKuC,CQLjC,GNcK,AGLA,CLJE,CESuB,AFTzC,AKIyC,AGT9B,CNcK,AMdX,CNcL,AFToD,EKIP,AGTlC,EAAA,CAAE,CHSoC,CAAC,EAAlC,CAAhB,EGTA;AdWJ,AOR+D,ALO3C,ACCjB,AEPC,ACEE,AGHO,ACYV,AIhBoB,ELIV,GCOX,CVCW,CShBX,CPekB,CKP2C,ALOrD,AYXa,CPIwC,CFCpD,CAAP,CED2D,CAAA,ADGnD,EQPW,CdYC,EMLP,AQPM,CdYI,CMLf,CAAQ,GAAR,CNKqB,AML3B,AQPiB,CdYW,eAAD,CAAjC;AIRI,AHoCA,AC7BmB,AGLpB,AGUC,AFRC,AGHD,AEMA,AGX6C,ADFjD,QXauB,CAAb,AYXuC,EbwCxC,AOxBA,AGLA,GGXwC,GbwClC,AOxBA,AGLA,AGXkC,CbwC7C,AOxBA,EGLA,EPPO,AHoCS,AOxBA,AMhB6B,EHW3B,GPPlB,AHoCqB,CGpCR,AHoCS,CGpCR,AIYS,CJZR,AIYS,CGLC,CAAC,EV6BV,CAAa,CGpC7B,AHoCgB,AOxBA,CAAe,CJZR,AHoCS,AOxBhB,AGLE,CAAe,CHKC,AGLhB,EAAkB,EPPpC,AHoCgB,EAAwB,AOxBxB,EAA0B,AGLxB,EAA0B,CV6B5B,CAAhB,COxBgB,CPwBgC,AOxBhD,CGLkB,CHKgC,AGLlD,EAAoD;AXExD,AOAE,AN4BI,AC9BoB,ACnBE,AKyBtB,AFRH,AISD,ACNI,AGVH,KRED,CNSW,EEFa,CKExB,AGKA,EAAA,ETuBS,CAAL,AOxBM,AECL,ACNK,CJCV,AN4BW,ASvBL,CAAD,EHLI,AN4BL,ASvBa,CTuBF,AOxBA,AECE,ACNF,CXCU,AC4BrB,COxBM,AGLA,CHKQ,AECW,ACNX,CXCU,AQIlB,CAAN,CGLM,CDMuB,ACN7B,GXC8B,AOAf,CPAgB,AOA1B,EAAqB,MAArB,AGKoB,CAAiB,CHLA,IGKK,CHL1C,CGKoB,CHL8B,AGKtD,CVL6B,CAApC,GUK4D;ANbxD,AGSA,ALHM,AGrBQ,AG4Bb,AECD,ACNC,UTF2B,AQQxB,EHLE,ELHN,KKGa,GHTN,AGSS,IAAI,CHTpB,CAAa,CAAC,CAAC,MAAf,EAAuB,CAAvB,GGSgB,CAAY,KAAK,MAAjB,EAAyB,IAAI,IAAI,CAAC,EAAlC,CAAhB;APAJ,AC4BM,AOvBH,AFRD,AGHW,ACWH,ACLP,AGVD,ELIW,CAZX,EDkBA,ACNsB,AECtB,CXKW,AcVP,EJeI,CJRR,CQPA,CROA,CL+BQ,ASvBF,CIfE,CROH,CAAC,CL+BM,CAAC,CD5BU,AMHlB,EAAc,CNGO,AMHP,EL+Bf,CK/B2B,CL+BV,ED5BW,CAAC,AMHE,YAAJ,CAAiB,KAAK,CAAtB,CAA1B,ENG2B,CAAlC,EMH6D;AFJzD,AGQA,AN4BI,AC9BJ,AIDA,AGZS,ACmBG,AIdZ,ADUJ,QHIgB,CDnBH,AIeJ,CZ4BD,AQ3CK,ACmBL,CNZC,AGQA,AOVE,CROD,CGZG,CAAA,CLOA,ASQb,CTRc,ASQE,CNAD,EHRE,CAAb,AGQA,AMAJ,CZ4BmB,CGpCC,AHoCA,AC9BT,AWEoB,CTRV,CGQC,EHRE,CAApB,AHoCI,AC9BJ,AWEJ,CZ4B0B,AC9BT,AYRb,CVEuB,AFMT,AWE2B,CTRjB,AFMT,CKEU,CHRzB,AGQ0B,AN4BtB,AY5BR,ETRgC,AHoCA,AY5B8B,EXF1D,EKEkB,ALFK,CKEU,AN4BA,CM5Bf,AN4Bd,EM5BgC,AN4BA,EC9BpC,GD8ByC,CM5BvB,AN4Bd,EM5BwC,KAA1B,CAAlB,EAAoD;APAxD,AIPM,AGQA,AN4BC,AOvBL,AFTU,AGRC,ACeO,ACHlB,AGVC,ADUD,MbDI,AaCA,CAAC,CTRD,AEIM,AIOQ,CNXb,AHkCD,AOrBJ,AFTQ,AGRG,AEYX,CPRM,CAAD,AIaL,AGLA,AEAA,CTRI,CSQO,CbDC,AOCF,ACKL,ACjBM,AEYN,CPRM,AHoCA,AOvBL,AGLA,CPRM,AIaP,AEFC,CVJS,ASXJ,CDiBM,CDLF,ACKE,AKLA,CTRD,AOQX,CXDc,AIPF,AGQP,CHRQ,AGQA,ACKW,ACjBlB,AEYU,CPRJ,AOQI,CPRL,CGQN,CAAN,ACK6B,AGLA,CPRV,CJOR,EAAjB,AIPc,AOQyB,CPRjC,OIayB,CAAiB,GGLb,CAAiB,CHKC,CAAtB,CAAxB,EGLkD,CAAtB,CAA5B,CHKoD,IGLI;AXuD/D,AI9DK,AGQA,AN4BG,AC/BJ,AMQA,AFVW,AGJF,ACWiB,ACF1B,AEDiB,IAAA,EbuDR,EM3DE,AIOe,CDXjB,CAAA,CIQe,CLMlB,AGLA,CFTG,AIQiB,CJRjB,CRqCA,CAAL,AY7ByB,CZ6BlB,CY7BI,EZ6BX,CAAW,CD0BU,AC1BrB,AC/BG,GFyDqB,EEzD5B,CAAa,CFyDmB,AEzDlB,CAAC,EFyDa,CAAiC,CAC/D,CACE,CE3DA,EAAuB,CAAvB,GF0DF,EAEE;AACE,AOzDH,AN4BI,AOxBK,AFVF,AIOF,ACFI,AGlB8B,ADiBL,Eb2D/B,Ea3D+B,CNHnC,GCSU,AGLA,CHKF,AGLA,CLLW,AIOoB,CVwD1B,EAAE,CM/Db,AIOA,EVwDgB,IAAI,GAAG,IAAI,GAAG,CAAC,WAAD,CAD9B;AI/DA,AFKA,AMMW,ACDb,AEJa,AEDI,GAAN,KLME,AGLA,CFIb,CDCQ,CNND,EELE,CAAP,AOMM,CTDG,AOKX,CPLY,EOKH,CPLM,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,AOKN,CPLO,AOKjB,EPLP,AOK4B,EPLA,IOKrB,EAAqC,KAArC,EAAkD;ATuDvD,AIhEH,AGQD,AN2BI,AC9BA,AMKa,AFTf,AGSA,ACFA,ACHmB,AEAtB,Eb2DK,GI3EJ,GFgBI,AMKa,AGLI,CJGrB,ALHK,CAAC,AMKE,CRsDK,AOxDb,ALHK,CF2DS,AE3DV,AOKI,EFFH,AN2BK,CD6BG,AOxDP,ALHK,CAAC,CF2DK,AE3DJ,CKGR,ALHO,CD8BG,AC9BJ,CKGQ,AN2BT,AQzBM,CFFG,AN2BF,CC9BC,AIJT,AIOA,CRHU,AOKA,CFFY,ALHX,CAAD,CAAD,CIJhB,AGSqB,ACFrB,CHAiC,ADPpB,AIOA,CT2BL,AS3BM,CT2BU,AC9BA,AQGT,CT2BP,AC9BiB,AIJT,CJIU,AIJT,CLkCU,AC9BF,CD8BjB,AC9BgB,CD8BtB,CS3BF,CRH+B,CAAC,AIJhC,AIOuB,CRHU,CKGJ,ALHG,AIJP,CCOqB,ALH9B,AIJU,CJIxB,AQGF,EJP6B,AGSZ,CHTjB,AGUE,CFHiD,CAAtB,CAA1B,EEGI,GFHkD,GEExC,EAEf,IAAI,KAAJ,CAAU,KAAK,MAAf,EAAuB,IAAvB,CAA4B,CAA5B,CAFe,EAGf,IAAI,KAAJ,CAAU,KAAK,MAAf,EAAuB,IAAvB,CAA4B,CAA5B,CAHe,CAAjB;ATuDI,AOxDJ,AN2BC,AC9BA,AMIkB,AGLb,QHKa,ERuDT,AQvDJ,AGLmB,EJInB,EIJN;AX4DY,AI/Dd,AGOU,AN4BT,AO3BwB,AFRvB,AGcA,ACPA,ACHA,AGTE,ADUA,KZgBJ,CD0Cc,AcpEH,ADUA,ENED,ACCe,CJRzB,EJ+DY,ASjDL,CEVC,EJGA,AMFJ,CTLJ,AULI,ADUe,CCVC,CLmBP,CLdJ,AKcP,AEVY,GAAG,CLJR,AGcS,ACPT,GCHY,ELJnB,AIOA,CJPa,AIOA,CNPI,AEAH,AIOA,CNPP,AEAQ,AGcS,ACPT,CDOU,CLdG,IEA5B,AIOA,CDOgB,CLdT,AEAgB,AGcS,ACPT,CJPvB,AGcgB,CLd4B,AMO5C,ACHe,CFUoB,AEVT,CAAX,EAAc,CPJtB,AOIuB,CAAC,CPJ0B,AKczC,AEVc,CAAf,CFU4B,AEV3C,KFUgB,CAAhB,EAAmD;ATiDhC,AI9DnB,AGMgB,ALDhB,AMEM,ACOJ,AEVF,AGHF,ADIA,ECJA,ADIA,IbyDqB,AW1DnB,EJEgB,CAAV,CCCwB,EGHxB,CTCC,ASDA,AGHT,ADIA,CXAE,AMEA,ACOQ,AKZS,ADGU,CFD3B,CAAU,GFUG,AKbf,ADIA,EJSU,AEVO,AGDf,ADEuC,CJSvB,AEVA,CFUR,CAAN,AKbJ,EAGmB,GAHnB,CHGY,CAAe,AGCzB,CHDU,EAAkB,CAAlB,CAAV,AGHF,EHGkC,AGCpB,CHDqB,CAAC,QAAF,CAAW,CAAX,EAAc,CAAd,CAAhC;AX0DU,AI7DV,AGKmB,AN8BrB,AC9BC,AILC,AGcC,ACPD,AINiB,ADGU,KXV7B,GFmE+B,AOxDV,CN8BrB,AalCmB,ADGU,CHGvB,CT4BN,CD0BmC,CM7D1B,CCKD,AN8BH,AS5BK,AINS,ADGU,CZ+BvB,CAAD,CalCc,ADGU,CZ+BZ,CAAA,AS5BF,EAAb,CT4B2B,AalCV,ADGU,CHGV,GVsDY,AC1BE,AKnClB,EN6DT,EM7DG,CAAW,CAAX,EAAc,GAAd,CLmCoB,CAAiB,AKnClB,CAAnB,CAAP,GLmCiD,CAAtB,CAAxB,KAAoD;AD2BnD,AI7DJ,AGI2B,AN+B3B,AO7BA,AFND,AGcA,ACPG,ACJF,AGDiB,Id2Db,CMnEN,AGUA,GFA6B,AGGzB,CAAC,AILc,Cd2DP,AUtDN,CVsDO,AW1DN,CPHC,AHmCA,AajCW,CJKf,CVsDQ,AUtDF,CAAN,ACJO,AGDQ,Cd2DD,AW1DN,EGDO,CHCJ,CAAb,CX0DU,CAAN,AQvDG,AGHS,CAAC,GAAG,CHGpB,CAAa,CAAC,CAAC,EGHf,EAA4B,CAAC,CHG7B,CGHA,CHGuB,CAAvB,AGHiC;AX2D7B,AI9DI,AGIF,AN+BE,AC7BV,AIzB8D,AI2B1D,ACJA,AE2CI,QT/CE,AHmCA,AU/BN,CTEJ,ASFK,AE2CG,CN3CgC,AIAlC,CX0DO,AC3BL,AU/BH,CX0DS,AW1DV,EJAF,CLEF,AQEW,CAAP,ACJQ,CX0DC,AW1DA,CTEJ,ASFK,CX0DO,AW1DR,CX0DS,AW1DlB,AE2CI,GAAe,EbeF,CAAR,CAAP,AafgB,EXzCH,CAAV,CWyC4C,CXzCvB,MAArB,EAAqC,KAArC,EAAkD;AFyDtD,AI/DG,AHmCO,AC5Bb,AMAA,ACSF,ACPG,ACJC,AGqCJ,ADME,GbSA,KCtBa,CQnBf,AK0BA,CV1CgB,CKgBhB,CPTQ,AWyCA,CAAC,CThDP,AHmCM,AQnBH,AEXK,CFWJ,CAAD,AK0BL,CDMQ,CJhCe,CAAA,AK0Bb,ADMK,EF3CE,CHER,ACS0B,AIgCjB,EF3CE,CGqCL,CL1BwB,AIgC/B,CLzCN,CAAa,AGFS,CHER,CAAC,AKyCS,IAAI,CAAC,CLzC7B,EAAuB,ACSU,CDTjC,ACSkD,CIgClD,IJhCuD,AEXrC,CFWe,AEXH,CFW3B,AEXe,EAAe,GFW4B,EEXvB,CAAC,CAAD,CAApB,EAAyB,CAAC,GAAG,CAA7B,EAAgC,CAAC,GAAG,CAApC,CAAhB;APJF,AGIA,AN8BqB,AC5Bb,AIxBV,AGkCE,AEXE,AGqCF,ADMA,MPlEE,ELoDmB,AC5Bb,ASDN,CTCI,GENA,AElBR,AGkCQ,AK0BA,ADMA,CAAC,EPlEC,AKuBC,CAAC,AE2CA,CThDC,COKT,CAAW,CPLC,AOKZ,AGqCY,CDMC,CN5CR,AICS,CAAd,AGqCe,CV1CC,CAAJ,EGId,CHJsB,AGIT,AOsCS,ADMZ,CThDV,ASgDuB,EN5CP,CAAC,CM4CU,CAAC,CAAlB,EAAqB,CN5C/B,EAAyB,GOsCR,EAAjB,ADMU,CN5CV,AM4CA;AbeE,AI9DF,AHiCM,AC5BK,AMCX,AFxBA,AGiCQ,ACNR,ACJC,AGqCD,ADMA,EbcE,IQxDF,AEGA,CFHC,CNDU,AMCT,ACSM,ERkBmB,CO3B3B,AFxBO,AOkEF,CThDC,AIMA,AMoCA,CdoBO,AQxDb,CP2BA,AQlBM,ACNE,CVqDQ,AUrDP,CJ3BG,CFkBD,AElBJ,AQ4DI,ADMX,CHvCA,AGuCY,CbcG,AUrDF,AGuCA,CThDC,AElBE,AI2BhB,AIiCc,CR5Dd,COkEgB,CbciB,AadjC,CThDkB,CAAC,AU0CA,ADMA,GAAnB,EThDc,ASgDU,CThDC,CAAC,GAAG,EU0Cf,CAAkB,EV1ClB,CAAd,ESgDA,EAAuC,CCNzB,CAAd,KDM8C,CAAC,EAA/C;AbeI,AI9DJ,AGGA,ALCM,AMGN,AFzBD,AGgCiB,AK6BhB,ADMA,IbaI,IAAI,AShDQ,CTgDP,AShDH,CPVY,EEJZ,AIOA,AK0CA,CL1CC,AMoCA,CdmBH,AE1DJ,AW6CQ,CX9CiD,CAEzD,AMEU,CAAC,AK0CA,CL1CC,EAAD,CAAX,AK0Ce,CTjDC,AGGT,GHHY,EGGnB,CAAa,CHHU,AGGT,CHHU,AGGT,KHHI,CAAW,AGG9B,CM8C2B,CN9CJ,CAAvB,GHHoC,ESiDzB,CTjD4B,ESiDF,GTjDlB,ASiDR,CTjDX,ASiDyC,KAAK,WAAL,CAAiB,IAAI,CAAC,EAAtB,EAA0B,IAA1B,CAA9B,CAAX;AbcI,AI9DJ,AHgCA,AO1BA,ACOmB,ACJnB,ACLA,AGuCE,QL9BiB,AK8BjB,CAAC,EdmBQ,AcnBN,CV3CC,AIOJ,CAAC,ACMG,ACJC,ACLA,CAAP,CX0De,CAAC,AQvDV,AMoCI,CNpCH,AEEI,AIiCJ,CNnCC,ERuDO,AI9DD,AIOP,AEEO,CVqDV,AQxDJ,CP0BO,ASvBP,CNTiB,CMSC,GNTG,AHgCrB,CGhCsB,AHgCT,CAAC,CAAC,GGhCE,CAAW,CAAC,CHgC7B,EAAuB,EGhCW,GAAG,CHgCrC,KGhC4B,IAAmB,KAA9B,CAAjB;AJ+DG,AI9DH,AGEA,ALEA,AMGA,AFlCuB,AGuCG,ACHxB,ACLH,AGuCG,ADMF,KFvDF,CJQE,ACKA,CAAC,CAAC,ACKwB,ACHxB,AIkCA,EV3CE,AIOH,CAAD,AK0CK,CN/CC,ALEA,CKFC,ALEA,CMGC,AEEA,CNTC,AGET,ACKS,AEEA,AGwCA,CN/CC,ALEA,AYqCH,ADQG,CHxCR,CNTU,AIOA,AEEA,CNTZ,AGEA,AM+Ca,CX7CC,AMGN,AK0CR,CN/Ce,ALEA,CKFf,AM+CgB,CL1CC,AK0CA,CL1CC,ENHR,AQKU,AGwCA,CX7CC,AMGA,AEEA,EFFrB,CK0CwB,CX7CH,AW6CI,CX7CJ,GAAA,AQKT,CRLS,AQKS,CRLT,AQKT,AGwCZ,EX7C2B,AQKM,AGwCA,CAAC,EAAlC,CX7C+B,AQKnB,CRLS,AQKnB,AGwCoC,CX7C5B,CAAV,AQKwC,MAAM,CAAC,QAAP,CAAgB,CAAhB,EAAmB,EAAE,IAArB,CAAtC;AV2CF,AOjDA,AN6BA,AC3BA,AMGA,ACIM,ACFJ,AIkCA,ADMA,CbAJ,CAD+D,EAgB/D,CACE,CQ1DA,CAAC,CAAC,AEEA,AIkCA,ENpCD,ACI+B,CDJhC,CRyDF,AO9DQ,ALEA,CKFC,ALEA,CF8DP,AQ3DQ,ACIR,AIsCQ,CL1CC,CDLC,ALEA,AQKA,CAAC,CFFC,AK0CA,EX7CE,AMGN,AEEN,CAAa,AGwCA,CN/CC,AN6BT,CM7BU,ACKA,CAAC,CDLR,AM+CS,CN/CC,AM+CA,CZlBpB,AOxBqB,AEEnB,AGwCiB,CZlBN,AYkBX,CN/CqB,AN6BT,AOxBd,CDLwB,AN6BT,EC3BL,CAAiB,CAAjB,CAAV,CD2BA,EM7BoB,AN6BG,CM7BU,AN6BjC,CM7BkC,GAAG,CAAjB,CAAV,CAAV;APiEE,AIlEF,AGEA,ACKA,AEEC,ACnCD,AGiEO,ADUL,EbiBA,IOhEF,CAAC,AOqCD,CPrCE,CAAD,CAAD,CPgEW,AIlEN,EJkEQ,AQ3DN,CDLC,ACKR,AK0CQ,CTjDC,AGEA,CPgEO,AIlEN,AGEA,AM+CA,CN/CD,CAAT,CHFa,ASiDA,CbiBO,AIlEpB,CSiDe,CTjDC,ASiDA,CTjDC,ASiDf,EF3EK,CP0Ba,AO1BZ,CP0BR,CJkE4B,CAAC,AIlEN,AO1BZ,CP0Ba,AO1BxB,EX4FoB,AIlEpB,AO1Bc,CX4FmB,CIlEL,EJkER,CADpB,kBW3FqC,CAAC,MAAtC;AP2BE,AGEF,AN6BA,AC5BA,AMID,ACGC,AEpCA,AGqED,ADMG,KLrDJ,AMsCA,CPhCE,CAAC,CAAC,CAAC,EN6BE,AC5BA,CKDC,AN6BN,CG/BO,AGEN,AN6BM,CM7BP,AM+CQ,CX9CC,AW8CA,CZlBT,AC5BU,CD4BC,CM7BC,AN6BZ,AYkBY,CTjDC,AGEA,ALCA,CKDC,CAAD,CAAb,AEQO,CLVL,CSiDgB,CX9ClB,AS5BE,AE0EiB,CF1EhB,CPyBkB,AFGA,AOOrB,AEnCI,CPyBkB,AFGA,AOOT,CLVQ,AKUP,AIuCS,CJvCR,AIuCS,CTjDC,AFGA,CEHC,CAAL,AOzBnB,CPyBA,ASiDgB,CAAN,CTjDkB,AFG9B,AOOA,AIuC8B,CF1EhB,CT4BkB,AOOT,AIuCX,CX9CqB,AW8C/B,EX9CF,CS5BmB,CT4BkB,COOrC,IEpCA,EAEE,8BAA8B,CAAC,CAAC,MAAM,OAAO,KAAK,MAAM,EAF1D;AX4FE,AIjEE,AGEJ,AN6BA,AC5BE,AQMF,AChCD,AEwEG,EbgBA,IClCF,EYkBE,EAAE,CbgBO,AahBN,CbgBO,CO/DL,ALCA,AQMA,CHPP,AM+CE,CbgBS,AahBF,CTjDC,CJiEK,AClCJ,AC5BA,AQMA,CTsBC,AC5BA,EQME,AGwCA,CX9CC,CAAb,AQMF,CTsBA,CAAkB,AC5BA,AQMA,CNTC,AFGA,ED4BnB,CG/BsB,AFGA,CD4BC,AC5BrB,EAAuB,AW8ChB,CX9CiB,AW8CA,CAAjB,CZlBmB,AC5B1B,CD4BF,AYkB6B,CX9CC,CD4BC,CG/BC,CSiDvB,CAAP,CTjDiC,CH+BC,CAApC,EG/BuC,CAAC,GAAL,CAAS,QAAT,EAAmB,CAAC,GAAG,KAAvB,CAA/B;AJkEA,AIjEA,AGEL,AN6BC,AC5BI,AMxBJ,AC8BA,ACAE,AIkCI,ADML,KNxDH,CNsCE,CAAC,CAAC,AStBA,CF9BG,AMgEC,CdsBI,CClCV,AOpDA,CPoDM,EOpDI,AE8BF,CAAC,CRNC,AMxBE,CRsFK,AIjEN,AH+BA,AOpDE,CPoDP,CAAO,AC5BA,AQMX,CVwDkB,AUxDN,ENTE,AFGA,AMxBJ,AC8BL,CTwDgB,AE9DN,AMxBjB,CMgEM,EZxCc,CD4Bd,AC5BU,AOMhB,AKkCwB,CbZF,AQtBT,ACAS,CTsBhB,AQtBQ,ACAS,CRNC,AOMT,CRsBU,AC5BrB,CEHO,AH+BL,CG/BqB,AH+B3B,AaY6B,CV3ClB,CJiEwB,CIjEL,AKS9B,CCAc,CDAS,ACAS,CDAhC,ACAc,CVwDV,AIjEO,CMSwB,CNTC,GMStB,CAAZ,CNTS,CMS+B,CNTC,KMSK,CAAC,INTtC,EAA4C,EMSb,CAAgB,CAAhB,EAAmB,EAAE,CNTpD,CAAP,EMSsC,CAAxC;AVyDE,AIjEA,AH+BJ,AC5BI,AMxBJ,AE8BE,AChCJ,AGkEE,MHlEE,EXwFM,AUxDN,CF9BG,CJqBD,CIrBJ,CGFF,AGkEQ,CbZC,CAAP,AOpDU,CJqBD,AOvBD,CT0BE,AMxBE,AE8BF,CRNC,AMxBE,AE8BF,CVwDO,CIjEL,CFGC,AQMZ,CVwDmB,AUxDN,CF9BH,CAAZ,CRsFI,AE9Dc,CAAC,EQMjB,CNToB,EFGR,CEHW,AFGA,CAAC,GAAG,IAAA,CAAA,CEHzB,EFGyB,CAAA,CAAA,EAAK,GAAL,CAAf,CAAV;AEFD,AGxBH,ANuDD,AC5BK,AMxBL,AC8BC,ACAC,AChCD,AGiEQ,ADOR,KZ3BF,GaoBU,CPlEH,CL2BD,AYuCE,CZvCD,AS1BE,CT0BD,AOMA,CPND,AW8CE,CX9CH,CK3BJ,AEiCS,CEhCG,CT0BA,AS1BL,CJDO,AL2BD,AOMD,CAAC,CAAC,AEhCE,CT0BA,AS1BhB,CJDkB,AL2BP,COMC,CAAM,EPNI,AOMF,CPNG,GAAG,AOMF,CPNb,CAAP,AOMsB,GAAG,EFjCf,CAAW,CAAX,CEiCF,CFjCgB,AEiC5B,CFjCc,CAAd;APyFI,AIhEH,AGxBD,AL2BG,AS1BJ,AGgEa,ADOH,QbgBD,AcvBI,ADOH,CNxEJ,AOiEC,ADOC,MbgBH,AOxFJ,EPwFiB,COxFH,IAAI,eAAJ,CAAW,CAAX,EAAc,CAAd,CAAd;APyFM,AIhEP,AGxBA,ANHC,AOMF,AC6BE,ACCA,AI+Be,ADOH,KThEd,CJiFQ,AQrFJ,AE8BF,CAAC,CAAC,AI+Ba,ADOH,CCPN,CDOQ,CHtCd,CF9BF,AE8BQ,AGsCU,EAAE,CLpEV,AKoEW,CbiBH,EUvDJ,CVuDO,ASxDb,ACCO,CGsCG,GJvChB,CAAW,CRnCJ,AQmCP,EAAc,ACCR,CTpCI,ASoCY,CTpCX,ASoCL,CDDN,CCCyB,CDDN,CAAnB,ACCM,CAAN,CTpCA,EAAmB,qBAAnB;AD4FQ,AC1FR,AC4BE,AMvBF,AE8BA,AC7CsB,AG2EJ,ADOX,OAAP,CbkBQ,AczBU,EbjEZ,COKC,EE8BA,CRPC,AQOR,AI8BM,CdwBa,CCzFP,AC4BF,AMvBE,CNuBD,AMvBX,CNuBU,CD5BK,AC4Bb,ID5BiB,CAAC,GAAL,CAAS,KAAK,SAAd,EAAyB,KAAK,IAA9B,CAAf;AD2FQ,AIhEF,AGxBR,ANFE,AC4BC,AMvBF,AC6BC,ACCD,AI6B2B,ADQ3B,KH7DD,AG8CQ,CNvDJ,AEgCF,CAAC,CTwDO,ASxDN,AK8BwB,CVtCpB,AH1BD,AQkCJ,CRlCD,AQkCA,EFhCF,CNFW,CQkCD,CTwDO,AOxFP,AEgCC,CAAC,CTwDO,AC1FJ,AQkCJ,CAAD,CLRF,CJgEc,CAAC,ASxDN,CLRI,EKQD,CAAC,CAAD,CAAlB,CTsDmB,CCxFV,CAAiB,GG2B1B,CADmB,EAEnB,AH5BS,CAAT,GG0BmB,EAGnB,CAHmB,EAInB,MAJmB,EAKnB,KALmB,EAKN;AJ4DL,AI1DR,AG9BA,ANFA,AC4BD,AYmCO,KZhDR,GF2EU,CC1FH,CAAL,Aa+DmC,CP7D5B,CH8BD,CJ0DO,AC1FJ,Ca+DT,Cd2Be,COxFH,CAAL,ANFM,CD0FK,CAAC,COxFH,CAAhB,QNFS,CAAiB,MAAjB,CAAT;ADuFmB,AIvDX,AG7BT,ANFA,AOfyB,ACgDxB,AC3CA,AIyEA,ADSM,ObcA,CIvDE,CAAF,AMzCD,AGkFC,EJvCD,CK8BC,GL9BG,CAAC,CC3CV,ED2Ca,CAAb,AC3CgB,AIyEF,ADSR,EJvCU,CAAC,AK8BA,ADSG,CHlFA,AGkFC,CAAD,CJvCA,CAApB,AK8BqB,ADSW,EJvCT,CAAC,EAAxB,EAA4B,EC3CZ,CAAiB,EIyEhB,CAAiB,CJzEG,AIyEF,CJzEG,EIyEA,CJzEL,CAAS,EIyEzB,CAAjB,CJzEiC,EAAe,EAAf,CAAjB,CAAhB;AVqGK,AI5DM,AF3CX,AO8CE,AC3CF,AI0EA,ADOkC,MAAA,ETzCvB,AKGT,CAAC,AC3CE,CD2CD,AK+BA,ADO4B,CJtC7B,AK+BE,CL/BH,EK+BM,CJ1ER,AI0EA,CL/BU,CAAC,CAAC,AC3CE,CD2CH,CP9CJ,AO8CG,EC3CQ,CD2CD,EP9CjB,CAAa,AO8CO,CP9CN,AO8CO,CP9CN,AO8CO,GAAG,CAAL,CAAlB,CP9CF,AQGc,CAAiB,CRHR,CAAvB,EQGmC,CAAC,GAAL,CAAS,IAAT,EAAe,EAAf,CAAjB,CAAd;ANwCM,AGxCwB,ANWhC,AQiCG,AC3CF,AGgFyC,MZtEtC,AYsEsC,ITzCvB,CH7BnB,GG6BE,AH7BO;AD0FH,AI5DJ,AH7BA,ACdA,AY6EA,ADMgC,KAAZ,KAA4C,CboBrD,ACzFJ,Aa+DF,Cd0BO,AI5DN,IH7BM,Ca+DD,CAAX,CVlCa,AH7BN,CAAS,ACdT,CDcA,CDyFI,AI5DK,AH7BhB,Aa+DgB,Ed0BQ,Ac1BN,CZ7ElB,AY6EmB,Cd0BR,AI5DS,AF3CP,CFuGT,AEvGU,CAAC,GY6EC,CAAU,CAAV,CZ7EhB,CY6E6B,CZ7EN,CAAvB,IY6EgB,CVlCA,CAAY,AUkCS,CVlCR,GAAG,CAAhB,CUkC2B,CVlCR,CAAnB,CAAhB,AUkC8C,IAA9B,CAAhB,EAAqD;Ad2BlD,AI5DH,AH7BD,AQiCC,AC3CF,AIyEI,ADMF,GbOA,GUtFE,EIyEA,IVlCI,AMvCR,CD2CS,AIoCA,CJpCP,CC3CQ,CIyEE,CVlCC,AUkCA,ADMA,CAAC,ETxCE,AUkCZ,CVlCa,AUkCA,CAAb,ADMS,CAAJ,CTxCW,AUkCA,ADMA,CTxClB,AUkCmB,ADMZ,EAAc,CCNC,CAAC,CDMC,CCNtB,GDM0B,CAAC,GAAL,CAAS,CAAC,IAAI,KAAK,OAAL,CAAa,CAAb,CAAd,CAAjB,CAAP;AXnFA,AOgDD,AC3CC,AIyEC,ADMF,KJlDD,AIgDQ,IXlFD,EQKE,IRLP,CQKY,ERLE,CAAd,CQKA;AVmGE,AI3DF,AH7BF,ACfC,AQKA,EVkGG,ICxFA,IAAJ,CG6BO,EJ2DQ,ACxFP,CDwFQ,GAAD,AI3DF,EJ2DM,AI3DjB,IAAiB,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,MAAlB,EAA0B,KAA1B,CAAjB,EAAmD;AJ4D/C,AI3DF,AH7BF,AQNA,AKqEA,ADMM,QbmBG,CanBH,EbmBc,ACxFb,CDwFc,CczBd,CVlCC,CAAC,CH7BG,EG6BA,ASwCN,CbmBF,ACxFG,CAAS,AQNT,CT8FuB,AczB9B,ADMkB,CTxCF,ASwCG,GZrEE,AQNrB,CACE,CAAC,CRKa,AQLZ,CRKqB,KG6Bb,AKnCZ,CLmC6B,AH7Bb,CG6BJ,AKjCV,CLiCA,AKnCF,CRMkC,CAA3B,AQHL,CRGF,wCQH2C,CAAC,aAAa,CAAC,CAAC,MAAM,EAHjE;AT+FM,AI3DJ,AH7BH,ACxB0B,AOsB1B,ACRD,AIyEC,ADKsB,KCff,CJ/DJ,AG8EmB,CH9EvB,CNuCI,CAAC,CAAC,AMvCD,AG8EgB,EboBP,CI3DV,CAAM,EAAE,CAAC,CJ2DO,CAAC,MAAP,AI3DJ,CJ2DkB,AI3DN,CAAZ,EAAe,CJ2DO,AI3DtB,CAAN,IJ2DwB,EAAd,EAA2B,GAA3B,CAAN;AACD,AI3DH,AMvCF,AG6E2B,MAAA,ETtCzB,CAAC,CAAC,CMvCG,ENuCL,CAAM,EAAE,AMvCE,CNuCD,CMvCX,ONuCQ,CAAY,CAAZ,CAAN,EAAsB,CAAC,GAAG,CAA1B;AAEA,AH9BJ,AQFA,ACRC,AIyEO,ADGa,KAAD,CZlEhB,AQFA,ELgCA,CAAC,AUiCG,CVjCF,ASoCiD,CTpClD,CAAD,AH9BJ,AQFA,GLgCW,AH9BD,AQFA,ILgCK,EUiCP,CVjCU,EUiCM,GVjCpB,KUiCmB,IAAqB;AdyBtC,AIzDF,AH9BF,AQFA,AKiEA,ADGA,UbqBU,CCvFH,AQFA,CKiED,ADGA,CbqBF,CIzDI,ASoCA,CTpCN,CH9BU,AQFA,CAAL,AIoEI,GJpEK,CRET,AQFP,AIoEe,CZlEG,AYkEF,IAAD,CAAf,CZlEA;ADwFG,AIzDF,AH9BF,ACnBM,AOiBN,ACzBwB,AIyFf,ADIR,QXrFK,AYiFG,CZjFH,AYiFC,GDIA,IAAI,EXrFL,CWqFQ,EXrFI,CAAC,CAAD,EAAY,CAAZ,AWqFG,EAApB,GXrF0C;AEkD3C,AFjDC,AYgFW,ADKX,KTvDM,GUkDK,CZhFJ,EYgFD,ADKD,EXrFM,CAAC,GWqFZ,CACE,CXtFK,CAAW,EWsFZ,EXtFgB,CAAC,EWsFZ,CXtFO,CAAS,CAAT,EAAY,IAAI,CAAhB,AWqFlB,CXrFO,CAAP,AWuFE,IAFF,EAGE,uBAHF,EAIE,OAAO,IAAI,EAJb;AbCA,AI9FoD,AH4BtD,ACnBC,AOTwB,AKwFP,ADWhB,CbPF,AErFO,CFqEwD,CAAjC,CAAhC,EChDM,CAAJ,Ca4DkB,Eb5Db,GYuEI,EAAE,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAC,IAAI,KAAK,OAAL,CAAa,CAAb,CAAd,CAAJ,CAAT;AZtEA,Aa2DM,ADYP,KAVO,KCFmB,Cb3DlB,Ga2DP,Eb3DY,IAAL,CAAU,CAAjB;AG3BF,AH4BC,ASmBM,AIwCL,MVvFE,AM+CG,CAAA,EAAA,GN/CP,AM+CY,AIwCJ,CJxCK,CAAD,CN/CF,CM+Cc,CIwCX,GJxCD,AIwCI,IAAI,CJxCoB,WIwCxB,CAAiB,IAAI,IAArB,CAAd;Ad6BJ,AInHI,AM+CA,AIwCA,ADYM,SbgBM,AahBN,ETnGC,CUuFD,Gd4BV,CAAuB,AInHP,CAAZ,CM+CO,CVoEX,EAAiC,CahBvB,CbgBuB,AUpE7B,CAAa,CGoDS,CbgBsB,AahBrB,EHpDN,CAAC,CVoEtB,EAA2D,GUpEvD,EAA0B,CAAC,CAAC,MAAF,GAAW,CAArC;AVqEF,AInHC,AH4BD,Aa0DU,ADYiB,EbiB3B,EAAE,CAAC,CCvFC,AYsEuB,ECZjB,ADYe,OZtEzB,GAAa,GDuFb,CAAoB,SAApB,EAA+B,SAAS,QAAT,CAAkB,EAAlB,EAAkC;AAC/D,ACvFA,ASkBA,AIuCM,ADYuB,MAAA,EbkBzB,AUrEE,CVqED,CUrEG,AIuCW,Cd8Bf,ACvFG,ESkBI,EVqEA,Ac9Ba,Cd8BZ,ACvFA,EDuFE,AUrEE,CVqED,ACvFR,ASkBU,CTlBD,ASkBA,AIuChB,CJvCA,EVqEA,EAAqB,CCvFd,CAAgB,CAAC,GAAD,EAAM,CAAN,KAAY,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,MAAX,EAAmB,GAAnB,CAA5B,EAAqD,CAArD,CAAP;ADwFE,AI1HmB,AHmCtB,ASkBC,AGkDuB,KAAD,GHlDhB,EGkDsD,KHlD/C,GAAG,EAAE,GAAG,CAArB;AVsEC,AUrED,AIuCA,ADWA,EHlDA,IAAI,CAAC,CAAD,CAAJ,EIuCK,CJvCK,AGkDJ,CHlDK,EAAE,AIuCJ,CAAC,CDWC,CHlDK,CAAN,AIuCG,CAAb,ADWc,ECXE,CJvCK,AIuCJ,EDWE,CCXC,IJvCpB,AIuCA,ADWA,ECX0B,CAAC,EAA3B,EAA+B;AbxDjC,AayDI,ADWF,MZpEE,IAAJ,EYoEQ,CZpEA,CayDE,CAAC,GAAG,ADWA,GAAG,KCXK,ADWA,CCXC,ADWA,EAAD,CAApB,KCXY,CAAkB,CAAC,GAAG,CAAtB,EAAyB,CAAC,CAAC,GAAG,CAAL,IAAU,CAAnC,CAAV;Ad8BF,ACtFA,ASiBA,AIwCE,ADWF,OHnDK,GVqEC,CCtFC,ASiBE,AGmDJ,CHnDK,CIwCH,EJxCM,CTjBD,ASiBZ,CGmDA,CHnDgB,AIwCd,ADWU,CZpEL,ASiBU,AIwCJ,CbzDG,AayDd,GJxCmB,AIwCJ,CJxCK,AIwCJ,ADWlB,CHnDuB,AIwCJ,CbzDZ,AYoEa,CZpEG,CAAC,AayDP,CAAM,CAAC,CbzDD,ASiBvB,CIwCuB,ADWG,CZpEG,ASiBE,CTjBR,ASiBS,AIwCJ,CAAL,CJxCvB,EAAoC,CTjBD,CayDF,GbzDM,CAAC,GAAL,CAAS,CAAC,CAAC,CAAX,EAAc,GAAd,CAA5B,EAAgD,CAAhD,CAAP,MYoE6D,EAAE,EAA/D;AbkBQ,ACrFT,ASiBG,AIwCE,IJxCF,EVoEM,EAAF,AUpEA,CAAC,CAAD,CAAJ,GAAW,EIwCH,CAAC,CJxCM,CAAC,CAAC,AIwCL,CJxCM,GAAG,CAAL,CAAN,AIwCQ,CAAC,CAAD,CJxCS,AIwCzB,OJxCF;AVoEU,AUnEX,AIwCG,ADUJ,MbiBY,IAAN,AajBF,KAAK,CAAC,CCVC,CAAC,EDUR,CCVW,IAAI,ADUA,CCVC,EAAD,CAAJ,ADUX,GCVsB,CDUC,ECVE,CAAC,CAAD,CDUG,CCVC,ADUA,EAAN,CCVS,CAAC,EAAD,ADUG,CCVN,GAAU,CAAd,CAAjB,ADUZ,EAA+C,CCVC,CAA5C;Ad2Bc,ACtHE,ASoDrB,AIwCI,ADUD,CH1DG,KV0Ea,Gc7BD,CAAf;Ad6BI,AczBJ,ADUA,QbesB,KczBjB,CdyBiB,CAAA,Aaff,GCVP,CAAW,CAAX,CdyBsB,AafT,CbeS,AafR,CCVC,CAAf,GDUmB,CAAC,EAAP,CAAb;AbgBA,AUjEG,AIwCH,ADUD,MbeC,AUjEG,CAAA,AG+CL,GbkBM,CUjED,CViEG,CafD,CHlDK,AIwCJ,CJxCK,AIwCJ,CJxCG,EAAY,AIwCZ,IJxCA,EIwCM,GJxCsB,EIwCjB,aAAL,CAAmB,GAAnB,EAAwB,GAAG,CAAC,CAA5B,CAAhB;AdwBsB,AU/DxB,AIwCE,ADUA,KbasB,EAElB,EAAE,CAAC,IAFe,AcvBhB,CduBR,AcvBS,ADUA,GHlDF,AIwCK,GDUG,CAAC,CHlDhB,AIwCiB,CJxCJ,GGkDQ,CHlDJ,CAAC,KGkDF,CHlDhB,AGkD6B,CCVjB,CJxCc,AIwCK,CJxCJ,CAAC,CIwChB,ADUI,CAAD,CCVqB,ADUlC,GHlDwB,AIwCa,CAAC,CAA5B,CJxCyB,AIwCnC,CJxCF;AVmEA,AC5Da,AakCX,ADUD,UbgBK,CC5DO,CAAA,EakCL,CAAC,EblCI,CakCD,EblCS,CAAC,CD4DJ,Cc1BD,CblCI,CD4DA,CAAC,AC5DW,CAAZ,CD4DG,CAAC,AC5DmB,CAAvB,GD4DC,CAAQ,CC5D2B,CakC7C,CAAmB,GAAnB,EAAwB,GAAG,Cd0BjB,Ac1BkB,CAA5B,CAAV,Ed0B4C,EAAzB,EAA6B,GAA7B,CAAiC,aAAjC,CAArB;AACA,AC5DA,ASPA,AIyCE,ADUH,KAVO,EHzCD,CVmED,GUnEK,CAAC,EIyCF,CJzCK,CAAb,CIyCW,CblCJ,ASPS,CVmEhB,AUnEiB,CIyCH,EJzCM,CTOpB,CAAa,CAAC,CAAC,ASPS,CAAC,AIyCJ,CAAC,CAAD,EAAI,CblCzB,AakCqB,CJzCrB,CTOuB,AakCK,CblCJ,ASPS,AIyCZ,CblCI,ASPS,AIyChC,EJzCF,EAAsC,ETOtC;ASNE,AI0CA,IJ1CA,IAAI,AI0CJ,CJ1CK,CAAD,CAAJ,EI0CK,CJ1CK,AI0CJ,CJ1CK,CAAC,CAAC,AI0Cb,CAAU,EJ1CM,CAAL,AI0CX,CJ1CU,CI0CK,CAAC,EJ1CM,CI0CH,CAAnB,EJ1C0B,CAAC,CAAC,CAAD,CAAjB,CAAV;AVmEF,AC5DA,ASNC,AI0CA,ADSK,OZ7CD,CD4DD,CafE,IZ7CK,CAAX,IAAgB,AY6CV,GZ7CN,AY6CmB,EZ7CE,AY6CH,IAAsB;AbgBtC,AC5DA,ASNH,AGmDC,CHxDK,GTWH,CAAC,CAAC,EAAF,CAAK,CAAC,AY6CJ,CZ7CK,CD4DD,GafR,Gbec,CC5DP,CAAW,CD4DD,AC5DV,EAAc,CAAC,CD4DD,AC5DE,CD4DD,KAAL,AC5DV,CD4DqB,AC5D1B,CD4De,CC5De,CD4DD,AC5DE,CD4DD,AC5DE,CD4DjB,EAAkB,KC5DH,CD4Df,AC5D0B,CD4DD,AC5DV,CD4DW,CC5DG,CAAC,CD4DL,AC5DM,CAAhB,CD4DgB,AC5D9C,ID4DwC,KAAe,GAAG,CAAC,IAAD,CAA3C,EAAmD,GAAnD,CAAf;AACA,AcxBF,YdwBQ,CcxBD,KAAP,EdwBgB,GAAG,IAAI,CAAC,MAAL,CAAY,CAAC,GAAD,EAAM,IAAN,KAAe,GAAG,CAAC,IAAD,CAA9B,EAAsC,GAAtC,CAAjB;AC5DA,ASJN,AIyCG,ADQC,KC7BM,CJpBJ,GTIK,CY6CH,CHjDG,CGiDD,CZ7CK,CAAC,ASJD,CAAD,CGiDA,CZ7CK,CAAb,CSJsB,CTIN,CAAC,AY6CJ,GZ7CO,CAAC,CAAC,AY6CxB,EAAsB,IZ7CpB,EAA8B,CAAC,EAA/B,EAAmC;AD6DnC,AC5DE,ASJN,AGiDI,MHjDA,EGiDA,EZ7CM,CAAC,CSJD,CGiDD,CbeG,CUhEC,CAAb,AGiDY,EbeR,CC5De,CAAC,CAAC,AY6CJ,CZ7CK,CAAD,CAAF,CAAb,CY6CM,CZ7Ce,AY6CJ,CZ7CK,CAAC,AY6CjB,CZ7CgB,AY6CxB,CZ7CuB,GAAO,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,CAAD,CAAX,IAAkB,cAAzB;AD6DrB,AC5DA,Aa9CJ,AD2FC,OAFD,ECzFK,Cb8CG,GD4DJ,AafG,EZ7CM,CAAC,CAAC,Aa9Cf,AD2FW,CZ7CK,CAAD,AY6CF,CZ7CA,Aa9CG,Cb8CZ,EAAiB,AY6CJ,CZ7CK,Aa9CF,Cb8CG,CAAD,CAAD,AY6Cd,EAAgB,CZ7CK,CAAP,Wa9CL,CAAa,KAAb,CAAhB;Ad0GI,AC3DD,ASLL,AIzCE,AD2FE,OHlDC,CGkDD,EC3FI,CJyCC,CAAC,CGkDD,EHlDI,CAAb,AGkDY,EHlDI,CAAC,CGkDD,CAAC,CHlDG,CAAC,AGkDL,CHlDM,AGkDlB,MHlDJ,EAA8B,CAAC,EAA/B,EAAmC;AVgE7B,AU/DJ,AI1CQ,AD4FP,IHlDD,EI1CQ,CAAF,AD0FC,GHhDD,GGkDC,CHlDG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAlB;AVgEM,AC3DJ,ASJH,AI3CY,AD6FT,IZ9CA,CAAC,CAAC,Aa/CO,Gb+CT,CAAM,CAAN,GY8CM,GAAG,GAAG,EAAE,CAAC,WAAH,EAAZ;AbcM,AC3DP,AahDK,AD8FJ,QC9FgB,Id2GV,AabF,CC9FiB,ED8Fd,IAAI,IbaM,AabjB,CC9FgB,CAAiB,AD8FhB,CbaG,Ec3GJ,CAAlB,CD8FwB,GAAG,CbanB,GabuB,CAAC,GAAD,CAAZ;AbcZ,AC3DR,ASLD,AI3CE,AD8FC,CZxDY,QSKR,CI3CC,KJ2CR,CI3Cc,GAAG,KAAK,CAAC,MAArB;Ad4GM,AUhET,AI3CG,CJqCJ,SIrCU,IAAI,GAAG,KAAK,CAAC,IAAnB;AbiDK,AahDL,AD8FA,UC9FM,CbgDD,AY8CA,CZ9CA,GahDM,ED8FX,CC9Fc,AD8FF,CZ9CP,GAAU,CY8Cf,CC9FoB,CD8FD,EC9FI,CbgDR,GahDf,AD8FyB,wBAAwB,EAAE,EAAnD;AbaI,AC3DW,Aa/Cf,AD+FA,EZhDe,WD2DX,AC3DW,AYgDR,GZhDQ,EYgDf,OC/FO,MAAM,IAAI,CAAjB,EAAoB,oCAAoC,MAAM,EAA9D;Ad0GI,AC1Da,Aa/CjB,AD+FD,KAdO,IZlCW,GAAA,GAAY,EAAZ,Qa9Cf,KAAK,IAAI,CADX,EAEE,mCAAmC,MAAM,MAAM,IAAI,MAAM,KAAK,MAAM,CAAC,EAFvE;AdyGI,AcpGJ,SAAK,CAAL,GAAS,CAAT;AdqGM,ACjDN,AanDA,AD2FM,SZxCN,AanDK,AD2FC,EC3FN,CbmDA,EanDU,CbmDH,CanDP,CbmDM,IAAW,AYwCX,GAAe,CAAC;AbUd,ACjDN,AanDF,AD0FwB,MAAA,EAAF,CC1FjB,GdoGG,ACjDA,GanDR,GdoGc,AcpGA,CdoGC,IAAI,CAAC,AcpGpB,KdoGe,CAAW,CAAC,CAAZ,EAAe,CAAf,CAAD,CAAN,GAA4B,aAAa,CAAC,EAAE,CAAC,IAAH,CAAQ,KAAT,CAAzC;AACA,AClDE,AalDV,ADyF4B,MAAA,EZvClB,CalDL,EbkDG,CDkDA,CcpGR,GAAY,KAAK,EdoGE,CcpGC,EdoGE,IAAd,AcpGR;AdqGO,ACnDQ,AajDhB,ADwFuB,KAAD,GZvCN,EYuCsC;Aba/C,ACpDE,AYwCR,UZxCwB,EYwClB,CAAC,CZxCL,AYwCI,EAAI,CAAJ,IAAS,QAAQ,CAAC,GAAT,CAAa,CAAC,IAAI,KAAK,OAAL,CAAa,CAAb,EAAgB,QAAhB,CAAlB,CAAf;ACvFF,ADwFE,MCxFU,CAAZ,GAAa,GDwFJ,GAAG,CAAC,EAAD,CAAH,CAAQ,CAAR,EAAW,CAAX,CAAP;AbYI,ACpDF,Aa/CF,ADwFD,KAHO,KZtCA,Ca/CC,EdmGH,CCpDM,Ea/CE,Eb+CE,Aa/CP,CAAQ,Cb+CC,Aa/ChB,Cb+CiB,MAAH,KAAc,IAAI,CAAC,CAA/B,EAAkC;ADoDhC,ACnDA,Aa/CL,cb+CW,IAAI,KAAJ,CACJ,cAAc,EAAE,4CAA4C,IAAI,CAAC,CAAC,EAD9D,CAAN;ADmDA,AChDD,AYuCG,SAAA,aAAA,GAAiB,IAAD,IAA0B;AbU1C,AcjGA,ADwFN,ECxFM,WAAW,CAAC,ADwFV,ICxFS,ADwFL,CAAC,CCxFmB,GDwFhC;AbUQ,ACjDN,AahDF,ADwFE,MZxCA,EahDE,CbgDC,CAAC,EDiDE,CaTD,CZxCL,CAAS,EAAT,AYwCA,MbSiB,GAAG,QAAQ,CAAC,KAAT,CAAe,MAAf,EAAuB,YAAvB,CAAd;AACD,ACjDL,AahDA,ADwFE,aZxCK,AahDA,IbgDP,AYwCS,CCxFG,GDwFC,CAAC,ICxFP,ADwFE,CCxFY,ADwFF,IAAV,CAAe,ECxFjB,CAAsB,EDwFA,ECxFtB,CAAP,UDwFS,CAAP;AbUE,ACjDL,AahDA,KbuCD,AazCA,CAEE,OAAO;AAAE,ADwFT,MCxFS,OAAF,ADwFF,IAAL;AbUE,AChDJ,AalDoB,ADyFhB,MCzFgB,GbkDpB,IDgDI,CChDJ,GAAQ,AYuCG,MZvCE,CYuCK,KAAK,OAAL,CAAa,IAAb,CAAP,KAA8B,QAArC;AbSA,AC/CF,AanDO,KAAP,EAA2B,MbmDpB,IAAI,WAAJ,CAAgB,KAAK,GAArB,CAAP;AD+CE,AC9CH,AanDC,ADyFA,KZxCF,OajDQ,CDyFD,OAAL;AbSI,AC9CP,AapDW,AD0FN,QC1FM,OAAO,EAAE,AD0FR,IAAI,CAAC,CC1FR,OD0FG,CAAc,IAAd,CAAmB,KAAK,aAAxB,CAAP;AbSI,AcnGmB,QAAA,OAAnB,GdmGM,KAAK,GAAG,IAAI,QAAJ,CAAa,GAAG,YAAhB,CAAd;AACA,ACtER,Aa9BoC,AD2FlC,MZ7DE,CAAJ,Ca9BoC,Eb8B/B,EDsEG,WAAW,GAAG,KAAK,CAAC,KAAD,CAAnB;AACD,ACtEL,Aa/BM,AD4FJ,OC5FF,Ib+BO,KAAK,CY6DH,GZ7DF,CAAU,CAAjB,AY6DE;AbUE,ACtEL,Aa/BA,ADmFD;AClFD,AD4FA,KAXO;AboBF,ACrEJ,AY7D2C,MZ6DvC,IAAJ,GDqEI,ACrEI;ADqEJ,ACpEF,Aa/BI,EAAA,Sb+BG,Ia/BU,Cb+BL,Aa/BM,Gb+BX,CAAS,Ga/BC,Eb+BI,Aa/Bc,Gb+BnB,CAAS,Aa/BR,EAA8B,Ib+B/B,GAAkB,CAA3B,CAAP;ADoEE,ACnEH,Aa/BD,AD1BF,EAAA,MC0BM,CD1BC,CAAC,IAAD,EAAY,IAAZ,EAAsB;Ab6HrB,AclGJ,AD1BF,QAAI,KC0BK,AD1BT,KC0Bc,QAAL,CAAc,OAAd,CAAsB,IAAtB,EAA4B,QAA5B,CAAP;AdmGM,AC9EO,AapBd,CboBI,IatBL,CAEE,OAAO,KdkGK;AAAE,AclGL,AD1BX,MC0BW,MD1BH,CC0BC,CdkGO,Ea5HJ,CAAC,Eb4HC,Ea5Hd;Ab4HuB,AclGH,ADzBlB,MCyBkB,KDzBb,Gb2HgB,Ga3HrB;Ab2HY,AclGL,ADxBL,KCwBF,EAA2B,CDxBzB,KAAK,Gb0HwB,Aa1HrB,Ib0HyB,Ca1HpB,WAAL,CAAiB,Cb0HI,EAAzB,Ca1HI,CAAR;Ab2HI,AclGN,ADxBE,Yb0HI,AclGA,MdkGM,CAAC,GAAD,EAAM,KAAN,CAAN;AACA,AcnGE,QAAA,IdmGF,GcnGA,QdmGW,GAAG,QAAQ,CAAC,KAAD,EAAQ,CAAC,KAAD,CAAR,CAAtB;AACD,AcpGY,ADvBjB,QCuBiB,GDvBZ,ICuBC,GDvBN;Ab4HI,AcrGsB,ADtBxB,QCsBwB,ADtBxB,KAAK,GAAG,KAAK,YAAL,CAAkB,IAAlB,CAAR;ACsBI,ADrBJ,OCqBF;AdsGE,AcrGH,adqGG;AAAA,AcpGL,ADtBG,WAAK,QAAL;Ab0HE,AazHA,QAAA,KAAK,GAAG,IAAI,CAAC,KAAb;Ab0HE,AcrJY,AD4Bd;Ab0HI,YAAA,WAAW,GAAG,SAAd;AACD,Aa1HL,WAAK,IAAL;Ab2HI,Aa1HF,QAAA,KAAK,GAAG,KAAK,SAAL,CAAe,IAAf,CAAR;AbwFF,AcrBN,ADlEQ,SCkEC,OAAT,CAAiB,CAAjB,EAA4B,CAA5B,EAAuC,CAAvC,EAAgD;AdyD3C,AcxDH,KdiBE,CAuCE,OAAO,CAAP,EAAU;AACV,AcxDJ,ADnEI,ECmEJ,CAAC,GdwDG,AcxDA,IAAI,CAAC,ADnEA,GCmEL,CAAS,CAAT,CdwDW,CcxDC,CDnEZ,Cb2Hc,CAAd,CcxDgB,CAAC,GAAL,CAAS,GAAT,EAAc,CAAd,CAAZ,CAAJ;AdyDI,AcxDJ,ADnEM,ECmEN,CAAC,GdwDG,AcxDA,EDnEE,ECmEE,CAAC,EDnEE,Cb2HC,AcxDR,CdwDS,AcxDA,CAAT,ADnEU,Eb2HV,AcxDY,CdwDC,CAAb,Ca3He,CCmEC,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAZ,CAAJ,CDnEc,CAAmB,IAAnB,CAAR;Ab4HH,AcxDH,ADnEM,ECmEN,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAZ,CAAJ;AAEA,QAAM,MAAM,GAAG,CAAC,GAAG,EAAnB;AduDE,ActDF,ADrEI,Ib2HF,IctDI,CAAC,EdsDE,Aa3HA,Cb2HC,ActDA,CAAC,EDrEP,CCqEU,CAAd,EdsDE,CAAgB,WAAhB,EACG,KADH,CACS,CAAC,IAAA;AACN,AcvDN,ADrEM,Mb4HA,EcvDA,ADrEA,CCqEC,GAAG,CAAC,ADrEA,Cb4HG,CAAC,Ca5HD,CCqEC,CduDT,CAAa,CAAb,CcvDa,ADrEA,GCqEG,CAAE,KDrEV,CCqEgB,ADrED,GCqEI,CAAV,ADrEU,CAAC,ECqEI,ADrExB,CCqEQ,ADrEhB,CCqEK,CAAX;AdwDM,AcvDN,ADrEM,QCqEA,CAAC,GAAG,CduDG,AcvDF,CduDL,EcvDQ,CAAd;AdwDK,AcvDL,KdmDE,CcnDE,CdwDC,EcxDL,EdmDE,CAKQ,WAAW,IAAA;AACf,Aa9HF,WAAK,Cb8HG,CAAC,Ka9HT,Ib8HQ,EAAY,aAAZ,IAA6B,WAAW,CAAC,WAAD,CAA9C;AACA,AcxDN,ADtEM,Mb8HA,AcxDF,EdwDI,Aa9HF,Cb8HG,GcxDC,CDtEC,GCsEG,ADtEA,CCsEd,EAAiB,CdwDX,CAAc,Aa9HD,Mb8HC,CAAA,Aa9HN,CAAa,IAAI,Cb8HX,Aa9HY,Cb8HZ,Ka9HN,Cb8HM,Aa9Hd,Cb8Hc,MAAA,CAAA,EAAA,EAAM,SAAN,CAAA,EAAe;AAAE,AcvDnC,ADtEI,ICsEJ,GAAG,CduDgC,EcvD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AduDiC,ActDlC,AD5FC,GC0FF,IdwDoB,CAAd,CctDC,CdsDoC,GctDhC,MAAM,IdsDX,ActDe,CAAd,EAAiB;AACtB,IAAA,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AdsDI,AcrDL,ADtEC,GCoEK,KDpED,CCsEC,CdqDG,Ea3HR,CCsES,CdqDG,Aa3HF,Kb2HE,AcrDG,IAAI,CAAd,EAAiB;AdqDV,AcpDZ,ADtEE,ICsEF,GAAG,GAAG,CAAC,CAAD,ADtEE,ECsEE,CAAJ,EAAO,CAAP,ADtEQ,CCsEd,EDtEiB,OAAO,KAAtB;Ab0HE,AcnDL,ADtEG,GCoEG,KdqDiC,CcnDjC,EDtEE,ECsEE,IDtEP,CAAY,CCsEC,IAAI,CAAd,ADtEe,ECsEE,GDtEG,IAAvB,EAA6B,IAA7B,EAAmC,QAAQ,IAAI,EAA/C,EAAmD,OAAO,MAAM,EAAhE;ACuEF,ADtEC,ICsED,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AdoDM,AcnDP,GAFM,MAEA,CdmDC,EAAE,CAAC,AcnDA,MAAM,IAAI,CAAd,EAAiB,MdmDhB,CAAuB,SAAvB,EAAkC,QAAlC;AACA,AcnDN,ADtEA,ICsEA,GAAG,CDtEC,EbyHE,AcnDA,CAAC,CAAD,ADtEE,ECsEE,CAAJ,EAAO,ADtEA,CCsEP,CAAN,IdmDmB,CAAC,CazHpB,CbyHmB,CAAb,AazHiB;Ab0HlB,AcnDN,ADtEG,GCoEG,MAEA,EDtEE,ECsEE,IDtEP,CAAY,CCsEC,ADtEA,ICsEI,CAAd,ADtEe,CAAC,CCsEC,IDtEF,CAAlB,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","file":"worker.a6ec0002.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst throwSet = new WeakSet();\n\n// prettier-ignore\ntype Promisify<T> =\n  T extends { [proxyMarker]: boolean }\n    ? Promise<Remote<T>>\n    : T extends (...args: infer R1) => infer R2\n        ? (...args: R1) => Promisify<R2>\n        : Promise<T>;\n\n// prettier-ignore\nexport type Remote<T> =\n  (\n    T extends (...args: infer R1) => infer R2\n      ? (...args: R1) => Promisify<R2>\n      : unknown\n  ) &\n  (\n    T extends { new (...args: infer R1): infer R2 }\n      ? { new (...args: R1): Promise<Remote<R2>> }\n      : unknown\n  ) &\n  (\n    T extends Object\n      ? { [K in keyof T]: Remote<T[K]> }\n      : unknown\n  ) &\n  (\n    T extends string\n      ? Promise<string>\n      : unknown\n  ) &\n  (\n    T extends number\n      ? Promise<number>\n      : unknown\n  ) &\n  (\n    T extends boolean\n      ? Promise<boolean>\n      : unknown\n  ) & {\n    [createEndpoint]: MessagePort;\n    [releaseProxy]: () => void;\n  };\n\ndeclare var x: Remote<number>;\n\ndeclare var y: PromiseLike<number>;\n\nexport interface TransferHandler {\n  canHandle(obj: any): boolean;\n  serialize(obj: any): [any, Transferable[]];\n  deserialize(obj: any): any;\n}\n\nexport const transferHandlers = new Map<string, TransferHandler>([\n  [\n    \"proxy\",\n    {\n      canHandle: obj => obj && obj[proxyMarker],\n      serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n      },\n      deserialize: (port: MessagePort) => {\n        port.start();\n        return wrap(port);\n      }\n    }\n  ],\n  [\n    \"throw\",\n    {\n      canHandle: obj => throwSet.has(obj),\n      serialize(obj) {\n        const isError = obj instanceof Error;\n        let serialized = obj;\n        if (isError) {\n          serialized = {\n            isError,\n            message: obj.message,\n            stack: obj.stack\n          };\n        }\n        return [serialized, []];\n      },\n      deserialize(obj) {\n        if ((obj as any).isError) {\n          throw Object.assign(new Error(), obj);\n        }\n        throw obj;\n      }\n    }\n  ]\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message)\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (e) {\n      returnValue = e;\n      throwSet.add(e);\n    }\n    Promise.resolve(returnValue)\n      .catch(e => {\n        throwSet.add(e);\n        return e;\n      })\n      .then(returnValue => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function() {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map(p => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map(p => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map(p => p.toString()),\n          value\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    }\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & { [proxyMarker]: true } {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise(resolve => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import assert from 'assert';\n\nimport { inf } from '../constants';\nimport { Vector } from '../types';\n\nexport interface Fn {\n  readonly d: number;\n  readonly domain: number;\n  fn(x: Vector, y?: Vector): Vector;\n  sample(n: number, offset: number, limit: number): Generator<Vector>;\n}\n\nexport class CompositeFn implements Fn {\n  private readonly x: Vector;\n  private readonly y: Vector;\n  constructor(readonly fns: Fn[]) {\n    assert(fns.length, 'fns cannot be empty');\n\n    const length = Math.max(this.domainMax, this.dMax);\n    this.x = new Float32Array(length);\n    this.y = new Float32Array(length);\n  }\n\n  get first() {\n    return this.fns[0];\n  }\n\n  get last() {\n    return this.fns[this.fns.length - 1];\n  }\n\n  get domain() {\n    return this.first.domain;\n  }\n\n  get d() {\n    return this.last.d;\n  }\n\n  get domainMax() {\n    return this.fns.reduce((max, f) => Math.max(f.domain, max), 0);\n  }\n\n  get dMax() {\n    return this.fns.reduce((max, f) => Math.max(f.d, max), 0);\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { fns, d } = this;\n    const [first, ...rest] = fns;\n    if (fns.length == 0) return [];\n\n    for (const x of first.sample(n, offset, limit)) {\n      this.x.set(x);\n      if (rest.length) {\n        CompositeFn.apply(rest, this.x, this.y);\n      } else {\n        this.y.set(x);\n      }\n      yield this.y.subarray(0, d);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { fns, domain, d } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    this.x.set(x);\n    CompositeFn.apply(fns, this.x, this.y);\n    y.set(this.y.subarray(0, d));\n    return y;\n  };\n\n  private static apply = (fns: Fn[], x: Vector, y: Vector) => {\n    assert.equal(x.length, y.length);\n    for (const f of fns) {\n      f.fn(x.subarray(0, f.domain), y.subarray(0, f.d));\n      for (let i = 0; i < y.length; i++) {\n        if (!isFinite(y[i])) y[i] = Math.sign(y[i]) * inf;\n        if (isNaN(y[i])) y[i] = 0;\n      }\n      x.set(y);\n    }\n  };\n\n  static Builder = class {\n    private readonly fns: Fn[] = [];\n\n    get d() {\n      return this.last.d;\n    }\n\n    get last() {\n      return this.fns[this.fns.length - 1];\n    }\n\n    add = (fn: Fn) => {\n      const { fns, last } = this;\n      if (last && fn.domain !== last.d) {\n        throw new Error(\n          `Cannot add ${fn} to composite, because its domain is not ${last.d}`\n        );\n      }\n      fns.push(fn);\n      return this;\n    };\n\n    build = () => {\n      return new CompositeFn(this.fns);\n    };\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport { Fn } from '.';\n\nexport default class Interval implements Fn {\n  readonly domain: number;\n\n  constructor(readonly d: number, readonly a: number[], readonly b: number[]) {\n    assert.equal(a.length, d);\n    assert.equal(b.length, d);\n    this.domain = d;\n  }\n\n  static nPerLevel = (d: number, n: number) => {\n    return Math.round(Math.pow(n, 1 / d));\n  };\n\n  /**\n   * @param x A vector of length this.domain contained in the interval [0, 1].\n   * @returns A mapping of the vector into this interval.\n   */\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, a, b } = this;\n\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    for (let i = 0; i < d; i++) {\n      y[i] = a[i] + x[i] * (b[i] - a[i]);\n    }\n\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { d, fn } = this;\n    // b needs to be an integer or the shape is distorted\n    const b = Math.round(n ** (1 / d));\n    const x = new Float32Array(d);\n    for (let i = offset; i < limit; i++) {\n      for (let k = 0; k < d; k++) {\n        const exp = d - k - 1;\n        const n = Math.round(i / b ** exp);\n        x[k] = (n % b) / (b - 1);\n      }\n      yield fn(x);\n    }\n  };\n}\n","import { Vector } from '../types';\nimport Interval from './interval';\nimport { Fn } from '.';\n\nexport default class Lattice implements Fn {\n  private readonly interval: Interval;\n  readonly sample: (\n    n: number,\n    offset: number,\n    limit: number\n  ) => Generator<Float32Array>;\n\n  constructor(readonly d: number, readonly l: number) {\n    this.interval = new Interval(\n      d,\n      new Array(d).fill(-l / 2),\n      new Array(d).fill(l / 2)\n    );\n\n    this.sample = this.interval.sample;\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y?: Vector) => this.interval.fn(x, y);\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Fn } from '.';\n\nexport default class Cube implements Fn {\n  constructor(readonly d: number, readonly l: number) {}\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, l } = this;\n\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    for (let i = 0; i < d; i++) {\n      y[i] = l * (x[i] - 0.5);\n    }\n\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    // TODO: This algorithm produces lots of duplicate points.\n    // It looks good enough, but could be better.\n    const { d } = this;\n    const scale = 1 / d / 2;\n    const faceN = Math.round(n * scale);\n    const faceOffset = Math.round(offset * scale);\n    const faceSize = Math.round((limit - offset) * scale);\n    let count = 0;\n\n    for (let k = 0; k < d; k++) {\n      for (const sign of [1, -1]) {\n        const faceLimit = faceOffset + Math.min(faceSize, n - count);\n        yield* this.sampleFace(k, sign, faceN, faceOffset, faceLimit);\n        count += faceLimit - faceOffset;\n      }\n    }\n  };\n\n  private sampleFace = function*(\n    k: number,\n    sign: number,\n    n: number,\n    offset: number,\n    limit: number\n  ) {\n    const { d, l } = this;\n    const lattice = new Lattice(d - 1, l);\n    const lhalf = l / 2;\n\n    for (const y0 of lattice.sample(n, offset, limit)) {\n      const y = new Float32Array(d);\n      y.set(y0.subarray(0, k));\n      y.set(y0.subarray(k), k + 1);\n\n      y[k] = sign * lhalf;\n      yield y;\n    }\n  };\n}\n","import assert from 'assert';\n\nexport class Polar {\n  static from(\n    r: number,\n    phi: Float32Array,\n    y = new Float32Array(phi.length + 1)\n  ) {\n    assert.equal(y.length, phi.length + 1);\n\n    y[0] = r;\n    for (let i = 1; i < y.length; i++) {\n      const sin = Math.sin(phi[i - 1]);\n      const cos = Math.cos(phi[i - 1]);\n      y[i] = y[0] * sin;\n      y[0] *= cos;\n    }\n    return y;\n  }\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Polar } from './polar';\nimport { Fn } from '.';\n\nexport default class Sphere implements Fn {\n  private readonly root: Float32Array;\n\n  constructor(readonly d: number, private readonly r: number) {}\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2 * Math.PI);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, r } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    return Polar.from(r, phi, y);\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\n// This shape does not implement a torus. It used to,\n// but then I changed the way Rotator works, which\n// changed the way that the points of the sphere are\n// distributed, making the translation step behave incorrectly\n// Still makes a cool shape though, so keeping it\nexport default class FuckedUpTorus implements Fn {\n  private readonly sphere: Sphere;\n  private readonly circle: Sphere;\n\n  constructor(readonly d: number, readonly r: number, readonly t: number) {\n    this.sphere = new Sphere(d, t);\n    this.circle = new Sphere(2, r);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2 * Math.PI);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, sphere, circle } = this;\n    assert.equal(phi.length, domain);\n    assert.equal(y.length, d);\n    sphere.fn(phi, y);\n    const q = circle.fn(phi.subarray(d - 2));\n    y[0] += q[0];\n    y[d - 1] += q[1];\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Fn } from '.';\n\nexport default class Rotator implements Fn {\n  readonly r0: number;\n  readonly r1: number;\n\n  constructor(\n    readonly d: number,\n    readonly theta: number,\n    readonly d0: number,\n    readonly d1: number,\n    readonly f0: (theta: number) => number = Math.cos,\n    readonly f1: (theta: number) => number = Math.sin\n  ) {\n    this.r0 = f0(theta);\n    this.r1 = f1(theta);\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2);\n    for (const p of lattice.sample(n, offset, limit)) {\n      yield this.fn(p);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, d0, d1, r0, r1 } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    y.set(x);\n\n    const a = x[d0],\n      b = x[d1];\n    y[d0] = a * r0 - b * r1;\n    y[d1] = a * r1 + b * r0;\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Interval from './interval';\nimport { Polar } from './polar';\nimport { Fn } from '.';\n\nexport default class Spiral implements Fn {\n  constructor(\n    /**\n     * The dimension of the spiral.\n     */\n    readonly d: number,\n    /**\n     * The extent of curl of the spiral, i.e. the max angle.\n     */\n    readonly theta: number,\n    /**\n     * The factor by which the radius increases in each dimension.\n     */\n    readonly a: number[]\n  ) {\n    assert.equal(\n      a.length,\n      d,\n      `spiral: Expected a to be of dimension ${d}, but was ${a.length}`\n    );\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const interval = new Interval(\n      this.domain,\n      new Array(this.domain).fill(0),\n      new Array(this.domain).fill(1)\n    );\n\n    for (const x of interval.sample(n, offset, limit)) {\n      yield this.fn(x);\n    }\n  };\n\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, theta, a } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    const phi = x.map(xi => xi * theta);\n    Polar.from(1, phi, y);\n\n    y[0] *= a[0] * phi[0];\n    for (let i = 1; i < d; i++) {\n      y[i] *= a[i] * phi[i - 1];\n    }\n\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Fn } from '.';\n\nexport default class Stereo implements Fn {\n  private readonly fromTemp: Vector;\n  private readonly toTemp: Vector;\n\n  constructor(private readonly from: number, private readonly to: number) {\n    this.fromTemp = new Float32Array(Math.max(from, to));\n    this.toTemp = new Float32Array(Math.max(from, to));\n  }\n\n  get domain() {\n    return this.from;\n  }\n\n  get d() {\n    return this.to;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.to)) => {\n    let { from, to, fromTemp, toTemp } = this;\n    assert.equal(x.length, from);\n    assert.equal(y.length, to);\n\n    if (from === to) {\n      y.set(x);\n      return y;\n    }\n\n    fromTemp.set(x);\n\n    while (from < to) {\n      Stereo.up(fromTemp.subarray(0, from), toTemp.subarray(0, ++from));\n      fromTemp.set(toTemp);\n    }\n\n    while (from > to) {\n      Stereo.down(fromTemp.subarray(0, from), toTemp.subarray(0, --from));\n      fromTemp.set(toTemp);\n    }\n\n    y.set(toTemp.subarray(0, to));\n    return y;\n  };\n\n  static up = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length + 1);\n    const n2 = norm2(x);\n    const divisor = n2 + 1;\n    temp[0] = (n2 - 1) / divisor;\n    for (let i = 1; i <= x.length; i++) {\n      temp[i] = (2 * x[i - 1]) / divisor;\n    }\n  };\n\n  static down = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length - 1);\n    for (let i = 0; i < temp.length; i++) {\n      temp[i] = x[i + 1] / (1 - x[0]);\n    }\n  };\n}\n\nconst norm2 = (x: Vector) => {\n  let result = 0;\n  for (let i = 0; i < x.length; i++) {\n    result += x[i] * x[i];\n  }\n  return result;\n};\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport Rotator from './rotator';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\nexport default class Torus implements Fn {\n  constructor(readonly d: number, readonly r: Float32Array) {\n    assert(d > 2, `torus: expected d = ${d} > 2`);\n    assert(\n      r.length == this.domain,\n      `torus: expected r.length = ${r.length} == ${this.domain}`\n    );\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2 * Math.PI);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (theta: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, domain, r } = this;\n    const circle = new Sphere(2, r[0]);\n    circle.fn(theta.subarray(0, 1), y.subarray(0, 2));\n    for (let i = 1; i < domain; i++) {\n      y[0] += r[i];\n      const rotator = new Rotator(d, theta[i], i - 1, i + 1);\n      rotator.fn(y, y);\n    }\n    return y;\n  };\n}\n","export const pp = (a: any, p = 2) => JSON.stringify(a, null, p);\n","import { CompositeFn, Fn } from '../fn';\nimport Cube from '../fn/cube';\nimport FuckedUpTorus from '../fn/fucked_up_torus';\nimport Lattice from '../fn/lattice';\nimport Rotator from '../fn/rotator';\nimport Sphere from '../fn/sphere';\nimport Spiral from '../fn/spiral';\nimport Stereo from '../fn/stereo';\nimport Torus from '../fn/torus';\nimport { Scope } from '../params/scope';\nimport { pp } from '../pp';\nimport {\n  AccessNode,\n  ArithNode,\n  FnNode,\n  PipeNode,\n  Scalar,\n  StepNode,\n  Value\n} from './grammar.pegjs';\nimport { UnaryOperator } from './types';\n\ntype Resolution = {\n  n: number;\n  fn: CompositeFn;\n};\n\nfunction assert(cond: boolean, scope: Scope, msg: () => string) {\n  if (!cond) throw { message: msg(), scope };\n}\n\nexport class Resolver {\n  constructor(private readonly scope: Scope) {}\n\n  resolve(node: PipeNode): Resolution;\n  resolve(node: Scalar, hint: 'number'): number;\n  resolve(node: Scalar, hint: 'function'): Function;\n  resolve(node: Scalar): Value;\n  resolve(node: any, hint?: any): any {\n    let value;\n    switch (node.kind) {\n      case 'pipe':\n        value = this.resolvePipe(node);\n        break;\n      case 'arith':\n        value = this.resolveArith(node);\n        break;\n      case 'number':\n        value = node.value;\n        break;\n      case 'fn':\n        value = this.resolveFn(node);\n        break;\n      case 'access':\n        value = this.resolveAccess(node);\n        break;\n      case 'id':\n        value = this.resolveId(node.id);\n        break;\n      case 'paren':\n        value = this.resolve(node.scalar);\n        break;\n    }\n\n    if (hint) {\n      const actual = typeof value;\n      this.expect(actual === hint, node, `be a ${hint}`, `was ${actual}`);\n    }\n\n    if (hint === 'number') {\n      this.expect(!isNaN(value), node, 'be a number', 'was NaN');\n    }\n\n    return value;\n  }\n\n  private resolvePipe = (pipe: PipeNode): Resolution => {\n    const [head, ...tail] = pipe.steps;\n    const n = this.resolve(pipe.n, 'number');\n    this.expect(n > 0, 'n', 'be positive', `was ${n}`);\n\n    const fn = new CompositeFn.Builder().add(this.resolveStep(pipe.d0, head));\n\n    for (let i = 0; i < tail.length; i++) {\n      const step = tail[i];\n      const d0 = fn.d;\n      const d = ranges[step.type](d0);\n      fn.add(this.resolveStep(d, step));\n    }\n\n    return { n, fn: fn.build() };\n  };\n\n  private resolveStep = (d: number, { type, args }: StepNode): Fn => {\n    return funs[type](d, ...args.map(a => this.resolve(a)));\n  };\n\n  private resolveFn = ({ name, args }: FnNode): number => {\n    const fn = Math[name];\n    const type = typeof fn;\n    this.expect(\n      type === 'function',\n      name,\n      `resolve to a function`,\n      `was ${type}`\n    );\n    return fn(...args.map(a => this.resolve(a)));\n  };\n\n  private resolveAccess = ({ id, index }: AccessNode): number => {\n    const scope = this.scope;\n    const target = scope[id];\n    this.assert(target, () => `failed to resolve access target ${id}`);\n    if (index.kind === 'id' && index.id in target) {\n      // TODO works in practice, but not sure if corret\n      return target[index.id];\n    } else {\n      return target[this.resolve(index)];\n    }\n  };\n\n  private resolveId = (id: string): Value => {\n    let value;\n    if (id in this.scope) {\n      value = this.scope[id];\n    } else if (id in Math) {\n      value = Math[id];\n    } else {\n      const idu = id.toUpperCase();\n      if (idu in Math) value = Math[idu];\n    }\n\n    this.assert(value, () => `failed to resolve id ${id}`);\n\n    return value;\n  };\n\n  private resolveArith = ({ op, operands }: ArithNode) => {\n    const [a, b] = operands.map(a => this.resolve(a, 'number'));\n    return ops[op](a, b);\n  };\n\n  private isNodeDynamic = (node: Scalar): boolean => {\n    switch (node.kind) {\n      case 'fn':\n        return node.args.some(this.isNodeDynamic);\n      case 'id':\n        return typeof this.resolve(node) === 'number';\n      case 'arith':\n        return node.operands.some(this.isNodeDynamic);\n      default:\n        return false;\n    }\n  };\n\n  private assert(cond: boolean, msg: () => string) {\n    assert(cond, this.scope, msg);\n  }\n\n  private expect(cond: boolean, node: any, expected: string, actual: string) {\n    this.assert(\n      cond,\n      () => `Expected ${pp(node, 0)} to ${expected}, but ${actual}`\n    );\n  }\n}\n\nconst ops: { [op: string]: (a: number, b: number) => number } = {\n  '+': (a, b) => a + b,\n  '-': (a, b) => (b == null ? -a : a - b),\n  '*': (a, b) => a * b,\n  '/': (a, b) => a / b,\n  '**': (a, b) => a ** b,\n  '^': (a, b) => a ** b\n};\n\nconst funs: { [op: string]: (d: number, ...rest: any) => Fn } = {\n  cube: (d, l) => new Cube(d, l),\n  lattice: (d, l) => new Lattice(d, l),\n  sphere: (d, r: number) => new Sphere(d, r),\n  spiral: (d, theta, ...a: number[]) => new Spiral(d, theta, a),\n  torus: (d, ...r: number[]) => new Torus(d, new Float32Array(r)),\n  fucked_up_torus: (d, r: number, t: number) => new FuckedUpTorus(d, r, t),\n  rotate: (\n    d: number,\n    theta: number,\n    d0: number,\n    d1: number,\n    f0: UnaryOperator = Math.cos,\n    f1: UnaryOperator = Math.sin\n  ) => {\n    assert(\n      0 <= d0 && d0 < d,\n      null,\n      () => `rotate: Expected 0 <= d0 = ${d0} < d = ${d}`\n    );\n    assert(\n      0 <= d1 && d1 < d,\n      null,\n      () => `rotate: Expected 0 <= d1 = ${d1} < d = ${d}`\n    );\n    return new Rotator(d, theta, d0, d1, f0, f1);\n  },\n  stereo: (d, to) => new Stereo(d, to)\n};\n\ntype Funs = typeof funs;\n\ntype Ranges = {\n  [P in keyof Funs]: (domain: number) => number;\n};\n\nconst ranges: Ranges = {\n  cube: domain => domain,\n  lattice: domain => domain,\n  sphere: domain => domain + 1,\n  spiral: domain => domain + 1,\n  torus: domain => domain + 1,\n  fucked_up_torus: domain => domain + 1,\n  rotate: domain => domain,\n  r: domain => domain,\n  stereo: domain => domain\n};\n","import assert from 'assert';\nimport { CompositeFn } from '../fn';\nimport { HSV } from '../params';\nimport { Scope } from '../params/scope';\nimport { Vector } from '../types';\nimport { PipeNode, Scalar } from './grammar.pegjs';\nimport { Resolver } from './resolver';\nimport { Chunk } from './types';\n\nconst { abs, min, sign } = Math;\n\nexport class EvaluationError extends Error {\n  constructor(readonly context: string, readonly cause: Error) {\n    super(cause?.message);\n  }\n\n  get name() {\n    return 'EvaluationError';\n  }\n}\n\nexport class Evaluator {\n  private readonly n: number;\n  private readonly fn: CompositeFn;\n  private readonly offset: number;\n  private readonly size: number;\n  private readonly resolver: Resolver;\n\n  constructor(\n    private readonly scope: Scope,\n    ast: PipeNode,\n    private readonly hsv: HSV,\n    chunk: Chunk\n  ) {\n    this.resolver = new Resolver(scope);\n    const { n, fn } = this.resolvePipe(ast);\n    const offset = chunk.offset;\n    const size = chunk.size;\n    const limit = offset + size;\n    assert(offset >= 0, `offset must be non-negative; got ${offset}`);\n    assert(\n      limit <= n,\n      `offset + size must be <= n; got ${offset} + ${size} = ${limit} > ${n}`\n    );\n\n    this.n = n;\n    this.fn = fn;\n    this.offset = offset;\n    this.size = limit - offset;\n  }\n\n  private get d() {\n    return this.fn.d;\n  }\n\n  private resolvePipe(node: PipeNode) {\n    try {\n      return this.resolver.resolve(node);\n    } catch ({ message, scope }) {\n      throw { context: 'pipe', message, scope };\n    }\n  }\n\n  private resolveNumber(context: string, node: Scalar) {\n    try {\n      return this.resolver.resolve(node, 'number');\n    } catch ({ message, scope }) {\n      throw { context, message, scope };\n    }\n  }\n\n  iterate = () => {\n    const position = this.computePosition();\n    const color = this.computeColor(position);\n\n    return {\n      d: this.d,\n      position,\n      color\n    };\n  };\n\n  private computePosition = () => {\n    const { fn, n, d, offset, size } = this;\n    const position = new Float32Array(d * size);\n\n    let i = 0;\n    for (const y of fn.sample(n, offset, offset + size)) {\n      position.set(y, d * i++);\n    }\n\n    return position;\n  };\n\n  private computeColor = (position: Vector) => {\n    const { d, hsv, size } = this;\n    const color = new Float32Array(3 * size);\n    const { extent } = this.scope;\n\n    for (let i = 0; i < size; i++) {\n      const p = position.subarray(i * d, (i + 1) * d);\n      this.scope.p = p.map((pk, k) => {\n        const m = extent[k];\n        return m ? sign(pk) * min(1, abs(pk) / m) : 0;\n      });\n      this.scope.i = i;\n      const h = 360 * this.resolveNumber('h', hsv.h);\n      const s = this.resolveNumber('s', hsv.s);\n      const v = this.resolveNumber('v', hsv.v);\n      const rgb = hsv2rgb(h, s, v);\n\n      color.set(rgb, i * 3);\n    }\n\n    return color;\n  };\n}\n\nfunction hsv2rgb(h: number, s: number, v: number): [number, number, number] {\n  // source: https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB\n  h = Math.max(0, Math.min(360, h));\n  s = Math.max(0, Math.min(1, s));\n  v = Math.max(0, Math.min(1, v));\n\n  const hprime = h / 60;\n  const c = v * s;\n  const x = c * (1 - abs((hprime % 2) - 1));\n  const m = v - c;\n  let rgb: [number, number, number];\n\n  if (hprime <= 1) {\n    rgb = [c, x, 0];\n  } else if (hprime <= 2) {\n    rgb = [x, c, 0];\n  } else if (hprime <= 3) {\n    rgb = [0, c, x];\n  } else if (hprime <= 4) {\n    rgb = [0, x, c];\n  } else if (hprime <= 5) {\n    rgb = [x, 0, c];\n  } else if (hprime <= 6) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  rgb.forEach((vi, i) => (rgb[i] = vi + m));\n\n  return rgb;\n}\n","import { expose } from 'comlink';\n\nimport { Params } from '../params';\nimport { Evaluator } from './evaluator';\nimport { Chunk } from './types';\n\nconst worker = {\n  iterate: (params: Params, chunk: Chunk) => {\n    const evaluator = new Evaluator(\n      params.scope,\n      params.pipe,\n      params.hsv,\n      chunk\n    );\n    return evaluator.iterate();\n  }\n};\n\nexport type PipeWorker = typeof worker;\n\nexpose(worker);\n"]}