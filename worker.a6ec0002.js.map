{"version":3,"sources":["../../src/comlink.ts","fn/index.ts","fn/interval.ts","fn/lattice.ts","fn/cube.ts","fn/polar.ts","fn/sphere.ts","fn/fucked_up_torus.ts","fn/rotator.ts","fn/spiral.ts","fn/stereo.ts","fn/torus.ts","pp.ts","pipe/resolver.ts","pipe/evaluator.ts","pipe/worker.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"worker.a6ec0002.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst throwSet = new WeakSet();\n\n// prettier-ignore\ntype Promisify<T> =\n  T extends { [proxyMarker]: boolean }\n    ? Promise<Remote<T>>\n    : T extends (...args: infer R1) => infer R2\n        ? (...args: R1) => Promisify<R2>\n        : Promise<T>;\n\n// prettier-ignore\nexport type Remote<T> =\n  (\n    T extends (...args: infer R1) => infer R2\n      ? (...args: R1) => Promisify<R2>\n      : unknown\n  ) &\n  (\n    T extends { new (...args: infer R1): infer R2 }\n      ? { new (...args: R1): Promise<Remote<R2>> }\n      : unknown\n  ) &\n  (\n    T extends Object\n      ? { [K in keyof T]: Remote<T[K]> }\n      : unknown\n  ) &\n  (\n    T extends string\n      ? Promise<string>\n      : unknown\n  ) &\n  (\n    T extends number\n      ? Promise<number>\n      : unknown\n  ) &\n  (\n    T extends boolean\n      ? Promise<boolean>\n      : unknown\n  ) & {\n    [createEndpoint]: MessagePort;\n    [releaseProxy]: () => void;\n  };\n\ndeclare var x: Remote<number>;\n\ndeclare var y: PromiseLike<number>;\n\nexport interface TransferHandler {\n  canHandle(obj: any): boolean;\n  serialize(obj: any): [any, Transferable[]];\n  deserialize(obj: any): any;\n}\n\nexport const transferHandlers = new Map<string, TransferHandler>([\n  [\n    \"proxy\",\n    {\n      canHandle: obj => obj && obj[proxyMarker],\n      serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n      },\n      deserialize: (port: MessagePort) => {\n        port.start();\n        return wrap(port);\n      }\n    }\n  ],\n  [\n    \"throw\",\n    {\n      canHandle: obj => throwSet.has(obj),\n      serialize(obj) {\n        const isError = obj instanceof Error;\n        let serialized = obj;\n        if (isError) {\n          serialized = {\n            isError,\n            message: obj.message,\n            stack: obj.stack\n          };\n        }\n        return [serialized, []];\n      },\n      deserialize(obj) {\n        if ((obj as any).isError) {\n          throw Object.assign(new Error(), obj);\n        }\n        throw obj;\n      }\n    }\n  ]\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message)\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (e) {\n      returnValue = e;\n      throwSet.add(e);\n    }\n    Promise.resolve(returnValue)\n      .catch(e => {\n        throwSet.add(e);\n        return e;\n      })\n      .then(returnValue => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function() {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map(p => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map(p => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map(p => p.toString()),\n          value\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    }\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & { [proxyMarker]: true } {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise(resolve => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import assert from 'assert';\n\nimport { inf } from '../constants';\nimport { Vector } from '../types';\n\nexport interface Fn {\n  readonly d: number;\n  readonly domain: number;\n  fn(x: Vector, y?: Vector): Vector;\n  sample(n: number, offset: number, limit: number): Generator<Vector>;\n}\n\nexport class CompositeFn implements Fn {\n  private readonly x: Vector;\n  private readonly y: Vector;\n  constructor(readonly fns: Fn[]) {\n    assert(fns.length, 'fns cannot be empty');\n\n    const length = Math.max(this.domainMax, this.dMax);\n    this.x = new Float32Array(length);\n    this.y = new Float32Array(length);\n  }\n\n  get first() {\n    return this.fns[0];\n  }\n\n  get last() {\n    return this.fns[this.fns.length - 1];\n  }\n\n  get domain() {\n    return this.first.domain;\n  }\n\n  get d() {\n    return this.last.d;\n  }\n\n  get domainMax() {\n    return this.fns.reduce((max, f) => Math.max(f.domain, max), 0);\n  }\n\n  get dMax() {\n    return this.fns.reduce((max, f) => Math.max(f.d, max), 0);\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { fns, d } = this;\n    const [first, ...rest] = fns;\n    if (fns.length == 0) return [];\n\n    for (const x of first.sample(n, offset, limit)) {\n      this.x.set(x);\n      if (rest.length) {\n        CompositeFn.apply(rest, this.x, this.y);\n      } else {\n        this.y.set(x);\n      }\n      yield this.y.subarray(0, d);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { fns, domain, d } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    this.x.set(x);\n    CompositeFn.apply(fns, this.x, this.y);\n    y.set(this.y.subarray(0, d));\n    return y;\n  };\n\n  private static apply = (fns: Fn[], x: Vector, y: Vector) => {\n    assert.equal(x.length, y.length);\n    for (const f of fns) {\n      f.fn(x.subarray(0, f.domain), y.subarray(0, f.d));\n      for (let i = 0; i < y.length; i++) {\n        if (!isFinite(y[i])) y[i] = Math.sign(y[i]) * inf;\n        if (isNaN(y[i])) y[i] = 0;\n      }\n      x.set(y);\n    }\n  };\n\n  static Builder = class {\n    private readonly fns: Fn[] = [];\n\n    get d() {\n      return this.last.d;\n    }\n\n    get last() {\n      return this.fns[this.fns.length - 1];\n    }\n\n    add = (fn: Fn) => {\n      const { fns, last } = this;\n      if (last && fn.domain !== last.d) {\n        throw new Error(\n          `Cannot add ${fn} to composite, because its domain is not ${last.d}`\n        );\n      }\n      fns.push(fn);\n      return this;\n    };\n\n    build = () => {\n      return new CompositeFn(this.fns);\n    };\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport { Fn } from '.';\n\nexport default class Interval implements Fn {\n  readonly domain: number;\n\n  constructor(readonly d: number, readonly a: number[], readonly b: number[]) {\n    assert.equal(a.length, d);\n    assert.equal(b.length, d);\n    this.domain = d;\n  }\n\n  static nPerLevel = (d: number, n: number) => {\n    return Math.round(Math.pow(n, 1 / d));\n  };\n\n  /**\n   * @param x A vector of length this.domain contained in the interval [0, 1].\n   * @returns A mapping of the vector into this interval.\n   */\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, a, b } = this;\n\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    for (let i = 0; i < d; i++) {\n      y[i] = a[i] + x[i] * (b[i] - a[i]);\n    }\n\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { d, fn } = this;\n    // b needs to be an integer or the shape is distorted\n    const b = Math.round(n ** (1 / d));\n    const x = new Float32Array(d);\n    for (let i = offset; i < limit; i++) {\n      for (let k = 0; k < d; k++) {\n        const exp = d - k - 1;\n        const n = Math.round(i / b ** exp);\n        x[k] = (n % b) / (b - 1);\n      }\n      yield fn(x);\n    }\n  };\n}\n","import { Vector } from '../types';\nimport Interval from './interval';\nimport { Fn } from '.';\n\nexport default class Lattice implements Fn {\n  private readonly interval: Interval;\n  readonly sample: (\n    n: number,\n    offset: number,\n    limit: number\n  ) => Generator<Float32Array>;\n\n  constructor(readonly d: number, readonly l: number) {\n    this.interval = new Interval(\n      d,\n      new Array(d).fill(-l / 2),\n      new Array(d).fill(l / 2)\n    );\n\n    this.sample = this.interval.sample;\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y?: Vector) => this.interval.fn(x, y);\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Fn } from '.';\n\nexport default class Cube implements Fn {\n  constructor(readonly d: number, readonly l: number) {}\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, l } = this;\n\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    for (let i = 0; i < d; i++) {\n      y[i] = l * (x[i] - 0.5);\n    }\n\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    // TODO: This algorithm produces lots of duplicate points.\n    // It looks good enough, but could be better.\n    const { d } = this;\n    const scale = 1 / d / 2;\n    const faceN = Math.round(n * scale);\n    const faceOffset = Math.round(offset * scale);\n    const faceSize = Math.round((limit - offset) * scale);\n    let count = 0;\n\n    for (let k = 0; k < d; k++) {\n      for (const sign of [1, -1]) {\n        const faceLimit = faceOffset + Math.min(faceSize, n - count);\n        yield* this.sampleFace(k, sign, faceN, faceOffset, faceLimit);\n        count += faceLimit - faceOffset;\n      }\n    }\n  };\n\n  private sampleFace = function*(\n    k: number,\n    sign: number,\n    n: number,\n    offset: number,\n    limit: number\n  ) {\n    const { d, l } = this;\n    const lattice = new Lattice(d - 1, l);\n    const lhalf = l / 2;\n\n    for (const y0 of lattice.sample(n, offset, limit)) {\n      const y = new Float32Array(d);\n      y.set(y0.subarray(0, k));\n      y.set(y0.subarray(k), k + 1);\n\n      y[k] = sign * lhalf;\n      yield y;\n    }\n  };\n}\n","import assert from 'assert';\n\nexport class Polar {\n  static from(\n    r: number,\n    phi: Float32Array,\n    y = new Float32Array(phi.length + 1)\n  ) {\n    assert.equal(y.length, phi.length + 1);\n\n    y[0] = r;\n    for (let i = 1; i < y.length; i++) {\n      const sin = Math.sin(phi[i - 1]);\n      const cos = Math.cos(phi[i - 1]);\n      y[i] = y[0] * sin;\n      y[0] *= cos;\n    }\n    return y;\n  }\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Polar } from './polar';\nimport { Fn } from '.';\n\nexport default class Sphere implements Fn {\n  private readonly root: Float32Array;\n\n  constructor(readonly d: number, private readonly r: number) {}\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2 * Math.PI);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, r } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    return Polar.from(r, phi, y);\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\n// This shape does not implement a torus. It used to,\n// but then I changed the way Rotator works, which\n// changed the way that the points of the sphere are\n// distributed, making the translation step behave incorrectly\n// Still makes a cool shape though, so keeping it\nexport default class FuckedUpTorus implements Fn {\n  private readonly sphere: Sphere;\n  private readonly circle: Sphere;\n\n  constructor(readonly d: number, readonly r: number, readonly t: number) {\n    this.sphere = new Sphere(d, t);\n    this.circle = new Sphere(2, r);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2 * Math.PI);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, sphere, circle } = this;\n    assert.equal(phi.length, domain);\n    assert.equal(y.length, d);\n    sphere.fn(phi, y);\n    const q = circle.fn(phi.subarray(d - 2));\n    y[0] += q[0];\n    y[d - 1] += q[1];\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Fn } from '.';\n\nexport default class Rotator implements Fn {\n  readonly r0: number;\n  readonly r1: number;\n\n  constructor(\n    readonly d: number,\n    readonly theta: number,\n    readonly d0: number,\n    readonly d1: number,\n    readonly f0: (theta: number) => number = Math.cos,\n    readonly f1: (theta: number) => number = Math.sin\n  ) {\n    this.r0 = f0(theta);\n    this.r1 = f1(theta);\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2);\n    for (const p of lattice.sample(n, offset, limit)) {\n      yield this.fn(p);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, d0, d1, r0, r1 } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    y.set(x);\n\n    const a = x[d0],\n      b = x[d1];\n    y[d0] = a * r0 - b * r1;\n    y[d1] = a * r1 + b * r0;\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Interval from './interval';\nimport { Polar } from './polar';\nimport { Fn } from '.';\n\nexport default class Spiral implements Fn {\n  constructor(\n    /**\n     * The dimension of the spiral.\n     */\n    readonly d: number,\n    /**\n     * The extent of curl of the spiral, i.e. the max angle.\n     */\n    readonly theta: number,\n    /**\n     * The factor by which the radius increases in each dimension.\n     */\n    readonly a: number[]\n  ) {\n    assert.equal(\n      a.length,\n      d,\n      `spiral: Expected a to be of dimension ${d}, but was ${a.length}`\n    );\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const interval = new Interval(\n      this.domain,\n      new Array(this.domain).fill(0),\n      new Array(this.domain).fill(1)\n    );\n\n    for (const x of interval.sample(n, offset, limit)) {\n      yield this.fn(x);\n    }\n  };\n\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, theta, a } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    const phi = x.map(xi => xi * theta);\n    Polar.from(1, phi, y);\n\n    y[0] *= a[0] * phi[0];\n    for (let i = 1; i < d; i++) {\n      y[i] *= a[i] * phi[i - 1];\n    }\n\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport { Fn } from '.';\n\nexport default class Stereo implements Fn {\n  private readonly fromTemp: Vector;\n  private readonly toTemp: Vector;\n\n  constructor(private readonly from: number, private readonly to: number) {\n    this.fromTemp = new Float32Array(Math.max(from, to));\n    this.toTemp = new Float32Array(Math.max(from, to));\n  }\n\n  get domain() {\n    return this.from;\n  }\n\n  get d() {\n    return this.to;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.to)) => {\n    let { from, to, fromTemp, toTemp } = this;\n    assert.equal(x.length, from);\n    assert.equal(y.length, to);\n\n    if (from === to) {\n      y.set(x);\n      return y;\n    }\n\n    fromTemp.set(x);\n\n    while (from < to) {\n      Stereo.up(fromTemp.subarray(0, from), toTemp.subarray(0, ++from));\n      fromTemp.set(toTemp);\n    }\n\n    while (from > to) {\n      Stereo.down(fromTemp.subarray(0, from), toTemp.subarray(0, --from));\n      fromTemp.set(toTemp);\n    }\n\n    y.set(toTemp.subarray(0, to));\n    return y;\n  };\n\n  static up = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length + 1);\n    const n2 = norm2(x);\n    const divisor = n2 + 1;\n    temp[0] = (n2 - 1) / divisor;\n    for (let i = 1; i <= x.length; i++) {\n      temp[i] = (2 * x[i - 1]) / divisor;\n    }\n  };\n\n  static down = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length - 1);\n    for (let i = 0; i < temp.length; i++) {\n      temp[i] = x[i + 1] / (1 - x[0]);\n    }\n  };\n}\n\nconst norm2 = (x: Vector) => {\n  let result = 0;\n  for (let i = 0; i < x.length; i++) {\n    result += x[i] * x[i];\n  }\n  return result;\n};\n","import assert from 'assert';\n\nimport { Vector } from '../types';\nimport Lattice from './lattice';\nimport Rotator from './rotator';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\nexport default class Torus implements Fn {\n  constructor(readonly d: number, readonly r: Float32Array) {\n    assert(d > 2, `torus: expected d = ${d} > 2`);\n    assert(\n      r.length == this.domain,\n      `torus: expected r.length = ${r.length} == ${this.domain}`\n    );\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const lattice = new Lattice(this.domain, 2 * Math.PI);\n    for (const phi of lattice.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (theta: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, domain, r } = this;\n    const circle = new Sphere(2, r[0]);\n    circle.fn(theta.subarray(0, 1), y.subarray(0, 2));\n    for (let i = 1; i < domain; i++) {\n      y[0] += r[i];\n      const rotator = new Rotator(d, theta[i], i - 1, i + 1);\n      rotator.fn(y, y);\n    }\n    return y;\n  };\n}\n","export const pp = (a: any, p = 2) => JSON.stringify(a, null, p);\n","import { CompositeFn, Fn } from '../fn';\nimport Cube from '../fn/cube';\nimport FuckedUpTorus from '../fn/fucked_up_torus';\nimport Lattice from '../fn/lattice';\nimport Rotator from '../fn/rotator';\nimport Sphere from '../fn/sphere';\nimport Spiral from '../fn/spiral';\nimport Stereo from '../fn/stereo';\nimport Torus from '../fn/torus';\nimport { Scope } from '../params/scope';\nimport { pp } from '../pp';\nimport {\n  AccessNode,\n  ArithNode,\n  FnNode,\n  PipeNode,\n  Scalar,\n  StepNode,\n  Value\n} from './grammar.pegjs';\nimport { UnaryOperator } from './types';\n\ntype Resolution = {\n  n: number;\n  fn: CompositeFn;\n};\n\nfunction assert(cond: boolean, scope: Scope, msg: () => string) {\n  if (!cond) throw { message: msg(), scope };\n}\n\nexport class Resolver {\n  constructor(private readonly scope: Scope) {}\n\n  resolve(node: PipeNode): Resolution;\n  resolve(node: Scalar, hint: 'number'): number;\n  resolve(node: Scalar, hint: 'function'): Function;\n  resolve(node: Scalar): Value;\n  resolve(node: any, hint?: any): any {\n    let value;\n    switch (node.kind) {\n      case 'pipe':\n        value = this.resolvePipe(node);\n        break;\n      case 'arith':\n        value = this.resolveArith(node);\n        break;\n      case 'number':\n        value = node.value;\n        break;\n      case 'fn':\n        value = this.resolveFn(node);\n        break;\n      case 'access':\n        value = this.resolveAccess(node);\n        break;\n      case 'id':\n        value = this.resolveId(node.id);\n        break;\n      case 'paren':\n        value = this.resolve(node.scalar);\n        break;\n    }\n\n    if (hint) {\n      const actual = typeof value;\n      this.expect(actual === hint, node, `be a ${hint}`, `was ${actual}`);\n    }\n\n    if (hint === 'number') {\n      this.expect(!isNaN(value), node, 'be a number', 'was NaN');\n    }\n\n    return value;\n  }\n\n  private resolvePipe = (pipe: PipeNode): Resolution => {\n    const [head, ...tail] = pipe.steps;\n    const n = this.resolve(pipe.n, 'number');\n    this.expect(n > 0, 'n', 'be positive', `was ${n}`);\n\n    const fn = new CompositeFn.Builder().add(this.resolveStep(pipe.d0, head));\n\n    for (let i = 0; i < tail.length; i++) {\n      const step = tail[i];\n      const d0 = fn.d;\n      const d = ranges[step.type](d0);\n      fn.add(this.resolveStep(d, step));\n    }\n\n    return { n, fn: fn.build() };\n  };\n\n  private resolveStep = (d: number, { type, args }: StepNode): Fn => {\n    return funs[type](d, ...args.map(a => this.resolve(a)));\n  };\n\n  private resolveFn = ({ name, args }: FnNode): number => {\n    const fn = Math[name];\n    const type = typeof fn;\n    this.expect(\n      type === 'function',\n      name,\n      `resolve to a function`,\n      `was ${type}`\n    );\n    return fn(...args.map(a => this.resolve(a)));\n  };\n\n  private resolveAccess = ({ id, index }: AccessNode): number => {\n    const scope = this.scope;\n    const target = scope[id];\n    this.assert(target, () => `failed to resolve access target ${id}`);\n    if (index.kind === 'id' && index.id in target) {\n      // TODO works in practice, but not sure if corret\n      return target[index.id];\n    } else {\n      return target[this.resolve(index)];\n    }\n  };\n\n  private resolveId = (id: string): Value => {\n    let value;\n    if (id in this.scope) {\n      value = this.scope[id];\n    } else if (id in Math) {\n      value = Math[id];\n    } else {\n      const idu = id.toUpperCase();\n      if (idu in Math) value = Math[idu];\n    }\n\n    this.assert(value, () => `failed to resolve id ${id}`);\n\n    return value;\n  };\n\n  private resolveArith = ({ op, operands }: ArithNode) => {\n    const [a, b] = operands.map(a => this.resolve(a, 'number'));\n    return ops[op](a, b);\n  };\n\n  private isNodeDynamic = (node: Scalar): boolean => {\n    switch (node.kind) {\n      case 'fn':\n        return node.args.some(this.isNodeDynamic);\n      case 'id':\n        return typeof this.resolve(node) === 'number';\n      case 'arith':\n        return node.operands.some(this.isNodeDynamic);\n      default:\n        return false;\n    }\n  };\n\n  private assert(cond: boolean, msg: () => string) {\n    assert(cond, this.scope, msg);\n  }\n\n  private expect(cond: boolean, node: any, expected: string, actual: string) {\n    this.assert(\n      cond,\n      () => `Expected ${pp(node, 0)} to ${expected}, but ${actual}`\n    );\n  }\n}\n\nconst ops: { [op: string]: (a: number, b: number) => number } = {\n  '+': (a, b) => a + b,\n  '-': (a, b) => (b == null ? -a : a - b),\n  '*': (a, b) => a * b,\n  '/': (a, b) => a / b,\n  '**': (a, b) => a ** b,\n  '^': (a, b) => a ** b\n};\n\nconst funs: { [op: string]: (d: number, ...rest: any) => Fn } = {\n  cube: (d, l) => new Cube(d, l),\n  lattice: (d, l) => new Lattice(d, l),\n  sphere: (d, r: number) => new Sphere(d, r),\n  spiral: (d, theta, ...a: number[]) => new Spiral(d, theta, a),\n  torus: (d, ...r: number[]) => new Torus(d, new Float32Array(r)),\n  fucked_up_torus: (d, r: number, t: number) => new FuckedUpTorus(d, r, t),\n  rotate: (\n    d: number,\n    theta: number,\n    d0: number,\n    d1: number,\n    f0: UnaryOperator = Math.cos,\n    f1: UnaryOperator = Math.sin\n  ) => {\n    assert(\n      0 <= d0 && d0 < d,\n      null,\n      () => `rotate: Expected 0 <= d0 = ${d0} < d = ${d}`\n    );\n    assert(\n      0 <= d1 && d1 < d,\n      null,\n      () => `rotate: Expected 0 <= d1 = ${d1} < d = ${d}`\n    );\n    return new Rotator(d, theta, d0, d1, f0, f1);\n  },\n  stereo: (d, to) => new Stereo(d, to)\n};\n\ntype Funs = typeof funs;\n\ntype Ranges = {\n  [P in keyof Funs]: (domain: number) => number;\n};\n\nconst ranges: Ranges = {\n  cube: domain => domain,\n  lattice: domain => domain,\n  sphere: domain => domain + 1,\n  spiral: domain => domain + 1,\n  torus: domain => domain + 1,\n  fucked_up_torus: domain => domain + 1,\n  rotate: domain => domain,\n  r: domain => domain,\n  stereo: domain => domain\n};\n","import assert from 'assert';\nimport { CompositeFn } from '../fn';\nimport { HSV } from '../params';\nimport { Scope } from '../params/scope';\nimport { Vector } from '../types';\nimport { PipeNode, Scalar } from './grammar.pegjs';\nimport { Resolver } from './resolver';\nimport { Chunk } from './types';\n\nconst { abs, min, sign } = Math;\n\nexport class EvaluationError extends Error {\n  constructor(readonly context: string, readonly cause: Error) {\n    super(cause?.message);\n  }\n\n  get name() {\n    return 'EvaluationError';\n  }\n}\n\nexport class Evaluator {\n  private readonly n: number;\n  private readonly fn: CompositeFn;\n  private readonly offset: number;\n  private readonly size: number;\n  private readonly resolver: Resolver;\n\n  constructor(\n    private readonly scope: Scope,\n    ast: PipeNode,\n    private readonly hsv: HSV,\n    chunk: Chunk\n  ) {\n    this.resolver = new Resolver(scope);\n    const { n, fn } = this.resolvePipe(ast);\n    const offset = chunk.offset;\n    const size = chunk.size;\n    const limit = offset + size;\n    assert(offset >= 0, `offset must be non-negative; got ${offset}`);\n    assert(\n      limit <= n,\n      `offset + size must be <= n; got ${offset} + ${size} = ${limit} > ${n}`\n    );\n\n    this.n = n;\n    this.fn = fn;\n    this.offset = offset;\n    this.size = limit - offset;\n  }\n\n  private get d() {\n    return this.fn.d;\n  }\n\n  private resolvePipe(node: PipeNode) {\n    try {\n      return this.resolver.resolve(node);\n    } catch ({ message, scope }) {\n      throw { context: 'pipe', message, scope };\n    }\n  }\n\n  private resolveNumber(context: string, node: Scalar) {\n    try {\n      return this.resolver.resolve(node, 'number');\n    } catch ({ message, scope }) {\n      throw { context, message, scope };\n    }\n  }\n\n  iterate = () => {\n    const position = this.computePosition();\n    const color = this.computeColor(position);\n\n    return {\n      d: this.d,\n      position,\n      color\n    };\n  };\n\n  private computePosition = () => {\n    const { fn, n, d, offset, size } = this;\n    const position = new Float32Array(d * size);\n\n    let i = 0;\n    for (const y of fn.sample(n, offset, offset + size)) {\n      position.set(y, d * i++);\n    }\n\n    return position;\n  };\n\n  private computeColor = (position: Vector) => {\n    const { d, hsv, size } = this;\n    const color = new Float32Array(3 * size);\n    const { extent } = this.scope;\n\n    for (let i = 0; i < size; i++) {\n      const p = position.subarray(i * d, (i + 1) * d);\n      this.scope.p = p.map((pk, k) => {\n        const m = extent[k];\n        return m ? sign(pk) * min(1, abs(pk) / m) : 0;\n      });\n      this.scope.i = i;\n      const h = 360 * this.resolveNumber('h', hsv.h);\n      const s = this.resolveNumber('s', hsv.s);\n      const v = this.resolveNumber('v', hsv.v);\n      const rgb = hsv2rgb(h, s, v);\n\n      color.set(rgb, i * 3);\n    }\n\n    return color;\n  };\n}\n\nfunction hsv2rgb(h: number, s: number, v: number): [number, number, number] {\n  // source: https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB\n  h = Math.max(0, Math.min(360, h));\n  s = Math.max(0, Math.min(1, s));\n  v = Math.max(0, Math.min(1, v));\n\n  const hprime = h / 60;\n  const c = v * s;\n  const x = c * (1 - abs((hprime % 2) - 1));\n  const m = v - c;\n  let rgb: [number, number, number];\n\n  if (hprime <= 1) {\n    rgb = [c, x, 0];\n  } else if (hprime <= 2) {\n    rgb = [x, c, 0];\n  } else if (hprime <= 3) {\n    rgb = [0, c, x];\n  } else if (hprime <= 4) {\n    rgb = [0, x, c];\n  } else if (hprime <= 5) {\n    rgb = [x, 0, c];\n  } else if (hprime <= 6) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  rgb.forEach((vi, i) => (rgb[i] = vi + m));\n\n  return rgb;\n}\n","import { expose } from 'comlink';\n\nimport { Params } from '../params';\nimport { Evaluator } from './evaluator';\nimport { Chunk } from './types';\n\nconst worker = {\n  iterate: (params: Params, chunk: Chunk) => {\n    const evaluator = new Evaluator(\n      params.scope,\n      params.pipe,\n      params.hsv,\n      chunk\n    );\n    return evaluator.iterate();\n  }\n};\n\nexport type PipeWorker = typeof worker;\n\nexpose(worker);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}