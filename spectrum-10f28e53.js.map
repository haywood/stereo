{"version":3,"file":"spectrum-10f28e53.js","sources":["../src/audio/constants.ts","../src/audio/spectrum.ts"],"sourcesContent":["import { Audio } from './types';\n\n/**\n * This defines the placeholder used for power and chroma when audio is not enabled.\n */\nexport const AUDIO_PLACEHOLDER: Audio = {\n  hue: 0.5,\n  onset: 1,\n  power: 1,\n  pitch: 0.5,\n  tempo: 0.5\n};\n\nexport const chromaCount = 12;\nexport const octaveMin = 0;\nexport const octaveMax = 8;\nexport const octaveCount = octaveMax - octaveMin;\nexport const quantumSize = 128;\nexport const binCount = octaveCount * chromaCount;\n","import assert from 'assert';\nimport { binCount, chromaCount, octaveCount } from './constants';\n\nconst c0 = 16.35; // c0 per https://pages.mtu.edu/~suits/notefreqs.html\n\nexport class Spectrum {\n  constructor(public dbMin: number, public dbMax: number) {}\n\n  static octave = (k: number) => Math.floor(k / chromaCount);\n\n  static chroma = (k: number) => k % chromaCount;\n\n  /**\n   * Compute the frequency of bin k.\n   */\n  static f = (k: number): number => {\n    assert(\n      0 <= k && k < binCount,\n      `Spectrum.f: expected 0 <= k = ${k} < ${binCount}`\n    );\n    const octave = Spectrum.octave(k);\n    const chroma = Spectrum.chroma(k);\n\n    return c0 * 2 ** (octave + chroma / chromaCount);\n  };\n\n  static hue = (k: number) => {\n    const chromaStep = 1 / chromaCount;\n    const octaveStep = chromaStep / octaveCount;\n    return chromaStep * Spectrum.chroma(k) + octaveStep * Spectrum.octave(k);\n  };\n\n  static fmax = c0 * 2 ** binCount;\n\n  /**\n   * Compute the relative pitch of bin k.\n   */\n  static pitch = (k: number) => Spectrum.chroma(k) / (chromaCount - 1);\n}\n"],"names":[],"mappings":";;;;;;;;;;;MAEA;;;YAGa,iBAAiB,gBAAU;UACtC,GAAG,EAAE,GAAG;UACR,KAAK,EAAE,CAAC;UACR,KAAK,EAAE,CAAC;UACR,KAAK,EAAE,GAAG;UACV,KAAK,EAAE,GAAG;SACV;MAEK,MAAM,WAAW,GAAG,EAAE,CAAC;MACvB,MAAM,SAAS,GAAG,CAAC,CAAC;MACpB,MAAM,SAAS,GAAG,CAAC,CAAC;MACpB,MAAM,WAAW,GAAG,SAAS,GAAG,SAAS,CAAC;YACpC,WAAW,gBAAG,KAAI;YAClB,QAAQ,gBAAG,WAAW,GAAG;;MCftC,MAAM,EAAE,GAAG,KAAK,CAAC;AAEjB,YAAa,QAAQ;UACnB,YAAmB,KAAa,EAAS,KAAa;cAAnC,UAAK,GAAL,KAAK,CAAQ;cAAS,UAAK,GAAL,KAAK,CAAQ;WAAI;;MAEnD,eAAM,GAAG,CAAC,CAAS,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;MAEpD,eAAM,GAAG,CAAC,CAAS,KAAK,CAAC,GAAG,WAAW,CAAC;MAE/C;;;MAGO,UAAC,GAAG,CAAC,CAAS;UACnB,MAAM,CACJ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,EACtB,iCAAiC,CAAC,MAAM,QAAQ,EAAE,CACnD,CAAC;UACF,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAClC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAElC,OAAO,EAAE,GAAG,SAAA,CAAC,GAAK,MAAM,GAAG,MAAM,GAAG,WAAW,EAAC,CAAC;MACnD,CAAC,CAAC;MAEK,YAAG,GAAG,CAAC,CAAS;UACrB,MAAM,UAAU,GAAG,CAAC,GAAG,WAAW,CAAC;UACnC,MAAM,UAAU,GAAG,UAAU,GAAG,WAAW,CAAC;UAC5C,OAAO,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC;MAEK,aAAI,GAAG,EAAE,GAAG,SAAA,CAAC,EAAI,QAAQ,CAAA,CAAC;MAEjC;;;MAGO,cAAK,GAAG,CAAC,CAAS,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC;;;;;;"}