{"version":3,"sources":["webpack:///./src/web/overlay.ts","webpack:///./src/web/overlay.html","webpack:///./src/web/overlay.scss?eade","webpack:///./src/web/overlay.scss"],"names":["Controls","constructor","document","createElement","this","hasHover","contains","activeElement","domElement","style","opacity","node","input","Object","values","inputs","disabled","el","querySelector","id","assert","setup","fullscreen","stream","subscribe","newValue","body","requestFullscreen","fullscreenElement","exitFullscreen","selector","onkeydown","event","repeat","target","key","animate","value","mic","innerHTML","html","setupInputs","setupKeyboardShortcuts","querySelectorAll","forEach","onmouseover","onmouseout","module","exports","api","content","__esModule","default","i","options","exported","locals","___CSS_LOADER_API_IMPORT___","push"],"mappings":"mTAKO,MAAMA,EAITC,cAAc,oBAHQC,SAASC,cAAc,QAG/B,mBAFK,GAEL,sBAeC,IACXC,KAAKC,UAAYD,KAAKE,SAASJ,SAASK,gBAhB9B,cAkBP,IAAMH,KAAKI,WAAWC,MAAMC,QAAU,KAlB/B,cAoBP,IAAMN,KAAKI,WAAWC,MAAMC,QAAU,KApB/B,kBAsBMC,GAAeP,KAAKI,WAAWF,SAASK,IAtB9C,qBAwBQ,KAClB,IAAK,IAAMC,KAASC,OAAOC,OAAOC,KAC9B,IAAIH,EAAMI,SAAV,CACA,IAAMC,EAAKb,KAAKc,cAAL,WAAyCN,EAAMO,KAC1DC,IAAOH,EAAD,0CAAwCL,EAAMO,KACpDP,EAAMS,MAAMJ,GAGXF,IAAOO,WAAWN,UACnBD,IAAOO,WAAWC,OAAOC,UAAW,IAAiB,IAAjB,SAAEC,GAAe,EAC7CA,EAAUvB,SAASwB,KAAKC,oBACnBzB,SAAS0B,mBAAmB1B,SAAS2B,qBAnC5C,uBAwC4CC,GACtD1B,KAAKI,WAAWU,cAAiBY,IAzCvB,gCA2CmB,KAC7B5B,SAAS6B,UAAaC,IAClB,IAAIA,EAAMC,SACN7B,KAAKI,WAAWF,SAAS0B,EAAME,QAEnC,OAAQF,EAAMG,KACV,IAAK,IACDpB,IAAOqB,QAAQC,OAAStB,IAAOqB,QAAQC,MACvC,MACJ,IAAK,IACL,IAAK,IACDtB,IAAOuB,IAAID,OAAStB,IAAOuB,IAAID,MAC/B,MACJ,IAAK,QACDtB,IAAOO,WAAWe,OAAStB,IAAOO,WAAWe,UAxDzDjC,KAAKI,WAAWW,GAAK,UACrBf,KAAKI,WAAW+B,UAAYC,IAE5BpC,KAAKqC,cACLrC,KAAKsC,yBAELtC,KAAKI,WACAmC,iBAA8B,8CAC9BC,QAAQ3B,IACLA,EAAG4B,YAAc,IAAMzC,KAAKC,UAAW,EACvCY,EAAG6B,WAAa,IAAM1C,KAAKC,UAAW,O,iBCpBtD0C,EAAOC,QAAU,8vF,mBCAjB,IAAIC,EAAM,EAAQ,GACFC,EAAU,EAAQ,IAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACH,EAAOM,EAAIH,EAAS,MAG9C,IAAII,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSN,EAAIF,EAAOM,EAAIH,EAASI,GAEtBJ,EAAQM,OAASN,EAAQM,OAAS,IAIjDT,EAAOC,QAAUO,G,oBClBjBP,EADkC,EAAQ,EAChCS,EAA4B,IAC9BC,KAAK,CAACX,EAAOM,EAAI,0EAEzBL,EAAQU,KAAK,CAACX,EAAOM,EAAI,w4BAAy4B,KAEl6BN,EAAOC,QAAUA","file":"4.a4871512fe5b5ad4fe23.js","sourcesContent":["import { inputs } from './inputs';\nimport html from './overlay.html';\nimport './overlay.scss';\nimport assert from 'assert';\n\nexport class Controls {\n    readonly domElement = document.createElement('div');\n    private hasHover = false;\n\n    constructor() {\n        this.domElement.id = 'overlay';\n        this.domElement.innerHTML = html;\n\n        this.setupInputs();\n        this.setupKeyboardShortcuts();\n\n        this.domElement\n            .querySelectorAll<HTMLElement>('input, label, i, h2, h1, #allowed_db_range')\n            .forEach(el => {\n                el.onmouseover = () => this.hasHover = true;\n                el.onmouseout = () => this.hasHover = false;\n            });\n    }\n\n    hasAttention = () =>\n        this.hasHover || this.contains(document.activeElement);\n\n    show = () => this.domElement.style.opacity = '1';\n\n    hide = () => this.domElement.style.opacity = '0';\n\n    private contains = (node: Node) => this.domElement.contains(node);\n\n    private setupInputs = () => {\n        for (const input of Object.values(inputs)) {\n            if (input.disabled) continue;\n            const el = this.querySelector<HTMLInputElement>(`#${input.id}`);\n            assert(el, `Did not find element for input #${input.id}`);\n            input.setup(el);\n        }\n\n        if (!inputs.fullscreen.disabled) {\n            inputs.fullscreen.stream.subscribe(({ newValue }) => {\n                if (newValue) document.body.requestFullscreen();\n                else if (document.fullscreenElement) document.exitFullscreen();\n            });\n        }\n    };\n\n    private querySelector = <E extends Element = HTMLElement>(selector: string) =>\n        this.domElement.querySelector<E>(selector);\n\n    private setupKeyboardShortcuts = () => {\n        document.onkeydown = (event: KeyboardEvent) => {\n            if (event.repeat) return;\n            if (this.domElement.contains(event.target as Node)) return;\n\n            switch (event.key) {\n                case ' ':\n                    inputs.animate.value = !inputs.animate.value;\n                    break;\n                case 'm':\n                case 'M':\n                    inputs.mic.value = !inputs.mic.value;\n                    break;\n                case 'Enter':\n                    inputs.fullscreen.value = !inputs.fullscreen.value;\n                    break;\n            }\n        };\n    };\n}\n","module.exports = \"<h1>Stereo</h1>\\n\\n<div id=\\\"inputs\\\">\\n    <section>\\n        <h2 title=\\\"Settings for point generation.\\\">\\n            Point Generation\\n        </h2>\\n        <span>\\n            <label for=\\\"pipe\\\"\\n                title=\\\"A sequence of operations that determines how the points are initialized and change over time.\\\">\\n                Pipe\\n            </label>\\n            <input id=\\\"pipe\\\" />\\n        </span>\\n\\n        <span>\\n            <label for=\\\"theta\\\"\\n                title=\\\"Intended for use in functions of an angle (e.g. sin, cos, tan, R) to avoid repeating the same expression in multiple places.\\\">\\n                Theta\\n            </label>\\n            <input id=\\\"theta\\\" />\\n        </span>\\n    </section>\\n\\n    <section>\\n        <h2 title=\\\"Settings for point color, represented in HSV.\\\">\\n            Color\\n            <a class=\\\"help\\\" target=\\\"_blank\\\"\\n                href=\\\"https://en.wikipedia.org/wiki/HSL_and_HSV#/media/File:HSV_color_solid_cylinder_saturation_gray.png\\\"></a>\\n        </h2>\\n\\n        <span>\\n            <label for=\\\"h\\\" title=\\\"An expression to determine the HSV hue of a point.\\\">\\n                Hue\\n            </label>\\n            <input id=\\\"h\\\" />\\n        </span>\\n\\n        <span>\\n            <label for=\\\"v\\\" title=\\\"An expression to determine the HSV value of a point.\\\">\\n                Value\\n            </label>\\n            <input id=\\\"v\\\" />\\n        </span>\\n    </section>\\n</div>\\n\\n<div id=\\\"media\\\">\\n    <span id=\\\"animate\\\">\\n        <i class=\\\"material-icons on\\\">play_arrow</i>\\n        <i class=\\\"material-icons off\\\">pause</i>\\n    </span>\\n\\n    <span id=\\\"mic\\\">\\n        <i title=\\\"Enable audio analysis. The page will use the browser's microphone to compute the value power and chroma, which describe the volume and musical note of the audio. Each value ranges from 0 to 1.\\\"\\n            class=\\\"material-icons on\\\">\\n            mic\\n        </i>\\n        <i title=\\\"Disable audio analysis.\\\" class=\\\"material-icons off\\\">\\n            mic_off\\n        </i>\\n    </span>\\n\\n    <span id=\\\"allowed_db_range\\\">\\n        <div title=\\\"Minimum volume of analyzed sound. Values below this will be evaluated to 0.\\\">\\n            <span class=\\\"min\\\"></span>dB\\n        </div>\\n\\n        <div id=\\\"allowed_db_range_input\\\">\\n            <input type=\\\"range\\\" multiple min=\\\"-200\\\" max=\\\"0\\\" />\\n        </div>\\n\\n        <div title=\\\"Maximum volumne of analyzed sound. Values above this will be evaluated to 1.\\\">\\n            <span class=\\\"max\\\"></span>dB\\n        </div>\\n    </span>\\n\\n    <div class=\\\"spacer\\\"></div>\\n\\n    <span id=\\\"fullscreen\\\">\\n        <i title=\\\"Enter fullscreen.\\\" class=\\\"material-icons on\\\">\\n            fullscreen\\n        </i>\\n        <i title=\\\"Exit fullscreen.\\\" class=\\\"material-icons off\\\">\\n            fullscreen_exit\\n        </i>\\n    </span>\\n</div>\\n\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./overlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\"]);\n// Module\nexports.push([module.id, \"@media print{#overlay{display:none}@page{margin:0;size:landscape}}#overlay{opacity:0}#overlay [title]{cursor:help}#inputs{align-items:flex-end;box-sizing:border-box;display:flex;flex-flow:column wrap;justify-content:flex-start;padding:0px 16px;position:absolute;right:0;top:0}#inputs span,#inputs i{padding-bottom:8px}#inputs section{align-items:flex-end;display:flex;flex-flow:column wrap;justify-content:flex-start}#media{bottom:0;box-sizing:border-box;display:flex;flex-flow:row wrap;padding:32px;position:absolute;width:100%}#media i.material-icons{cursor:pointer;display:'none';font-size:36px}#allowed_db_range{align-items:center;display:flex;flex-flow:row}#allowed_db_range_input{align-items:center;display:flex;flex-flow:row;margin:0 8px}.spacer{flex:1}a.help{font-size:small;vertical-align:super}a.help::before{content:\\\"?\\\"}a.help:link,a.help:visited,a.help:hover,a.help:active{color:white}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}