{"version":3,"file":"worker-53e248b7.js","sources":["../src/fn/interval.ts","../node_modules/comlink/dist/esm/comlink.mjs","../src/fn/index.ts","../src/fn/cube.ts","../src/fn/sphere.ts","../src/fn/fucked_up_torus.ts","../src/fn/rotator.ts","../src/fn/spiral.ts","../src/fn/stereo.ts","../src/fn/torus.ts","../src/pp.ts","../src/pipe/resolver.ts","../src/pipe/evaluator.ts","../src/pipe/worker.ts"],"sourcesContent":["import assert from 'assert';\n\nimport { Vector } from '../data';\nimport { Fn } from '.';\n\nexport default class Interval implements Fn {\n  readonly domain: number;\n\n  constructor(readonly d: number, readonly a: number[], readonly b: number[]) {\n    assert.equal(a.length, d);\n    assert.equal(b.length, d);\n    this.domain = d;\n  }\n\n  static nPerLevel = (d: number, n: number) => {\n    return Math.round(Math.pow(n, 1 / d));\n  };\n\n  /**\n   * @param x A vector of length this.domain contained in the interval [0, 1].\n   * @returns A mapping of the vector into this interval.\n   */\n  fn = (x: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, b, d } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    for (let i = 0; i < d; i++) {\n      y[i] = a[i] + x[i] * (b[i] - a[i]);\n    }\n    return y;\n  };\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { d, fn } = this;\n    n = Interval.nPerLevel(d, n);\n    const points: number[][] = [[]];\n    let i = 0;\n\n    while (points.length && i < limit) {\n      const p = points.pop()!;\n      if (p.length < d) {\n        points.push(...successors(p));\n      } else if (i++ >= offset) {\n        yield fn(p);\n      }\n    }\n\n    function* successors(p: number[]): Generator<number[]> {\n      for (let i = 0; i < n; i++) {\n        yield [...p, i / n];\n      }\n    }\n  };\n}\n","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwSet = new WeakSet();\r\nconst transferHandlers = new Map([\r\n    [\r\n        \"proxy\",\r\n        {\r\n            canHandle: obj => obj && obj[proxyMarker],\r\n            serialize(obj) {\r\n                const { port1, port2 } = new MessageChannel();\r\n                expose(obj, port1);\r\n                return [port2, [port2]];\r\n            },\r\n            deserialize: (port) => {\r\n                port.start();\r\n                return wrap(port);\r\n            }\r\n        }\r\n    ],\r\n    [\r\n        \"throw\",\r\n        {\r\n            canHandle: obj => throwSet.has(obj),\r\n            serialize(obj) {\r\n                const isError = obj instanceof Error;\r\n                let serialized = obj;\r\n                if (isError) {\r\n                    serialized = {\r\n                        isError,\r\n                        message: obj.message,\r\n                        stack: obj.stack\r\n                    };\r\n                }\r\n                return [serialized, []];\r\n            },\r\n            deserialize(obj) {\r\n                if (obj.isError) {\r\n                    throw Object.assign(new Error(), obj);\r\n                }\r\n                throw obj;\r\n            }\r\n        }\r\n    ]\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            returnValue = e;\r\n            throwSet.add(e);\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch(e => {\r\n            throwSet.add(e);\r\n            return e;\r\n        })\r\n            .then(returnValue => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map(p => p.toString())\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map(p => p.toString())\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map(p => p.toString()),\r\n                value\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        }\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context)\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue\r\n                },\r\n                transferables\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value\r\n        },\r\n        transferCache.get(value) || []\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise(resolve => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import assert from 'assert';\nimport { inf } from '../constants';\nimport { Vector } from '../data';\n\nexport interface Fn {\n  readonly d: number;\n  readonly domain: number;\n  fn(x: Vector, y?: Vector): Vector;\n  sample(n: number, offset: number, limit: number): Generator<Vector>;\n}\n\nexport class CompositeFn implements Fn {\n  private readonly x: Vector;\n  private readonly y: Vector;\n  constructor(readonly fns: Fn[]) {\n    assert(fns.length, 'fns cannot be empty');\n\n    const length = Math.max(this.domainMax, this.dMax);\n    this.x = new Float32Array(length);\n    this.y = new Float32Array(length);\n  }\n\n  get first() {\n    return this.fns[0];\n  }\n\n  get last() {\n    return this.fns[this.fns.length - 1];\n  }\n\n  get domain() {\n    return this.first.domain;\n  }\n\n  get d() {\n    return this.last.d;\n  }\n\n  get domainMax() {\n    return this.fns.reduce((max, f) => Math.max(f.domain, max), 0);\n  }\n\n  get dMax() {\n    return this.fns.reduce((max, f) => Math.max(f.d, max), 0);\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const { fns, d } = this;\n    const [first, ...rest] = fns;\n    if (fns.length == 0) return [];\n\n    for (const x of first.sample(n, offset, limit)) {\n      this.x.set(x);\n      if (rest.length) {\n        CompositeFn.apply(rest, this.x, this.y);\n      } else {\n        this.y.set(x);\n      }\n      yield this.y.subarray(0, d);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { fns, domain, d } = this;\n    assert.equal(x.length, domain);\n    assert.equal(y.length, d);\n\n    this.x.set(x);\n    CompositeFn.apply(fns, this.x, this.y);\n    y.set(this.y.subarray(0, d));\n    return y;\n  };\n\n  private static apply = (fns: Fn[], x: Vector, y: Vector) => {\n    assert.equal(x.length, y.length);\n    for (const f of fns) {\n      f.fn(x.subarray(0, f.domain), y.subarray(0, f.d));\n      for (let i = 0; i < y.length; i++) {\n        if (!isFinite(y[i])) y[i] = Math.sign(y[i]) * inf;\n        if (isNaN(y[i])) y[i] = 0;\n      }\n      x.set(y);\n    }\n  };\n\n  static Builder = class {\n    private readonly fns: Fn[] = [];\n\n    get d() {\n      return this.last.d;\n    }\n\n    get last() {\n      return this.fns[this.fns.length - 1];\n    }\n\n    add = (fn: Fn) => {\n      const { fns, last } = this;\n      if (last && fn.domain !== last.d) {\n        throw new Error(\n          `Cannot add ${fn} to composite, because its domain is not ${last.d}`\n        );\n      }\n      fns.push(fn);\n      return this;\n    };\n\n    build = () => {\n      return new CompositeFn(this.fns);\n    };\n  };\n}\n","import { Vector } from '../data';\nimport Interval from './interval';\nimport { Fn } from '.';\n\nexport default class Cube implements Fn {\n  private readonly interval: Interval;\n\n  constructor(readonly d: number, readonly l: number) {\n    this.interval = new Interval(\n      d,\n      new Array(d).fill(-l / 2),\n      new Array(d).fill(l / 2)\n    );\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  fn = (x: Vector, y?: Vector) => this.interval.fn(x, y);\n\n  sample = (n: number, offset: number, limit: number) =>\n    this.interval.sample(n, offset, limit);\n}\n","import assert from 'assert';\nimport { Fn } from '.';\nimport { Vector } from '../data';\nimport Cube from './cube';\n\nexport default class Sphere implements Fn {\n  private readonly root: Float32Array;\n\n  constructor(readonly d: number, private readonly r: number) {}\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, r } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    y[0] = r;\n    for (let i = 1; i < y.length; i++) {\n      const sin = Math.sin(phi[i - 1]);\n      const cos = Math.cos(phi[i - 1]);\n      y[i] = y[0] * sin;\n      y[0] *= cos;\n    }\n\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\n// This shape does not implement a torus. It used to,\n// but then I changed the way Rotator works, which\n// changed the way that the points of the sphere are\n// distributed, making the translation step behave incorrectly\n// Still makes a cool shape though, so keeping it\nexport default class FuckedUpTorus implements Fn {\n  private readonly sphere: Sphere;\n  private readonly circle: Sphere;\n\n  constructor(readonly d: number, readonly r: number, readonly t: number) {\n    this.sphere = new Sphere(d, t);\n    this.circle = new Sphere(2, r);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { domain, d, sphere, circle } = this;\n    assert.equal(phi.length, domain);\n    assert.equal(y.length, d);\n    sphere.fn(phi, y);\n    const q = circle.fn(phi.subarray(d - 2));\n    y[0] += q[0];\n    y[d - 1] += q[1];\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport { Fn } from '.';\n\nexport default class Rotator implements Fn {\n  readonly r0: number;\n  readonly r1: number;\n\n  constructor(\n    readonly d: number,\n    readonly theta: number,\n    readonly d0: number,\n    readonly d1: number,\n    readonly f0: (theta: number) => number = Math.cos,\n    readonly f1: (theta: number) => number = Math.sin\n  ) {\n    this.r0 = f0(theta);\n    this.r1 = f1(theta);\n  }\n\n  get domain() {\n    return this.d;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const p of cube.sample(n, offset, limit)) {\n      yield this.fn(p);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, d0, d1, r0, r1 } = this;\n    assert.equal(x.length, d);\n    assert.equal(y.length, d);\n    y.set(x);\n\n    const a = x[d0],\n      b = x[d1];\n    y[d0] = a * r0 - b * r1;\n    y[d1] = a * r1 + b * r0;\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Sphere from './sphere';\nimport { Fn } from '.';\n\nexport default class Spiral implements Fn {\n  private readonly sphere: Sphere;\n\n  constructor(readonly d: number, readonly a: number[], readonly k: number[]) {\n    this.sphere = new Sphere(d, 1);\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 4 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (phi: Float32Array, y: Vector = new Float32Array(this.d)) => {\n    const { a, k, domain, d } = this;\n    assert.equal(phi.length, d - 1);\n    assert.equal(y.length, d);\n\n    this.sphere.fn(phi, y);\n    let x = 0;\n    for (let i = 0; i < domain; i++) {\n      x += k[i] * phi[i];\n    }\n    const r = Math.exp(x);\n    for (let i = 0; i < d; i++) {\n      y[i] = y[i] * a[i] * r;\n    }\n    return y;\n  };\n}\n","import assert from 'assert';\n\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport { Fn } from '.';\n\nexport default class Stereo implements Fn {\n  private readonly fromTemp: Vector;\n  private readonly toTemp: Vector;\n\n  constructor(private readonly from: number, private readonly to: number) {\n    this.fromTemp = new Float32Array(Math.max(from, to));\n    this.toTemp = new Float32Array(Math.max(from, to));\n  }\n\n  get domain() {\n    return this.from;\n  }\n\n  get d() {\n    return this.to;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (x: Vector, y: Vector = new Float32Array(this.to)) => {\n    let { from, to, fromTemp, toTemp } = this;\n    assert.equal(x.length, from);\n    assert.equal(y.length, to);\n\n    if (from === to) {\n      y.set(x);\n      return y;\n    }\n\n    fromTemp.set(x);\n\n    while (from < to) {\n      Stereo.up(fromTemp.subarray(0, from), toTemp.subarray(0, ++from));\n      fromTemp.set(toTemp);\n    }\n\n    while (from > to) {\n      Stereo.down(fromTemp.subarray(0, from), toTemp.subarray(0, --from));\n      fromTemp.set(toTemp);\n    }\n\n    y.set(toTemp.subarray(0, to));\n    return y;\n  };\n\n  static up = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length + 1);\n    const n2 = norm2(x);\n    const divisor = n2 + 1;\n    temp[0] = (n2 - 1) / divisor;\n    for (let i = 1; i <= x.length; i++) {\n      temp[i] = (2 * x[i - 1]) / divisor;\n    }\n  };\n\n  static down = (x: Vector, temp: Vector) => {\n    assert.equal(temp.length, x.length - 1);\n    for (let i = 0; i < temp.length; i++) {\n      temp[i] = x[i + 1] / (1 - x[0]);\n    }\n  };\n}\n\nconst norm2 = (x: Vector) => {\n  let result = 0;\n  for (let i = 0; i < x.length; i++) {\n    result += x[i] * x[i];\n  }\n  return result;\n};\n","import assert from 'assert';\nimport { Fn } from '.';\nimport { Vector } from '../data';\nimport Cube from './cube';\nimport Rotator from './rotator';\nimport Sphere from './sphere';\n\nexport default class Torus implements Fn {\n  constructor(readonly d: number, readonly r: Float32Array) {\n    assert(d > 2, `torus: expected d = ${d} > 2`);\n    assert(\n      r.length == this.domain,\n      `torus: expected r.length = ${r.length} == ${this.domain}`\n    );\n  }\n\n  get domain() {\n    return this.d - 1;\n  }\n\n  sample = function*(n: number, offset: number, limit: number) {\n    const cube = new Cube(this.domain, 2 * Math.PI);\n    for (const phi of cube.sample(n, offset, limit)) {\n      yield this.fn(phi);\n    }\n  };\n\n  fn = (theta: Vector, y: Vector = new Float32Array(this.d)) => {\n    const { d, domain, r } = this;\n    const circle = new Sphere(2, r[0]);\n    circle.fn(theta.subarray(0, 1), y.subarray(0, 2));\n    for (let i = 1; i < domain; i++) {\n      y[0] += r[i];\n      const rotator = new Rotator(d, theta[i], i - 1, i + 1);\n      rotator.fn(y, y);\n    }\n    return y;\n  };\n}\n","export const pp = (a: any, p = 2) => JSON.stringify(a, null, p);\n","import { CompositeFn, Fn } from '../fn';\nimport Cube from '../fn/cube';\nimport FuckedUpTorus from '../fn/fucked_up_torus';\nimport Rotator from '../fn/rotator';\nimport Sphere from '../fn/sphere';\nimport Spiral from '../fn/spiral';\nimport Stereo from '../fn/stereo';\nimport Torus from '../fn/torus';\nimport { Scope } from '../params/scope';\nimport { pp } from '../pp';\nimport {\n  AccessNode,\n  ArithNode,\n  FnNode,\n  PipeNode,\n  Scalar,\n  StepNode,\n  Value\n} from './grammar.pegjs';\nimport { UnaryOperator } from './types';\n\ntype Resolution = {\n  n: number;\n  fn: CompositeFn;\n};\n\nfunction assert(cond: boolean, scope: Scope, msg: () => string) {\n  if (!cond) throw { message: msg(), scope };\n}\n\nexport class Resolver {\n  constructor(private readonly scope: Scope) {}\n\n  resolve(node: PipeNode): Resolution;\n  resolve(node: Scalar, hint: 'number'): number;\n  resolve(node: Scalar, hint: 'function'): Function;\n  resolve(node: Scalar): Value;\n  resolve(node: any, hint?: any): any {\n    let value;\n    switch (node.kind) {\n      case 'pipe':\n        value = this.resolvePipe(node);\n        break;\n      case 'arith':\n        value = this.resolveArith(node);\n        break;\n      case 'number':\n        value = node.value;\n        break;\n      case 'fn':\n        value = this.resolveFn(node);\n        break;\n      case 'access':\n        value = this.resolveAccess(node);\n        break;\n      case 'id':\n        value = this.resolveId(node.id);\n        break;\n      case 'paren':\n        value = this.resolve(node.scalar);\n        break;\n    }\n\n    if (hint) {\n      const actual = typeof value;\n      this.expect(actual === hint, node, `be a ${hint}`, `was ${actual}`);\n    }\n\n    if (hint === 'number') {\n      this.expect(!isNaN(value), node, 'be a number', 'was NaN');\n    }\n\n    return value;\n  }\n\n  private resolvePipe = (pipe: PipeNode): Resolution => {\n    const [head, ...tail] = pipe.steps;\n    const fn = new CompositeFn.Builder().add(this.resolveStep(pipe.d0, head));\n\n    for (let i = 0; i < tail.length; i++) {\n      fn.add(this.resolveStep(fn.d, tail[i]));\n    }\n\n    return { n: pipe.n, fn: fn.build() };\n  };\n\n  private resolveStep = (d0: number, { type, args }: StepNode): Fn => {\n    const d = ranges[type](d0);\n    return funs[type](d, ...args.map(a => this.resolve(a)));\n  };\n\n  private resolveFn = ({ name, args }: FnNode): number => {\n    const fn = Math[name];\n    const type = typeof fn;\n    this.expect(\n      type === 'function',\n      name,\n      `resolve to a function`,\n      `was ${type}`\n    );\n    return fn(...args.map(a => this.resolve(a)));\n  };\n\n  private resolveAccess = ({ id, index }: AccessNode): number => {\n    const scope = this.scope;\n    const target = scope[id];\n    this.assert(target, () => `failed to resolve access target ${id}`);\n    if (index.kind === 'id' && index.id in target) {\n      // TODO works in practice, but not sure if corret\n      return target[index.id];\n    } else {\n      return target[this.resolve(index)];\n    }\n  };\n\n  private resolveId = (id: string): Value => {\n    let value;\n    if (id in this.scope) {\n      value = this.scope[id];\n    } else if (id in Math) {\n      value = Math[id];\n    } else {\n      const idu = id.toUpperCase();\n      if (idu in Math) value = Math[idu];\n    }\n\n    this.assert(value, () => `failed to resolve id ${id}`);\n\n    return value;\n  };\n\n  private resolveArith = ({ op, operands }: ArithNode) => {\n    const [a, b] = operands.map(a => this.resolve(a, 'number'));\n    return ops[op](a, b);\n  };\n\n  private isNodeDynamic = (node: Scalar): boolean => {\n    switch (node.kind) {\n      case 'fn':\n        return node.args.some(this.isNodeDynamic);\n      case 'id':\n        return typeof this.resolve(node) === 'number';\n      case 'arith':\n        return node.operands.some(this.isNodeDynamic);\n      default:\n        return false;\n    }\n  };\n\n  private assert(cond: boolean, msg: () => string) {\n    assert(cond, this.scope, msg);\n  }\n\n  private expect(cond: boolean, node: any, expected: string, actual: string) {\n    this.assert(\n      cond,\n      () => `Expected ${pp(node, 0)} to ${expected}, but ${actual}`\n    );\n  }\n}\n\nconst ops: { [op: string]: (a: number, b: number) => number } = {\n  '+': (a, b) => a + b,\n  '-': (a, b) => (b == null ? -a : a - b),\n  '*': (a, b) => a * b,\n  '/': (a, b) => a / b,\n  '**': (a, b) => a ** b,\n  '^': (a, b) => a ** b\n};\n\nconst funs: { [op: string]: (d: number, ...rest: any) => Fn } = {\n  cube: (d, l) => new Cube(d, l),\n  sphere: (d, r: number) => new Sphere(d, r),\n  spiral: (d, a: number, k: number) =>\n    new Spiral(d, new Array(d).fill(a), new Array(d - 1).fill(k)),\n  torus: (d, ...r: number[]) => new Torus(d, new Float32Array(r)),\n  fucked_up_torus: (d, r: number, t: number) => new FuckedUpTorus(d, r, t),\n  rotate: (\n    d: number,\n    theta: number,\n    d0: number,\n    d1: number,\n    f0: UnaryOperator = Math.cos,\n    f1: UnaryOperator = Math.sin\n  ) => {\n    assert(\n      0 <= d0 && d0 < d,\n      null,\n      () => `rotate: Expected 0 <= d0 = ${d0} < d = ${d}`\n    );\n    assert(\n      0 <= d1 && d1 < d,\n      null,\n      () => `rotate: Expected 0 <= d1 = ${d1} < d = ${d}`\n    );\n    return new Rotator(d, theta, d0, d1, f0, f1);\n  },\n  stereo: (d, to) => new Stereo(d, to)\n};\n\ntype Funs = typeof funs;\n\ntype Ranges = {\n  [P in keyof Funs]: (domain: number) => number;\n};\n\nconst ranges: Ranges = {\n  cube: domain => domain,\n  sphere: domain => domain + 1,\n  spiral: domain => domain + 1,\n  torus: domain => domain + 1,\n  fucked_up_torus: domain => domain + 1,\n  rotate: domain => domain,\n  r: domain => domain,\n  stereo: domain => domain\n};\n","import assert from 'assert';\nimport { Vector } from '../data';\nimport { CompositeFn } from '../fn';\nimport { HSV } from '../params';\nimport { Scope } from '../params/scope';\nimport { PipeNode, Scalar } from './grammar.pegjs';\nimport { Resolver } from './resolver';\nimport { Chunk } from './types';\n\nconst { abs, min, sign } = Math;\n\nexport class EvaluationError extends Error {\n  constructor(readonly context: string, readonly cause: Error) {\n    super(cause?.message);\n  }\n\n  get name() {\n    return 'EvaluationError';\n  }\n}\n\nexport class Evaluator {\n  private readonly n: number;\n  private readonly fn: CompositeFn;\n  private readonly offset: number;\n  private readonly size: number;\n  private readonly resolver: Resolver;\n\n  constructor(\n    private readonly scope: Scope,\n    ast: PipeNode,\n    private readonly hsv: HSV,\n    chunk: Chunk\n  ) {\n    this.resolver = new Resolver(scope);\n    const { n, fn } = this.resolvePipe(ast);\n    const offset = chunk.offset;\n    const size = chunk.size;\n    const limit = offset + size;\n    assert(offset >= 0, `offset must be non-negative; got ${offset}`);\n    assert(\n      limit <= n,\n      `offset + size must be <= n; got ${offset} + ${size} = ${limit} > ${n}`\n    );\n\n    this.n = n;\n    this.fn = fn;\n    this.offset = offset;\n    this.size = limit - offset;\n  }\n\n  private get d() {\n    return this.fn.d;\n  }\n\n  private resolvePipe(node: PipeNode) {\n    try {\n      return this.resolver.resolve(node);\n    } catch ({ message, scope }) {\n      throw { context: 'pipe', message, scope };\n    }\n  }\n\n  private resolveNumber(context: string, node: Scalar) {\n    try {\n      return this.resolver.resolve(node, 'number');\n    } catch ({ message, scope }) {\n      throw { context, message, scope };\n    }\n  }\n\n  iterate = () => {\n    const position = this.computePosition();\n    const color = this.computeColor(position);\n\n    return {\n      d: this.d,\n      position,\n      color\n    };\n  };\n\n  private computePosition = () => {\n    const { fn, n, d, offset, size } = this;\n    const position = new Float32Array(d * size);\n\n    let i = 0;\n    for (const y of fn.sample(n, offset, offset + size)) {\n      position.set(y, d * i++);\n    }\n\n    return position;\n  };\n\n  private computeColor = (position: Vector) => {\n    const { d, hsv, size } = this;\n    const color = new Float32Array(3 * size);\n    const { extent } = this.scope;\n\n    for (let i = 0; i < size; i++) {\n      const p = position.subarray(i * d, (i + 1) * d);\n      this.scope.p = p.map((pk, k) => {\n        const m = extent[k];\n        return m ? sign(pk) * min(1, abs(pk) / m) : 0;\n      });\n      this.scope.i = i;\n      const h = 360 * this.resolveNumber('h', hsv.h);\n      const s = this.resolveNumber('s', hsv.s);\n      const v = this.resolveNumber('v', hsv.v);\n      const rgb = hsv2rgb(h, s, v);\n\n      color.set(rgb, i * 3);\n    }\n\n    return color;\n  };\n}\n\nfunction hsv2rgb(h: number, s: number, v: number): [number, number, number] {\n  // source: https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB\n  h = Math.max(0, Math.min(360, h));\n  s = Math.max(0, Math.min(1, s));\n  v = Math.max(0, Math.min(1, v));\n\n  const hprime = h / 60;\n  const c = v * s;\n  const x = c * (1 - abs((hprime % 2) - 1));\n  const m = v - c;\n  let rgb: [number, number, number];\n\n  if (hprime <= 1) {\n    rgb = [c, x, 0];\n  } else if (hprime <= 2) {\n    rgb = [x, c, 0];\n  } else if (hprime <= 3) {\n    rgb = [0, c, x];\n  } else if (hprime <= 4) {\n    rgb = [0, x, c];\n  } else if (hprime <= 5) {\n    rgb = [x, 0, c];\n  } else if (hprime <= 6) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  rgb.forEach((vi, i) => (rgb[i] = vi + m));\n\n  return rgb;\n}\n","import { expose } from 'comlink';\nimport { Params } from '../params';\nimport { Evaluator } from './evaluator';\nimport { Chunk } from './types';\n\nconst worker = {\n  iterate: (params: Params, chunk: Chunk) => {\n    const evaluator = new Evaluator(\n      params.scope,\n      params.pipe,\n      params.hsv,\n      chunk\n    );\n    return evaluator.iterate();\n  }\n};\n\nexport type Worker = typeof worker;\n\nexport const newWorker = () => new Worker('/stereo/pipe/worker.js');\n\nexpose(worker);\n"],"names":["assert","inf"],"mappings":"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"}